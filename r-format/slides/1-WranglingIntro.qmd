---
title: "Data Wrangling"
subtitle: "Intro"
format:
  revealjs:
    smaller: true
---

```{r setup, include=FALSE}
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
	echo = FALSE,
	message = FALSE,
	warning = FALSE,
	cache = TRUE
)

```

# Brief Outline {.bigger}

Data Wrangling offers the flexibility of collaboration with other formats.

![[Data Wrangling Flowchart](https://r4ds.had.co.nz/wrangle-intro.html) by Hadley Wickham and Garrett Grolemund](images/data-science-wrangle.png){width="480px"}


+ Reading in files from various formats (.xls, .xlsx, .csv, .txt, .sps, .xport)
+ Summarizing Data using dplyr (Toolbox of data cleaning function)
+ Tidy Data for future analyses and reproducibility
+ Joining Data from different Data Sources

::: notes
One of the main reasons for data wrangling is to be able to use any type of data.
:::

# What is Data Wrangling? {.smaller}

**Data wrangling** can be defined as the process of cleaning, organizing, and transforming raw data into the desired format for analysts to use for prompt decision-making. Also known as data cleaning.

![R knowledge Data Wrangling, by [Allison Horst](https://www.allisonhorst.com/)](images/data_wrangling.png){width="480px"}


# Why do you need "Data Wrangling" Skills?

- Improve data usability by converting raw data into a compatible format for the end system

- Quickly build data flows within an intuitive user interface 

- Schedule and automate the data-flow process

- Integrate various types of information and their sources (like databases, web services, files, etc.)

- Process very large volumes of data easily and easily share data-flow techniques.

[Source](https://www.simplilearn.com/data-wrangling-article#:~:text=Data%20wrangling%20helps%20to%20improve,automate%20the%20data%2Dflow%20process)


# Messy data

 *Happy families are all alike; every unhappy family is unhappy in its own way. - Leo Tolstoy*  

![
Comparison of work benches, by [Allison Horst](https://www.allisonhorst.com/)](images/tidy-data.jpg){width="600px" fig-align="center"}


::: notes

For those of you that were in the graphics lecture, this will be a bit of a review. 

:::


# Messy data

 *Happy families are all alike; every unhappy family is unhappy in its own way. - Leo Tolstoy*  


**Five main ways tables of data tend not to be tidy:**

1. Column headers are values, not variable names.

2. Multiple variables are stored in one column.

3. Variables are stored in both rows and columns.

4. Multiple types of observational units are stored in the same table.

5. A single observational unit is stored in multiple tables.


# Motivation

![Make Friends with Tidy Data, by [Allison Horst](https://www.allisonhorst.com/)](images/featured_tidydata.jpeg){fig-alt="Making Friends with Tidy Data" width="600px"}


# Extendend Outline {.inverse}

READING FILE TYPES
- What file types can be read in with R?
- Reading in different file types
- Formatting your data: A tidy data discussion    
(Review from Graphics Lecture)

DPLYR PACKAGE
- `filter`, `mutate`, `select`, `summarise`, `group by`, and `arrange`

TIDYR PACKAGES
- What is tidy data?
- pivot longer, pivot wider and separate functions
- `lubridate` package basics

JOINING DATASETS
- Basic set theory logic (joining/combining datasets)


