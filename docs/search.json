[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "r-graphics/slides/5-PolishingPlots.html#built-in-themes",
    "href": "r-graphics/slides/5-PolishingPlots.html#built-in-themes",
    "title": "Data Visualization",
    "section": "Built-In Themes",
    "text": "Built-In Themes"
  },
  {
    "objectID": "r-graphics/slides/5-PolishingPlots.html#other-themes-ggthemes-a-ggplot2-extension",
    "href": "r-graphics/slides/5-PolishingPlots.html#other-themes-ggthemes-a-ggplot2-extension",
    "title": "Data Visualization",
    "section": "Other Themes: ggthemes a ggplot2 extension",
    "text": "Other Themes: ggthemes a ggplot2 extension"
  },
  {
    "objectID": "r-graphics/slides/5-PolishingPlots.html#setting-themes",
    "href": "r-graphics/slides/5-PolishingPlots.html#setting-themes",
    "title": "Data Visualization",
    "section": "Setting Themes",
    "text": "Setting Themes\nYou can globally set a theme with the theme_set() function:\n\ntheme_set(theme_bw()) #&lt;&lt;\nggplot(mtcars, aes(x = wt, y = mpg, colour = gear)) + \n  geom_point()"
  },
  {
    "objectID": "r-graphics/slides/5-PolishingPlots.html#elements-in-a-theme",
    "href": "r-graphics/slides/5-PolishingPlots.html#elements-in-a-theme",
    "title": "Data Visualization",
    "section": "Elements in a theme",
    "text": "Elements in a theme\nThe function theme() is used to control non-data parts of the graph including:\n\nLine elements: axis lines, minor and major grid lines, plot panel border, axis ticks background color, etc.\n\nText elements: plot title, axis titles, legend title and text, axis tick mark labels, etc.\n\nRectangle elements: plot background, panel background, legend background, etc.\n\nThere is a specific function to modify each of these three elements :\n\nelement_line() to modify the line elements of the theme\nelement_text() to modify the text elements\nelement_rect() to change the appearance of the rectangle elements\nelement_blank() to draw nothing and assign no space\n\nNote: rel() is used to specify sizes relative to the parent, margins() is used to specify the margins of elements."
  },
  {
    "objectID": "r-graphics/slides/5-PolishingPlots.html#modifying-a-plot",
    "href": "r-graphics/slides/5-PolishingPlots.html#modifying-a-plot",
    "title": "Data Visualization",
    "section": "Modifying a plot",
    "text": "Modifying a plot\n\np1 &lt;- ggplot(mpg) + \n  geom_bar(aes(x = class, colour = manufacturer, fill = manufacturer) ) \n\np2 &lt;- p1 + #&lt;&lt;\n  theme_classic() + \n  ## modify plot background\n  theme(plot.background = element_rect(fill = \"lightskyblue1\",colour = \"pink\",size = 0.5, linetype = \"longdash\")) #&lt;&lt;"
  },
  {
    "objectID": "r-graphics/slides/5-PolishingPlots.html#plot-legends",
    "href": "r-graphics/slides/5-PolishingPlots.html#plot-legends",
    "title": "Data Visualization",
    "section": "Plot Legends",
    "text": "Plot Legends\n\np3 &lt;- p2 + \n  theme(\n  ### move and modify legend \n  legend.title = element_blank(), #&lt;&lt;\n  legend.position = \"top\", #&lt;&lt;\n  legend.key = element_rect(fill = \"lightskyblue1\", color = \"lightskyblue1\"), #&lt;&lt;\n  legend.background = element_rect( fill = \"lightskyblue1\",color = \"pink\", size = 0.5,linetype = \"longdash\") #&lt;&lt;\n  )"
  },
  {
    "objectID": "r-graphics/slides/5-PolishingPlots.html#modifying-axes",
    "href": "r-graphics/slides/5-PolishingPlots.html#modifying-axes",
    "title": "Data Visualization",
    "section": "Modifying Axes",
    "text": "Modifying Axes\n\np4 &lt;- p3 + theme(\n  ### remove axis ticks\n  axis.ticks=element_blank(), #&lt;&lt;\n  ### modify axis lines\n  axis.line.y = element_line(colour = \"pink\", size = 1, linetype = \"dashed\"),#&lt;&lt;\n  axis.line.x = element_line(colour = \"pink\", size = 1.2, linetype = \"dashed\") #&lt;&lt;\n  )"
  },
  {
    "objectID": "r-graphics/slides/5-PolishingPlots.html#plot-labels",
    "href": "r-graphics/slides/5-PolishingPlots.html#plot-labels",
    "title": "Data Visualization",
    "section": "Plot Labels",
    "text": "Plot Labels\nCan be modified in several ways: - labs(), xlab(), ylab(), ggtitle() - You can also set axis and legend labels in the individual scales (using the first argument, the name) e.g. scale_x_continuous() .\n\np5 &lt;- p4 + \n  labs(x = \"Class of car\", #&lt;&lt;\n       y = \"\", #&lt;&lt;\n       title = \"Cars by class and manufacturer\", #&lt;&lt;\n       subtitle = \"With a custom theme!!\") #&lt;&lt;"
  },
  {
    "objectID": "r-graphics/slides/5-PolishingPlots.html#zooming",
    "href": "r-graphics/slides/5-PolishingPlots.html#zooming",
    "title": "Data Visualization",
    "section": "Zooming",
    "text": "Zooming\n\np &lt;- ggplot(mtcars, aes(x = wt, y = mpg, colour = gear)) + \n  geom_point() \n\np_zoom_in &lt;- p + \n  xlim(2, 4) + #&lt;&lt;\n  ylim(10, 25) #&lt;&lt;\n\np_zoom_out &lt;- p + \n  scale_x_continuous(limits = c(0,7)) + #&lt;&lt;\n  scale_y_continuous(limits = c(0, 45)) #&lt;&lt;"
  },
  {
    "objectID": "r-graphics/slides/5-PolishingPlots.html#plotly",
    "href": "r-graphics/slides/5-PolishingPlots.html#plotly",
    "title": "Data Visualization",
    "section": "Plotly",
    "text": "Plotly\n\np &lt;- ggplot(mtcars, aes(x = wt, y = mpg, colour = gear)) + \n  geom_point() +\n  scale_color_locuszoom()\n\nlibrary(plotly) #&lt;&lt;\nggplotly(p) #&lt;&lt;"
  },
  {
    "objectID": "r-graphics/slides/5-PolishingPlots.html#saving-your-work",
    "href": "r-graphics/slides/5-PolishingPlots.html#saving-your-work",
    "title": "Data Visualization",
    "section": "Saving your Work",
    "text": "Saving your Work\nWe can save the results of a plot to a file (as an image) using the ggsave() function:\n\np1 &lt;- ggplot(mtcars, aes(x = wt, y = mpg, colour = gear)) + \n  geom_point()\n\nggsave(\"mpg_by_wt.pdf\", plot = p1) #&lt;&lt;"
  },
  {
    "objectID": "r-graphics/slides/5-PolishingPlots.html#your-turn",
    "href": "r-graphics/slides/5-PolishingPlots.html#your-turn",
    "title": "Data Visualization",
    "section": "Your Turn",
    "text": "Your Turn\n\nCreate a scatterplot of bill length versus bill width from the penguins and color by species.\nUse the black and white theme\nClean up axis labels and include an informative title.\nCapitalize legend title and change the color palette from default.\nMove the legend to the bottom and set aspect ratio to 1.\nSave your plot to a pdf file and open it in a pdf viewer.\nSave a png of the same scatterplot.\nEmbed the png into MS word or another editor.\n\n\ninstall.packages(\"palmerpenguins\")\ndata(penguins, package = \"palmerpenguins\")\nhead(penguins)\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#section",
    "href": "r-graphics/slides/1-GraphicsIntro.html#section",
    "title": "Data Visualization",
    "section": "",
    "text": "R knowledge rollercoaster, by Allison Horst"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#why-visualize",
    "href": "r-graphics/slides/1-GraphicsIntro.html#why-visualize",
    "title": "Data Visualization",
    "section": "Why visualize?",
    "text": "Why visualize?\nWhat are graphics useful for? + Data cleaning + Exploring data structure + Communicating Information\nVisualization offers an alternative way of communicating numbers\n\nNapoleon March Map by Charles Joseph Minard\nOne of the main reasons for visualization is to communicate information.\nIn 1812, Napoleon marched to Moscow in order to conquer the city. It was a disaster: having started with around 470,000 soldiers, he returned with just 10,000. This chart tells the story of that campaign and has become one of the most famous visualizations of all time. The map details the out-and-back journey of Napoleon’s troops. The width of the line represents the total number of soldiers and the color represents the direction (yellow for towards Moscow, black for the return trip). Below the central visualization is also a simple temperature line graph illustrating the rapidly dropping winter cold. It is effective, detailed, and paints a staggering picture of the journey’s devastation."
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#tables-and-lists-vs.-charts-and-graphs",
    "href": "r-graphics/slides/1-GraphicsIntro.html#tables-and-lists-vs.-charts-and-graphs",
    "title": "Data Visualization",
    "section": "Tables and lists vs. Charts and graphs",
    "text": "Tables and lists vs. Charts and graphs\n\n\n\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n5.0\n3.3\n1.4\n0.2\nsetosa\n\n\n7.0\n3.2\n4.7\n1.4\nversicolor\n\n\n6.4\n3.2\n4.5\n1.5\nversicolor\n\n\n6.9\n3.1\n4.9\n1.5\nversicolor\n\n\n5.7\n2.8\n4.1\n1.3\nversicolor\n\n\n6.3\n3.3\n6.0\n2.5\nvirginica\n\n\n5.8\n2.7\n5.1\n1.9\nvirginica\n\n\n7.1\n3.0\n5.9\n2.1\nvirginica\n\n\n\n\n\n\nConsider this thought experiment: You have a simple data set - 2 variables, 500 observations. You want to get a sense of how the variables relate to each other. You can do one of the following options:\n\nPrint out the data set\nCreate some summary statistics of each variable and perhaps the covariance between the two variables\nDraw a scatter plot of the two variables\n\nWhich one would you rather use? Why?\nHere we see the iris data set in table format - contains measurements (sepal length, sepal width, petal length, and petal width) about 3 different iris species. Looking at the table, we can not easily process the relationship between the measurements and species."
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#tables-and-lists-vs.-charts-and-graphs-1",
    "href": "r-graphics/slides/1-GraphicsIntro.html#tables-and-lists-vs.-charts-and-graphs-1",
    "title": "Data Visualization",
    "section": "Tables and lists vs. Charts and graphs",
    "text": "Tables and lists vs. Charts and graphs\n\nModified Table\nOne way to explore this relationship is to display the information in the data set in a graphical format. Here we assign different variables in the data set to certain attributes on the chart. For example, we might plot the sepal length and width on the x and y axes respectively and then color the points by the species."
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#tables-and-lists-vs.-charts-and-graphs-2",
    "href": "r-graphics/slides/1-GraphicsIntro.html#tables-and-lists-vs.-charts-and-graphs-2",
    "title": "Data Visualization",
    "section": "Tables and lists vs. Charts and graphs",
    "text": "Tables and lists vs. Charts and graphs\n\nVisualizations can aid communication and make the data easier to perceive\n\nWe can now process and understand the relationship between the sepal size and species through graphical format. We can now clearly see that the setosa species (red) has a short sepal length with a long sepal width while the versicolor and virginica generally have both short or both long sepal widths and lengths resepectively."
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#beginner",
    "href": "r-graphics/slides/1-GraphicsIntro.html#beginner",
    "title": "Data Visualization",
    "section": "Beginner",
    "text": "Beginner\n\n\nOne Variable\n- Discrete\n- Bar Chart\n- Pie Chart\n\nContinuous\n\nStem and Leaf Plots\nBox and Whisker Plots\nHistograms\n\n\n\nTwo variables\n- Continuous X, Continuous Y\n- Scatterplots\n\nMaps\n\n\n\n\n\nHere are some common charts most often seen. A bar chart or pie cart are used for displaying information about one discrete variable (count, proporton, mean for that group, etc.). Stem and Leaf Plots, Box and Whisker Plots, and Histograms are all useful for understanding the distribution of a single continuous variable. Scatterplots are a simple and effective way of understanding the relationship between two continuous variables and Maps can help us understand the spatial relationship between spatial information."
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#intermediate",
    "href": "r-graphics/slides/1-GraphicsIntro.html#intermediate",
    "title": "Data Visualization",
    "section": "Intermediate",
    "text": "Intermediate\n\nParallel Coordinate Plots\nMosaic Plots\nRadar Charts\nHeat Maps\n\n\n\nThere are many other kinds of plots that can be useful for exploring relationships of variables. Parallel Coordinate plots (quantitative - discrete) each row in a data set as a line or profile across the columns/variables in the data set. Mosaic plots are useful for visualizing the relationship between two discrete variables. Radar Charts are equivalent to parallel coordinate plots with the axes arranged in polar coordinates. Heat maps are useful for communicating 3D information by showing the magnitude of a phenomenon as color in two dimensions."
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#advanced",
    "href": "r-graphics/slides/1-GraphicsIntro.html#advanced",
    "title": "Data Visualization",
    "section": "Advanced",
    "text": "Advanced\n\nDensity Plots\nViolin Plots\nSocial Network Plots\n\n\n\nDensity and Volin plots help us explore the distribution of different variables. Social Network Plots help you investigate social structures through the use of networks and graph theory."
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#grammar-of-graphics-1",
    "href": "r-graphics/slides/1-GraphicsIntro.html#grammar-of-graphics-1",
    "title": "Data Visualization",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\nWhat is the grammar of graphics?\n\nDeveloped by Leland Wilkinson, is a set of grammatical rules for creating perceivable graphs\nRather than thinking about a limited set of graphs, think about graphical forms\nCharts are instances of much more general objects\nAn abstraction which makes thinking, reasoning, and communicating graphics easier\n\n\n\nWe often talk about types of graphs – bar plots, pie charts, scatterplots – as though they are unrelated, but most graphs share many aspects of their structure.\nWe can think of graphs as visual representations of (possibly transformed) data, along with labels (like axes and legends) that make the meaning clear.\nMuch like the grammar of a language allows you to combine words into meaningful sentences, a grammar of graphics provides a structure to combine graphical elements into figures that display data in a meaningful way.\nThe grammar of graphics was developed in order to produce a flexible system that can create a rich variety of charts as simply as possible, without duplication of methods.\nA grammar provides a strong foundation for understanding a diverse range of graphics. A grammar may also help guide us on what a well-formed or correct graphic looks like, but there will still be many grammatically correct but nonsensical graphics\nGraphics are viewed as a mapping from variables in the data set to visual attributes on the chart."
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#grammar-of-graphics-2",
    "href": "r-graphics/slides/1-GraphicsIntro.html#grammar-of-graphics-2",
    "title": "Data Visualization",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\nDifferent types of graphs may appear completely distinct, but in actuality share many common elements.\nBy making different visual choices, you can use graphs to highlight different aspects of the same data.\nFor example, here are three ways of displaying the same data:\n\n\nDifferent types of graphs may, at first glance, appear completely distinct. But in fact, graphs share many common elements, such as coordinate systems and using geometric shapes to represent data.\nBy making different visual choices (Cartesian or polar coordinates, points or lines or bars to represent data), you can use graphs to highlight different aspects of the same data. For example, here are three ways of displaying the same data:\nEach of these charts display the count of diamonds of each cut in the data set. The first chart (bar-chart) displays a bar for each cut where the length of the bar resembles the number of diamonds in that cut. The second chart (fill-bar, aka stacked bar-chart) displays one bar sectioned into the different cuts by color. The third chart (fill-bar, pie chart) displays the stacked bar-chart in polar coordinates where the sections again represent the different cuts. Later we will discuss benefits and pitfalls of the different types of charts."
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#grammar-of-graphics-3",
    "href": "r-graphics/slides/1-GraphicsIntro.html#grammar-of-graphics-3",
    "title": "Data Visualization",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\nStatistical graphic specifications are expressed in six statements:\n\nDATA: a set of data operations that create variables from datasets\nTRANS: variable transformations\nSCALE: scale transformations\nCOORD: a coordinate system\nELEMENT: graphs (points) and their aesthetic attributes (color)\nGUIDE: one or more guides (axes, legends, etc.)\n\n\nThe internal processes that constitute the syntax of the grammar of graphics  \n\na data flow diagram that shoes what the stages are, how they must be ordered, and what data are required along the way\nprovides us the ingredients and the dependencies among them, but it does not tell us how to assemble the ingredients\nThe Recipe:\n\nCreate variables – extract data into variables\napply algebra –\napply scales – ex. categorical\ncompute statistics\nconstruct geometry\napply coordinates - ex. for polar: send (x,y) to (r, theta)\n\n\nby postponing the coordinnates operation as late in the pipeline as possible, we have made the system more flexible\n\n\ncompute aesthetics\n\n\naesthetic functions translate a graph into a graphic, which is a set of drawing instructions for a renderer ex. position, color, label"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#limitations",
    "href": "r-graphics/slides/1-GraphicsIntro.html#limitations",
    "title": "Data Visualization",
    "section": "Limitations",
    "text": "Limitations\nThe Grammar of Graphics…\n\ntells us what words make up our graphical “sentences,” but offers no advice on how to write well\nis not about good taste, practice, or graphic design\nis useful, but is not all encompassing\ndoes not include interactive graphics\ndoes not include a few interesting and useful charts"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#a-layered-grammar-of-graphics",
    "href": "r-graphics/slides/1-GraphicsIntro.html#a-layered-grammar-of-graphics",
    "title": "Data Visualization",
    "section": "A layered grammar of graphics",
    "text": "A layered grammar of graphics"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#a-layered-grammar-vs-the-grammar-of-graphics",
    "href": "r-graphics/slides/1-GraphicsIntro.html#a-layered-grammar-vs-the-grammar-of-graphics",
    "title": "Data Visualization",
    "section": "A layered grammar vs The Grammar of Graphics",
    "text": "A layered grammar vs The Grammar of Graphics\nggplot2 is based on the more general concept of the Grammar of Graphics\n\nThe components are independent, meaning that we can generally change a single component in isolation"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#what-is-a-graphic",
    "href": "r-graphics/slides/1-GraphicsIntro.html#what-is-a-graphic",
    "title": "Data Visualization",
    "section": "What is a graphic?",
    "text": "What is a graphic?\nggplot2 uses the idea that you can build every graph with graphical components from three sources\n\nthe data, represented by geoms\nthe scales and coordinate system\nthe plot annotations\n\n\nto display values, map variables in the data to visual properties of the geom (aesthetics) like size, color, and x and y locations"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#ggplot2-a-layered-grammar",
    "href": "r-graphics/slides/1-GraphicsIntro.html#ggplot2-a-layered-grammar",
    "title": "Data Visualization",
    "section": "ggplot2: A layered grammar",
    "text": "ggplot2: A layered grammar\nThe layered grammar defines the components of a plot as:\n\na default data set and set of mappings from variables to aesthetics\none or more layers, each layer having one geometric object, one statistical transformation, one position adjustment, and optionally, one data set and set of aesthetic mappings\none scale for each aesthetic mapping used\na coordinate system\nthe facet specification"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#what-is-a-layer",
    "href": "r-graphics/slides/1-GraphicsIntro.html#what-is-a-layer",
    "title": "Data Visualization",
    "section": "What is a Layer?",
    "text": "What is a Layer?\n\nit determines the physical representation of the data\na plot may have multiple layers\n\nusually all the layers on a plot have something in common, i.e. different views of the same data\n\na layer is composed of four parts:\n\ndata and aesthetic mapping\na statistical transformation (stat)\na geometric object (geom)\na position adjustment"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#ggplot2-specifications",
    "href": "r-graphics/slides/1-GraphicsIntro.html#ggplot2-specifications",
    "title": "Data Visualization",
    "section": "ggplot2: Specifications",
    "text": "ggplot2: Specifications\nA plot consists of several mostly independent specifications:\n\naesthetics - links between data variables and graphical features (position, color, shape, size)\nlayers - geometric elements (points, lines, rectangles, text, …)\ntransformations - transformations specify a functional link between the data and the displayed information (identity, count, bins, density, regression). Transformations act on the variables.\nscales - scales map values in data space to values in the aesthetic space. Scales change the coordinate space of an aesthetic, but don’t change the underlying value (so the change is at the visual level, not the mathematical level).\ncoordinate system - e.g. polar or Cartesian\nfaceting - facets allow you to split plots by other variables to produce many sub-plots.\ntheme - formatting items, such as background color, fonts, margins…"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#ggplot2-a-layered-grammar-1",
    "href": "r-graphics/slides/1-GraphicsIntro.html#ggplot2-a-layered-grammar-1",
    "title": "Data Visualization",
    "section": "ggplot2: A layered grammar",
    "text": "ggplot2: A layered grammar\n\n\n\n\ndata: diamonds  layer:  - aes: x = cut, y = count, fill = cut \n- geom: bar  coordinates: Cartesian\n\n\n\n\ndata: diamonds  layer:  - aes: x = 1, y = count, fill = cut  - geom: fill-bar  coordinates: Cartesian \n\n\n\n\ndata: diamonds  layer:  - aes: x = 1, y = count, fill = cut  - geom: fill-bar  coordinates: Polar"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#section-1",
    "href": "r-graphics/slides/1-GraphicsIntro.html#section-1",
    "title": "Data Visualization",
    "section": "",
    "text": "Building a masterpiece, by Allison Horst"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#r-package-and-data-set",
    "href": "r-graphics/slides/1-GraphicsIntro.html#r-package-and-data-set",
    "title": "Data Visualization",
    "section": "R package and data set",
    "text": "R package and data set\n\nlibrary(ggplot2) #&lt;&lt;\nhead(diamonds) #&lt;&lt;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncarat\ncut\ncolor\nclarity\ndepth\ntable\nprice\nx\ny\nz\n\n\n\n\n0.23\nIdeal\nE\nSI2\n61.5\n55\n326\n3.95\n3.98\n2.43\n\n\n0.21\nPremium\nE\nSI1\n59.8\n61\n326\n3.89\n3.84\n2.31\n\n\n0.23\nGood\nE\nVS1\n56.9\n65\n327\n4.05\n4.07\n2.31\n\n\n0.29\nPremium\nI\nVS2\n62.4\n58\n334\n4.20\n4.23\n2.63\n\n\n0.31\nGood\nJ\nSI2\n63.3\n58\n335\n4.34\n4.35\n2.75\n\n\n0.24\nVery Good\nJ\nVVS2\n62.8\n57\n336\n3.94\n3.96\n2.48"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#begin-with-the-data",
    "href": "r-graphics/slides/1-GraphicsIntro.html#begin-with-the-data",
    "title": "Data Visualization",
    "section": "Begin with the data",
    "text": "Begin with the data\n\nggplot(data = diamonds) #&lt;&lt;"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#then-specify-aesthetic-mappings",
    "href": "r-graphics/slides/1-GraphicsIntro.html#then-specify-aesthetic-mappings",
    "title": "Data Visualization",
    "section": "Then specify aesthetic mappings",
    "text": "Then specify aesthetic mappings\n\nggplot(data = diamonds, aes(x = carat, y = price)) #&lt;&lt;\n\n\n\nor what relationships we want to see"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#choose-a-geom",
    "href": "r-graphics/slides/1-GraphicsIntro.html#choose-a-geom",
    "title": "Data Visualization",
    "section": "Choose a geom",
    "text": "Choose a geom\n\nggplot(data = diamonds, aes(x = carat, y = price)) +\n    geom_point() #&lt;&lt;"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#add-geom-specific-aesthetics",
    "href": "r-graphics/slides/1-GraphicsIntro.html#add-geom-specific-aesthetics",
    "title": "Data Visualization",
    "section": "Add geom-specific aesthetics",
    "text": "Add geom-specific aesthetics\n\nggplot(data = diamonds, aes(x = carat, y = price)) +\n    geom_point(aes(colour = cut)) #&lt;&lt;"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#add-another-layer",
    "href": "r-graphics/slides/1-GraphicsIntro.html#add-another-layer",
    "title": "Data Visualization",
    "section": "Add another layer…",
    "text": "Add another layer…\n\nggplot(data = diamonds, aes(x = carat, y = price)) +\n    geom_point(aes(colour = cut)) +\n    geom_smooth() #&lt;&lt;"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#mapping-vs-setting-aesthetics",
    "href": "r-graphics/slides/1-GraphicsIntro.html#mapping-vs-setting-aesthetics",
    "title": "Data Visualization",
    "section": "Mapping vs setting aesthetics",
    "text": "Mapping vs setting aesthetics\n\nggplot(data = diamonds, aes(x = carat, y = price) +\n    geom_point(aes(colour = cut), size = 2, alpha = .5) + #&lt;&lt;\n    geom_smooth(aes(fill = cut), colour = \"lightgrey\") #&lt;&lt;"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#specify-coordinate-transformations",
    "href": "r-graphics/slides/1-GraphicsIntro.html#specify-coordinate-transformations",
    "title": "Data Visualization",
    "section": "Specify Coordinate transformations",
    "text": "Specify Coordinate transformations\n\nggplot(data = diamonds, aes(x = carat, y = price)) +\n    geom_point(aes(colour = cut), size = 2, alpha = .5) +\n    geom_smooth(aes(fill = cut), colour = \"lightgrey\") +\n    scale_y_log10() #&lt;&lt;"
  },
  {
    "objectID": "r-graphics/slides/1-GraphicsIntro.html#add-nuance-with-facets",
    "href": "r-graphics/slides/1-GraphicsIntro.html#add-nuance-with-facets",
    "title": "Data Visualization",
    "section": "Add nuance with facets",
    "text": "Add nuance with facets\n\nggplot(data = diamonds, aes(x = carat, y = price)) +\n    geom_point(aes(colour = cut), size = 2, alpha = .5) +\n    geom_smooth(aes(fill = cut), colour = \"lightgrey\") +\n    scale_y_log10() +\n    facet_wrap(~cut) #&lt;&lt;\n\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-graphics/code/99-YourTurnSolutions.html",
    "href": "r-graphics/code/99-YourTurnSolutions.html",
    "title": "Graphics with ggplot: Your Turn Solutions",
    "section": "",
    "text": "Note: the ggplot package is contained within the tidyverse library.\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "r-graphics/code/99-YourTurnSolutions.html#load-libraries",
    "href": "r-graphics/code/99-YourTurnSolutions.html#load-libraries",
    "title": "Graphics with ggplot: Your Turn Solutions",
    "section": "",
    "text": "Note: the ggplot package is contained within the tidyverse library.\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "r-graphics/code/99-YourTurnSolutions.html#graphics-intro",
    "href": "r-graphics/code/99-YourTurnSolutions.html#graphics-intro",
    "title": "Graphics with ggplot: Your Turn Solutions",
    "section": "Graphics Intro",
    "text": "Graphics Intro\n\nMake your first figure\n\nData set\n\n\nhead(diamonds)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncarat\ncut\ncolor\nclarity\ndepth\ntable\nprice\nx\ny\nz\n\n\n\n\n0.23\nIdeal\nE\nSI2\n61.5\n55\n326\n3.95\n3.98\n2.43\n\n\n0.21\nPremium\nE\nSI1\n59.8\n61\n326\n3.89\n3.84\n2.31\n\n\n0.23\nGood\nE\nVS1\n56.9\n65\n327\n4.05\n4.07\n2.31\n\n\n0.29\nPremium\nI\nVS2\n62.4\n58\n334\n4.20\n4.23\n2.63\n\n\n0.31\nGood\nJ\nSI2\n63.3\n58\n335\n4.34\n4.35\n2.75\n\n\n0.24\nVery Good\nJ\nVVS2\n62.8\n57\n336\n3.94\n3.96\n2.48\n\n\n\n\n\n\nBegin with the data\n\n\nggplot(data = diamonds)\n\n\n\n\n\nSpecify the aesthetic mappings\n\n\nggplot(data = diamonds, aes(x = carat, y = price))\n\n\n\n\n\nChoose a geom\n\n\nggplot(data = diamonds, aes(x = carat, y = price)) +\n  geom_point()\n\n\n\n\n\nAdd an aesthetic\n\n\nggplot(data = diamonds, aes(x = carat, y = price)) +\n  geom_point(aes(colour = cut))\n\n\n\n\n\nAdd another layer\n\n\nggplot(data = diamonds, aes(x = carat, y = price)) +\n  geom_point(aes(colour = cut), size = 2, alpha = .5) +\n  geom_smooth()\n\n\n\n\n\nMapping aesthetics vs setting aesthetics\n\n\nggplot(data = diamonds, aes(x = carat, y = price)) +\n  geom_point(aes(colour = cut), size = 2, alpha = .5) +\n  geom_smooth(aes(fill = cut), colour = \"lightgrey\") \n\n\n\n\n\nCoordinate transformations can be specified\n\n\nggplot(data = diamonds, aes(x = carat, y = price)) +\n  geom_point(aes(colour = cut), size = 2, alpha = .5) +\n  geom_smooth(aes(fill = cut), colour = \"lightgrey\") +\n  scale_y_log10()\n\n\n\n\n\nSpecify facet variables\n\n\nggplot(data = diamonds, aes(x = carat, y = price)) +\n  geom_point(aes(colour = cut), size = 2, alpha = .5) +\n  geom_smooth(aes(fill = cut), colour = \"lightgrey\") +\n  scale_y_log10() +\n  facet_wrap(~cut)"
  },
  {
    "objectID": "r-graphics/code/99-YourTurnSolutions.html#basics",
    "href": "r-graphics/code/99-YourTurnSolutions.html#basics",
    "title": "Graphics with ggplot: Your Turn Solutions",
    "section": "Basics",
    "text": "Basics\n\nTidy Your Data\nTo tidy the preg table use pivot_longer() to create a long table.\n\npreg &lt;- tibble(pregnant = c(\"yes\", \"no\"),\n               male = c(NA, 10),\n               female = c(20, 12))\npreg\n\n# A tibble: 2 × 3\n  pregnant  male female\n  &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n1 yes         NA     20\n2 no          10     12\n\n\nSolution\n\npreg_long &lt;- preg %&gt;%\n  pivot_longer(cols = c(\"male\", \"female\"),\n               names_to = \"sex\",\n               values_to = \"count\")\npreg_long\n\n# A tibble: 4 × 3\n  pregnant sex    count\n  &lt;chr&gt;    &lt;chr&gt;  &lt;dbl&gt;\n1 yes      male      NA\n2 yes      female    20\n3 no       male      10\n4 no       female    12"
  },
  {
    "objectID": "r-graphics/code/99-YourTurnSolutions.html#layers",
    "href": "r-graphics/code/99-YourTurnSolutions.html#layers",
    "title": "Graphics with ggplot: Your Turn Solutions",
    "section": "Layers",
    "text": "Layers\nChange the code below to have the points on top of the boxplots.\n\nggplot(data = mpg, aes(x = class, y = hwy)) + \n  geom_jitter() + \n  geom_boxplot()\n\n\n\n\nSolution\n\nggplot(data = mpg, aes(x = class, y = hwy)) + \n  geom_boxplot() +\n  geom_jitter()"
  },
  {
    "objectID": "r-graphics/code/99-YourTurnSolutions.html#perception",
    "href": "r-graphics/code/99-YourTurnSolutions.html#perception",
    "title": "Graphics with ggplot: Your Turn Solutions",
    "section": "Perception",
    "text": "Perception\n\nDiamonds\nIn the diamonds data, clarity and cut are ordinal, while price and carat are continuous.\nCreate a graphic that gives an overview of these four variables while respecting their types.\nOne possible plot, there will be many!\n\ndata(diamonds)\n    \nggplot(diamonds, aes(x = carat, y = price)) +\n  geom_point(aes(color = clarity)) + \n  geom_smooth(aes()) + \n  facet_grid(~cut)\n\n\n\n\n\n\nMovies\nThe movies data set contains information from IMDB.com including ratings, genre, length in minutes, and year of release. Explore the differences in length, rating, etc. in movie genres over time. Hint: use faceting!\nA few different plots, there will be many!\n\nmovies &lt;- read.csv(\"https://raw.githubusercontent.com/unl-statistics/R-workshops/main/r-graphics/data/MovieSummary.csv\")\nsummary(movies)\n\n       X             title                year          length      \n Min.   :     7   Length:65134       Min.   :1893   Min.   :  1.00  \n 1st Qu.:144108   Class :character   1st Qu.:1954   1st Qu.: 24.00  \n Median :195320   Mode  :character   Median :1983   Median : 89.00  \n Mean   :208093                      Mean   :1975   Mean   : 73.36  \n 3rd Qu.:258227                      3rd Qu.:1998   3rd Qu.:100.00  \n Max.   :411511                      Max.   :2005   Max.   :873.00  \n                                                                    \n     budget              rating           votes            mpaa          \n Min.   :        0   Min.   : 1.000   Min.   :     5   Length:65134      \n 1st Qu.:   320000   1st Qu.: 5.300   1st Qu.:    12   Class :character  \n Median :  4000000   Median : 6.300   Median :    32   Mode  :character  \n Mean   : 15489887   Mean   : 6.138   Mean   :   768                     \n 3rd Qu.: 20000000   3rd Qu.: 7.100   3rd Qu.:   131                     \n Max.   :200000000   Max.   :10.000   Max.   :157608                     \n NA's   :58713                                                           \n    genre          \n Length:65134      \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nggplot(movies, aes(x = year, y = budget, group = genre, color = genre)) + \n  geom_point()\n\n\n\nggplot(movies, aes(x = year, y = length, group = genre, color = genre)) +\n  geom_smooth() \n\n\n\nggplot(movies, aes(x = budget, y = rating, color = genre, group = genre)) + \n  geom_point() +\n  geom_smooth()  + \n  facet_wrap(~mpaa)\n\n\n\nggplot(movies, aes(x = log(budget + 1), y = rating, color = genre, group = genre)) + \n  geom_point() +\n  geom_smooth() \n\n\n\nggplot(movies, aes(x = genre, fill = mpaa)) + \n  geom_bar() \n\n\n\nggplot(movies, aes(x = rating, group = mpaa, fill = mpaa)) + \n  geom_density(alpha = .4) + \n  facet_wrap(~genre, nrow = 2)"
  },
  {
    "objectID": "r-graphics/code/99-YourTurnSolutions.html#polishing-plots",
    "href": "r-graphics/code/99-YourTurnSolutions.html#polishing-plots",
    "title": "Graphics with ggplot: Your Turn Solutions",
    "section": "Polishing Plots",
    "text": "Polishing Plots\n\nPalmer Penguins\n\n    install.packages(\"palmerpenguins\")\n    data(penguins, package = \"palmerpenguins\")\n    head(penguins)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n2007\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n2007\n\n\nAdelie\nTorgersen\n40.3\n18.0\n195\n3250\nfemale\n2007\n\n\nAdelie\nTorgersen\nNA\nNA\nNA\nNA\nNA\n2007\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n2007\n\n\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale\n2007\n\n\n\n\n\n\n\n\n\n\n\n\n\nMeet the Palmer penguins & Bill Dimensions by Allison Horst\n\nCreate a scatterplot of bill length versus bill width from the penguins data, colored by species\n\n\np0 &lt;- ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +\n  geom_point()\n    p0\n\n\n\n\n\nUse the black and white theme\n\n\np1 &lt;- p0 + \n  theme_bw()\np1\n\n\n\n\n\nClean up axis labels and include an informative title.\n\n\np2 &lt;- p1 +\n  scale_x_continuous(\"Bill Length (mm)\") +\n  scale_y_continuous(\"Bill Depth (mm)\") +\n  ggtitle(\"Palmer Penguins\", subtitle = \"Bill Size\")\np2\n\n\n\n\n\nCapitalize legend title and change the color palette from default.\n\n\np3 &lt;- p2 +\n  scale_color_viridis_d(\"Species\")\np3\n\n\n\n\n\nMove the legend to the bottom and set aspect ratio to 1.\n\n\np4 &lt;- p3 + \n  theme(legend.position = \"bottom\",\n        aspect.ratio = 1)\np4\n\n\n\n\n\nSave your plot to a pdf file and open it in a pdf viewer.\n\nMake sure you know where this is saving to; remember R projects and working directories!\n\nggsave(filename = \"penguins.pdf\", plot = p4)\n\n\nSave a png of the same scatterplot.\n\n\nggsave(filename = \"diamonds.png\", plot = p4)\n\n\nEmbed the png into MS word or another editor."
  },
  {
    "objectID": "r-modeling/planning.html",
    "href": "r-modeling/planning.html",
    "title": "Statistical Modeling in R (Planning)",
    "section": "",
    "text": "Learn how to fit models, test hypotheses, create model output tables and plots, and more! In the morning, we will cover model-fitting basics (linear regression, mixed models), and in the afternoon we will look into more advanced types of models (generalized additive models, generalized linear mixed models, etc.)"
  },
  {
    "objectID": "r-modeling/planning.html#overview",
    "href": "r-modeling/planning.html#overview",
    "title": "Statistical Modeling in R (Planning)",
    "section": "",
    "text": "Learn how to fit models, test hypotheses, create model output tables and plots, and more! In the morning, we will cover model-fitting basics (linear regression, mixed models), and in the afternoon we will look into more advanced types of models (generalized additive models, generalized linear mixed models, etc.)"
  },
  {
    "objectID": "r-modeling/planning.html#target-audience",
    "href": "r-modeling/planning.html#target-audience",
    "title": "Statistical Modeling in R (Planning)",
    "section": "Target Audience",
    "text": "Target Audience\nWe assume the participants have taken a class where they learned ANOVA, regression, some experimental design, and maybe generalized linear models (e.g. 801 and 802). The goal is to teach them how to implement the models in R and extract and display the output, not to teach them what the models are doing."
  },
  {
    "objectID": "r-modeling/planning.html#packages",
    "href": "r-modeling/planning.html#packages",
    "title": "Statistical Modeling in R (Planning)",
    "section": "Packages",
    "text": "Packages\n\nlibrary(lme4) # lm, glm, lmer, glmer glm.nb glmer.nb\nlibrary(nlme) # repeated measures\nlibrary(nls)  # nonlinear regression?\nlibrary(mgcv) # generalized additive mixed models\n\nlibrary(emmeans) # obtains estimates\nlibrary(broom) # cleans up model output"
  },
  {
    "objectID": "r-modeling/planning.html#topics",
    "href": "r-modeling/planning.html#topics",
    "title": "Statistical Modeling in R (Planning)",
    "section": "Topics",
    "text": "Topics\n\nRandomization / Experimental Design\nANOVA\nANCOVA\nMANOVA??\nLinear Regression, Multiple Linear Regression\nGeneralized Models\nMixed Models\nDimension Reduction / Variable Selection\n\nStepwise selection, PCA, NMDS, LASSO, varImp, etc.\n\nWhat to spot - how to determine your test?"
  },
  {
    "objectID": "r-modeling/planning.html#order",
    "href": "r-modeling/planning.html#order",
    "title": "Statistical Modeling in R (Planning)",
    "section": "Order",
    "text": "Order\n\nt.test, chi.sq test\nlm (ANOVA, ANCOVA, linear regression, multiple linear regression (stepwise selection, etc.))\n\ncrd experimental\none way\ntwo way\nquant and qual\n\nlmer\n\nrcbd, split plot\n\nglm\n\nchange response type\n\nglmer"
  },
  {
    "objectID": "r-modeling/planning.html#examples",
    "href": "r-modeling/planning.html#examples",
    "title": "Statistical Modeling in R (Planning)",
    "section": "Examples",
    "text": "Examples\n\nPick one or two scenarios and modify for the different types of tests."
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#outline",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#outline",
    "title": "Generalized Linear Models (and more!)",
    "section": "Outline",
    "text": "Outline\n\nWhat if my response does not follow a normal distribution?\nBinomial Example\nCount Example\nFinal Remarks"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#generalized-linear-models-basics",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#generalized-linear-models-basics",
    "title": "Generalized Linear Models (and more!)",
    "section": "Generalized Linear Models (Basics)",
    "text": "Generalized Linear Models (Basics)\nIf your data is not normally distributed, it will violate the model assumptions of a linear model. You must consider the type of data you have!\nModel Scale verses Data Scale\nCommon Distributions\n\nBinomial (binary data or number of successes out of total)\nPoisson (count data)\nNegative Binomial (count data)\nGamma (right skewed continuous data)\nBeta (continuous proportion/probability)"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#glms-and-glmms-in-r",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#glms-and-glmms-in-r",
    "title": "Generalized Linear Models (and more!)",
    "section": "GLMS and GLMM’s in R",
    "text": "GLMS and GLMM’s in R\nPackages\n\nlibrary('lme4')\nlibrary('emmeans')\n\nGeneralized Linear Model (GLM)\n\nhelp(glm)\n\nGeneralized Linear Mixed Model (GLMM)\n\nhelp(glmer)"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#insects",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#insects",
    "title": "Generalized Linear Models (and more!)",
    "section": "Insects",
    "text": "Insects\nData The number of insects killed at various doses of insecticide.\n\ninsects_data &lt;- read_csv(\"https://unl-statistics.github.io/R-workshops/r-modeling/data/insects.csv\")\nhead(insects_data)\n\n\n\n\n\n\nRep\nKilled\nNumber\nInsecticide\nDeposit\n\n\n\n\n1\n3\n50\nA\n2.00\n\n\n1\n5\n49\nA\n2.64\n\n\n1\n19\n47\nA\n3.48\n\n\n1\n19\n38\nA\n4.59\n\n\n\n\n\n\n\n\nKilled the number of insects killed at each poison level; a numeric vector\nNumber the number of insects exposed at each poison level; a numeric vector\nInsecticide the insecticide used; a factor with levels A, B and C\nDeposit the amount of deposit (insecticide) used in milligrams; a numeric vector"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-eda",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-eda",
    "title": "Generalized Linear Models (and more!)",
    "section": "Insects EDA",
    "text": "Insects EDA\n\n\n Rep        Killed          Number      Insecticide    Deposit     \n 1:18   Min.   : 1.00   Min.   :26.00   A:18        Min.   :2.000  \n 2:18   1st Qu.:17.00   1st Qu.:48.00   B:18        1st Qu.:2.640  \n 3:18   Median :29.00   Median :50.00   C:18        Median :4.035  \n        Mean   :27.78   Mean   :47.48               Mean   :4.462  \n        3rd Qu.:40.75   3rd Qu.:50.00               3rd Qu.:6.060  \n        Max.   :50.00   Max.   :50.00               Max.   :8.000"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-model",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-model",
    "title": "Generalized Linear Models (and more!)",
    "section": "Insects Model",
    "text": "Insects Model\n\nStatistical notation\n\\[y_{ij} \\sim \\text{Binomial}(\\pi_{ij}, N_{ij})\\] where \\[\\log\\large(\\frac{\\pi_{ij}}{1-\\pi_{ij}}\\large) = \\eta_{ij} = (\\beta_0 + \\tau_i) + (\\beta_1 + \\beta_{1i})\\cdot x_{ij} + (\\beta_2 + \\beta_{2i})\\cdot x_{ij}^2\\]\n\n\\(y_{ij}\\) is the number of insects killed for the \\(i^{th}\\) Insecticide given the \\(j^{th}\\) deposit.\n\\(N_{ij}\\) is the total number of insects that started.\n\\(\\eta\\) is the overall mean on the model scale.\n\\(\\tau_i\\) is the effect of the \\(i^{th}\\) habitat.\n\\(b_j\\) is the random variation due to the \\(j^{th}\\) site.\n\\(logit = \\log(\\frac{\\pi}{1-\\pi})\\) data scale \\(\\implies\\) model scale (link function)\n\\(\\frac{1}{(1+e^{-\\eta})}\\) model scale \\(\\implies\\) data scale (ilink function)"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-glm",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-glm",
    "title": "Generalized Linear Models (and more!)",
    "section": "Insects GLM",
    "text": "Insects GLM\n\n insects_glm &lt;- glm(Killed/Number ~ Insecticide*Deposit + Insecticide*I(Deposit^2),\n     weights = Number, #&lt;&lt;\n     data = insects_data,\n     family = \"binomial\") #&lt;&lt;\ncar::Anova(insects_glm)\n\nAnalysis of Deviance Table (Type II tests)\n\nResponse: Killed/Number\n                         LR Chisq Df Pr(&gt;Chisq)    \nInsecticide                639.65  2     &lt;2e-16 ***\nDeposit                    197.82  1     &lt;2e-16 ***\nI(Deposit^2)               104.08  1     &lt;2e-16 ***\nInsecticide:Deposit          0.28  2     0.8711    \nInsecticide:I(Deposit^2)     0.30  2     0.8612    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-glm-1",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-glm-1",
    "title": "Generalized Linear Models (and more!)",
    "section": "Insects GLM",
    "text": "Insects GLM\n\nsummary(insects_glm)\n\n\nCall:\nglm(formula = Killed/Number ~ Insecticide * Deposit + Insecticide * \n    I(Deposit^2), family = \"binomial\", data = insects_data, weights = Number)\n\nCoefficients:\n                           Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)               -6.913880   0.687916 -10.050  &lt; 2e-16 ***\nInsecticideB               0.676798   0.911342   0.743  0.45770    \nInsecticideC               3.053194   1.010612   3.021  0.00252 ** \nDeposit                    2.371302   0.287991   8.234  &lt; 2e-16 ***\nI(Deposit^2)              -0.175414   0.026636  -6.586 4.53e-11 ***\nInsecticideB:Deposit      -0.154556   0.385324  -0.401  0.68834    \nInsecticideC:Deposit       0.066789   0.498966   0.134  0.89352    \nInsecticideB:I(Deposit^2)  0.016766   0.036163   0.464  0.64292    \nInsecticideC:I(Deposit^2) -0.005033   0.052369  -0.096  0.92344    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1326.798  on 53  degrees of freedom\nResidual deviance:   86.522  on 45  degrees of freedom\nAIC: 278.27\n\nNumber of Fisher Scoring iterations: 5"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-results",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-results",
    "title": "Generalized Linear Models (and more!)",
    "section": "Insects results",
    "text": "Insects results\n\ninsects_emmeangrid &lt;- ref_grid(insects_glm, at = list(Deposit = unique(insects_data$Deposit))) #&lt;&lt;\ninsects_emmeans &lt;- emmeans(insects_emmeangrid, specs =~Insecticide:Deposit, type = \"response\")\ninsects_emmeans\n\n\n\n\n\n\nInsecticide\nDeposit\nprob\nSE\ndf\nasymp.LCL\nasymp.UCL\n\n\n\n\nA\n2.00\n0.054\n0.012\nInf\n0.034\n0.083\n\n\nB\n2.00\n0.080\n0.015\nInf\n0.055\n0.116\n\n\nC\n2.00\n0.573\n0.037\nInf\n0.499\n0.643\n\n\nA\n2.64\n0.133\n0.018\nInf\n0.102\n0.172\n\n\nB\n2.64\n0.184\n0.020\nInf\n0.148\n0.226\n\n\nC\n2.64\n0.789\n0.020\nInf\n0.746\n0.826"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#compare-insecticides",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#compare-insecticides",
    "title": "Generalized Linear Models (and more!)",
    "section": "Compare Insecticides",
    "text": "Compare Insecticides\n\ninsects_pairs &lt;- emmeans(insects_emmeangrid, specs =~Insecticide | Deposit, type = \"response\")\npairs(insects_pairs, infer = c(T,T))\n\nDeposit = 2:\n contrast odds.ratio      SE  df asymp.LCL asymp.UCL null z.ratio p.value\n A / B        0.6474 0.20481 Inf   0.30846    1.3589    1  -1.374  0.3544\n A / C        0.0421 0.01198 Inf   0.02165    0.0820    1 -11.141  &lt;.0001\n B / C        0.0651 0.01661 Inf   0.03580    0.1184    1 -10.707  &lt;.0001\n\nDeposit = 2.64:\n contrast odds.ratio      SE  df asymp.LCL asymp.UCL null z.ratio p.value\n A / B        0.6800 0.13910 Inf   0.42104    1.0983    1  -1.885  0.1429\n A / C        0.0410 0.00809 Inf   0.02581    0.0651    1 -16.184  &lt;.0001\n B / C        0.0603 0.01091 Inf   0.03944    0.0921    1 -15.525  &lt;.0001\n\nDeposit = 3.48:\n contrast odds.ratio      SE  df asymp.LCL asymp.UCL null z.ratio p.value\n A / B        0.7104 0.10409 Inf   0.50388    1.0015    1  -2.334  0.0513\n A / C        0.0398 0.00892 Inf   0.02351    0.0673    1 -14.375  &lt;.0001\n B / C        0.0560 0.01229 Inf   0.03347    0.0936    1 -13.132  &lt;.0001\n\nDeposit = 4.59:\n contrast odds.ratio      SE  df asymp.LCL asymp.UCL null z.ratio p.value\n A / B        0.7257 0.12800 Inf   0.47999    1.0972    1  -1.818  0.1637\n A / C        0.0386 0.01159 Inf   0.01912    0.0780    1 -10.843  &lt;.0001\n B / C        0.0532 0.01568 Inf   0.02669    0.1061    1  -9.960  &lt;.0001\n\nDeposit = 6.06:\n contrast odds.ratio      SE  df asymp.LCL asymp.UCL null z.ratio p.value\n A / B        0.7005 0.13204 Inf   0.45039    1.0896    1  -1.888  0.1421\n A / C        0.0379 0.01316 Inf   0.01679    0.0855    1  -9.424  &lt;.0001\n B / C        0.0541 0.01847 Inf   0.02429    0.1204    1  -8.542  &lt;.0001\n\nDeposit = 8:\n contrast odds.ratio      SE  df asymp.LCL asymp.UCL null z.ratio p.value\n A / B        0.5985 0.15779 Inf   0.32261    1.1102    1  -1.947  0.1257\n A / C        0.0382 0.02450 Inf   0.00849    0.1717    1  -5.090  &lt;.0001\n B / C        0.0638 0.04130 Inf   0.01399    0.2909    1  -4.251  0.0001\n\nConfidence level used: 0.95 \nConf-level adjustment: tukey method for comparing a family of 3 estimates \nIntervals are back-transformed from the log odds ratio scale \nP value adjustment: tukey method for comparing a family of 3 estimates \nTests are performed on the log odds ratio scale"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-results-plot",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-results-plot",
    "title": "Generalized Linear Models (and more!)",
    "section": "Insects results plot",
    "text": "Insects results plot\n\ninsects_predgrid &lt;- ref_grid(insects_glm, at = list(Deposit = seq(min(insects_data$Deposit), max(insects_data$Deposit), 0.2)))\ninsects_preds &lt;- emmeans(insects_predgrid, specs =~Insecticide:Deposit, type = \"response\")\ninsects_preds\n\n\n\n\n\n\nInsecticide\nDeposit\nprob\nSE\ndf\nasymp.LCL\nasymp.UCL\n\n\n\n\nA\n2.0\n0.054\n0.012\nInf\n0.034\n0.083\n\n\nB\n2.0\n0.080\n0.015\nInf\n0.055\n0.116\n\n\nC\n2.0\n0.573\n0.037\nInf\n0.499\n0.643\n\n\nA\n2.2\n0.073\n0.014\nInf\n0.049\n0.106\n\n\nB\n2.2\n0.106\n0.017\nInf\n0.077\n0.145\n\n\nC\n2.2\n0.652\n0.029\nInf\n0.594\n0.707"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-results-plot-1",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#insects-results-plot-1",
    "title": "Generalized Linear Models (and more!)",
    "section": "Insects results plot",
    "text": "Insects results plot\n\n\n\ninsects_preds %&gt;%\n  as_tibble() %&gt;%\n  ggplot(aes(x = Deposit, shape = Insecticide, color = Insecticide, fill = Insecticide)) +\n  geom_line(aes(y = prob)) + #&lt;&lt;\n  geom_ribbon(aes(ymin = asymp.LCL, ymax = asymp.UCL), color = NA, alpha = 0.2) + #&lt;&lt;\n  geom_point(data = insects_data, aes(y = Killed/Number), position = position_jitter(width = 0.2, height = 0)) + #&lt;&lt;\n  theme_bw() +\n  theme(aspect.ratio = 1) +\n  scale_color_locuszoom() +\n  scale_fill_locuszoom() +\n  scale_y_continuous(\"Mortality (%)\", labels = scales::percent)"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#birds",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#birds",
    "title": "Generalized Linear Models (and more!)",
    "section": "Birds",
    "text": "Birds\nAn ecologist is investigating the impact of habitat type on the population of a certain type of bird. To do this, data were obtained from a study in which 24 randomly sampled sites were observed. Each site contains habitats of both types. Bird counts were obtained from each habitat type.\n\nbirds_data &lt;- read_csv(\"https://unl-statistics.github.io/R-workshops/r-modeling/data/birds.csv\")\nhead(birds_data) \n\n\n\n\n\n\nSite\nHabitat\nCount\n\n\n\n\n1\n1\n27\n\n\n1\n2\n209\n\n\n2\n1\n1\n\n\n2\n2\n0\n\n\n3\n1\n12\n\n\n3\n2\n21"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-eda",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-eda",
    "title": "Generalized Linear Models (and more!)",
    "section": "Birds EDA",
    "text": "Birds EDA\n\nsummary(birds_data)\n\n      Site          Habitat        Count       \n Min.   : 1.00   Min.   :1.0   Min.   :  0.00  \n 1st Qu.: 6.75   1st Qu.:1.0   1st Qu.:  6.75  \n Median :12.50   Median :1.5   Median : 18.00  \n Mean   :12.50   Mean   :1.5   Mean   : 76.83  \n 3rd Qu.:18.25   3rd Qu.:2.0   3rd Qu.: 51.50  \n Max.   :24.00   Max.   :2.0   Max.   :989.00  \n\nfactorCols &lt;- c(\"Site\", \"Habitat\")\nbirds_data[,factorCols] &lt;- lapply(birds_data[,factorCols], factor)\nsummary(birds_data)\n\n      Site    Habitat     Count       \n 1      : 2   1:24    Min.   :  0.00  \n 2      : 2   2:24    1st Qu.:  6.75  \n 3      : 2           Median : 18.00  \n 4      : 2           Mean   : 76.83  \n 5      : 2           3rd Qu.: 51.50  \n 6      : 2           Max.   :989.00  \n (Other):36"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-eda-1",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-eda-1",
    "title": "Generalized Linear Models (and more!)",
    "section": "Birds EDA",
    "text": "Birds EDA\n\n\nData Scale\n\n\n\n\n\n\n“Model Scale”"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-model",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-model",
    "title": "Generalized Linear Models (and more!)",
    "section": "Birds Model",
    "text": "Birds Model\n\nIn words\n\\[\\text{\"log(Bird Count) = overall model scale mean + habitat + random site + scale\"}\\]\nStatistical notation\n\\[y_i | b_j \\sim \\text{Negative Binomial}(\\mu_{ij}, \\phi)\\] where \\[\\log(\\mu_{ij}) = \\eta_{ij} = \\eta + \\tau_i + b_j\\]\n\n\\(y_{ij}\\) is bird count for the \\(i^{th}\\) habitat at the \\(j^{th}\\) site.\n\\(\\eta\\) is the overall mean on the model scale.\n\\(\\tau_i\\) is the effect of the \\(i^{th}\\) habitat.\n\\(b_j\\) is the random variation due to the \\(j^{th}\\) site.\nlog: data scale \\(\\implies\\) model scale (link function)\nexp: model scale \\(\\implies\\) data scale (ilink function)"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-glmm",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-glmm",
    "title": "Generalized Linear Models (and more!)",
    "section": "Birds GLMM",
    "text": "Birds GLMM\n\nlibrary(optimx)\nbirds_nb &lt;- glmer.nb(Count ~ Habitat + (1|Site),\n                     data = birds_data,\n                     nAGQ = 100)\ncar::Anova(birds_nb)\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: Count\n         Chisq Df Pr(&gt;Chisq)\nHabitat 0.0095  1     0.9224"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-glmm-results",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-glmm-results",
    "title": "Generalized Linear Models (and more!)",
    "section": "Birds GLMM results",
    "text": "Birds GLMM results\n\nsummary(birds_nb)\n\nGeneralized linear mixed model fit by maximum likelihood (Adaptive\n  Gauss-Hermite Quadrature, nAGQ = 100) [glmerMod]\n Family: Negative Binomial(0.0849)  ( log )\nFormula: Count ~ Habitat + (1 | Site)\n   Data: birds_data\n\n     AIC      BIC   logLik deviance df.resid \n    20.9     28.4     -6.5     12.9       44 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-0.2912 -0.2663 -0.2262 -0.0861  3.6476 \n\nRandom effects:\n Groups Name        Variance  Std.Dev. \n Site   (Intercept) 1.444e-12 1.202e-06\nNumber of obs: 48, groups:  Site, 24\n\nFixed effects:\n            Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)   4.3888     0.7009   6.262  3.8e-10 ***\nHabitat2     -0.0966     0.9912  -0.097    0.922    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n         (Intr)\nHabitat2 -0.707\noptimizer (Nelder_Mead) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-glmm-means",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-glmm-means",
    "title": "Generalized Linear Models (and more!)",
    "section": "Birds GLMM means",
    "text": "Birds GLMM means\n\nbirds_emmeans &lt;- emmeans(birds_nb, specs = ~ Habitat, \n                         type = \"response\") #&lt;&lt;\nbirds_emmeans\n\n\n\n\n\n\nHabitat\nresponse\nSE\ndf\nasymp.LCL\nasymp.UCL\n\n\n\n\n1\n80.54\n56.45\nInf\n20.39\n318.12\n\n\n2\n73.13\n51.25\nInf\n18.51\n288.85"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-glmm-compare-habitats",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-glmm-compare-habitats",
    "title": "Generalized Linear Models (and more!)",
    "section": "Birds GLMM compare habitats",
    "text": "Birds GLMM compare habitats\n\\[H_0: \\mu_1 = \\mu_2 \\text{ (The mean bird count for habitat 1 is equal to habitat 2)}\\]\n\\[H_A: \\mu_1 \\ne \\mu_2 \\text{ (The mean bird count for habitat 1 is not equal to habitat 2)}\\]\n\npairs(birds_emmeans, infer = c(T,T))\n\n contrast            ratio   SE  df asymp.LCL asymp.UCL null z.ratio p.value\n Habitat1 / Habitat2   1.1 1.09 Inf     0.158      7.69    1   0.097  0.9224\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the log scale \nTests are performed on the log scale"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-glmm-compare-habitats-1",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#birds-glmm-compare-habitats-1",
    "title": "Generalized Linear Models (and more!)",
    "section": "Birds GLMM compare habitats",
    "text": "Birds GLMM compare habitats\n\\[H_0: \\mu_1 = \\mu_2 \\text{ (The mean bird count for habitat 1 is equal to habitat 2)}\\]\n\\[H_A: \\mu_1 \\ne \\mu_2 \\text{ (The mean bird count for habitat 1 is not equal to habitat 2)}\\]\n\nlibrary(multcomp)\nlibrary(multcompView)\nlibrary(stringr)\nbirds_letters &lt;- cld(birds_emmeans, Letters = letters, alpha = 0.5) %&gt;% #&lt;&lt;\n  mutate(.group = toupper(str_trim(.group))) #&lt;&lt;\nbirds_letters \n\n\n\n\n\n\nHabitat\nresponse\nSE\ndf\nasymp.LCL\nasymp.UCL\n.group\n\n\n\n\n2\n73.13\n51.25\nInf\n18.51\n288.85\nA\n\n\n1\n80.54\n56.45\nInf\n20.39\n318.12\nA"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#count-example-birds-results-plot",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#count-example-birds-results-plot",
    "title": "Generalized Linear Models (and more!)",
    "section": "Count Example: Birds results plot",
    "text": "Count Example: Birds results plot\n\n\n\nbirds_letters %&gt;%\n  as_tibble() %&gt;% #&lt;&lt;\n  ggplot(aes(x = Habitat, y = response)) +\n  geom_point() +\n  geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL), width = 0.1) +\n  geom_text(aes(label = .group, y = asymp.UCL), vjust = -0.5, size = 6) + #&lt;&lt;\n  geom_point(data = birds_data, aes(y = Count), shape = 1, position = position_jitter(width = 0.2, height = 0)) + #&lt;&lt;\n  theme_bw() +\n  theme(aspect.ratio = 1) +\n  ylab(\"Number of Birds\")"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#models-and-functions",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#models-and-functions",
    "title": "Generalized Linear Models (and more!)",
    "section": "Models and functions",
    "text": "Models and functions\n\n\n\n\n\n\n\n\n\n\nModel\nDistribution\nExperimental Design\nR Function\n\n\n\n\nLinear Model\nNormal\nCRD\nlm()\n\n\nLinear Mixed Model\nNormal\nBlocking (or more)\nlmer()\n\n\nGeneralized Linear Model\nNon-normal\nCRD\nglm()\n\n\nGeneralized Linear Mixed Model\nNon-normal\nBlocking (or more)\nglmer()"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#model-specifications",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#model-specifications",
    "title": "Generalized Linear Models (and more!)",
    "section": "Model Specifications",
    "text": "Model Specifications\n\nImage source: https://bbolker.github.io/mixedmodels-misc/glmmFAQ.html"
  },
  {
    "objectID": "r-modeling/slides/4-GeneralizedLinearModels.html#additional-models-and-functions",
    "href": "r-modeling/slides/4-GeneralizedLinearModels.html#additional-models-and-functions",
    "title": "Generalized Linear Models (and more!)",
    "section": "Additional models and functions",
    "text": "Additional models and functions\nRepeated Measures\n\nTake multiple measures on the same object over a period of time\nlme() in nlme package\n\nNonlinear Regression\n\nDoes not follow the typical polynomial framework\nnls() in base R, stats package\n\nGeneralized Additive Models (GAM)\n\nEstimates smoothing splines\ngam() in mcgv package\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-modeling/slides/5-Workshop.html#palmer-penguins-anova",
    "href": "r-modeling/slides/5-Workshop.html#palmer-penguins-anova",
    "title": "Workshop",
    "section": "Palmer Penguins (ANOVA)",
    "text": "Palmer Penguins (ANOVA)\nAre there differences in any of the measures (bill width, bill depth, flipper length, body mass) between the three species? Can you also account for the sex of the penguin?\n\ndata(penguins, package = \"palmerpenguins\")"
  },
  {
    "objectID": "r-modeling/slides/5-Workshop.html#production",
    "href": "r-modeling/slides/5-Workshop.html#production",
    "title": "Workshop",
    "section": "Production",
    "text": "Production\nIn a manufacturing study, the production times for 111 recent production runs were obtained. The researchers are curious if the production lot size can predict the production time in hours.\n\nproduction_data &lt;- read.csv(\"https://unl-statistics.github.io/R-workshops/r-modeling/data/production.csv\")\nhead(production_data)\n\n\n\n\n\n\n\n\nLot.Size\nTime\n\n\n\n\n15\n14.28\n\n\n9\n8.80\n\n\n7\n12.49\n\n\n4\n9.38\n\n\n9\n10.89\n\n\n21\n15.39"
  },
  {
    "objectID": "r-modeling/slides/5-Workshop.html#palmer-penguins-regression-extention",
    "href": "r-modeling/slides/5-Workshop.html#palmer-penguins-regression-extention",
    "title": "Workshop",
    "section": "Palmer Penguins (Regression Extention)",
    "text": "Palmer Penguins (Regression Extention)\nWhat if you wanted to fit a linear regression line between bill length and bill depth for each species?\n\ndata(penguins, package = \"palmerpenguins\")"
  },
  {
    "objectID": "r-modeling/slides/5-Workshop.html#environmental-condition",
    "href": "r-modeling/slides/5-Workshop.html#environmental-condition",
    "title": "Workshop",
    "section": "Environmental Condition",
    "text": "Environmental Condition\nHere’s the big picture: there is an environmental condition suspected of causing increased incidence of a certain medical disorder. To assess the suspected link, 100 clusters are randomly selected where the environmental condition does not exist (coded “Condition = 0”) in the data set) and 100 clusters are randomly selected where the environmental condition does exist (coded “Condition = 1”). All households at each site are sent a survey (in survey design, this is called cluster sampling) – response is voluntary.\n\ncondition_data &lt;- read.csv(\"https://unl-statistics.github.io/R-workshops/r-modeling/data/condition.csv\")\nhead(condition_data)\n\n\n\n\n\n\n\n\n\nCluster\nCondition\nN_respond\nN_affected\n\n\n\n\n1\n0\n23\n2\n\n\n2\n0\n25\n3\n\n\n3\n0\n26\n7\n\n\n4\n0\n9\n3"
  },
  {
    "objectID": "r-modeling/slides/5-Workshop.html#built-in-r-datasets",
    "href": "r-modeling/slides/5-Workshop.html#built-in-r-datasets",
    "title": "Workshop",
    "section": "Built in R Datasets",
    "text": "Built in R Datasets\n\ndata(package = .packages(all.available = TRUE))\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-modeling/code/99-YourTurnSolutions.html",
    "href": "r-modeling/code/99-YourTurnSolutions.html",
    "title": "R Modeling: Your Turn Solutions",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "r-modeling/code/99-YourTurnSolutions.html#load-libraries",
    "href": "r-modeling/code/99-YourTurnSolutions.html#load-libraries",
    "title": "R Modeling: Your Turn Solutions",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "UNL R Workshops",
    "section": "",
    "text": "Date\nTime\nCourse\nDescription\n\n\n\n\nJan 15\n\n\nMartin Luther King, Jr. Day\n\n\nJan 16\n9am - 4pm\nIntroduction to R\nLearn the basics of R & Rstudio, how to write your own R scripts and get an introduction to the tidyverse. We’ll start with the beginning and quickly get you up to speed with the basic tools of data exploration. You will learn how to import and manage data sets, create R objects, install and load R packages, and how to ask for help in R.\n\n\nJan 17\n9am - 4pm\nGraphics with ggplot2\nggplot2 provides a framework to produce elegant, high-end graphical displays using the Grammar of Graphics. You will learn how to create a wide variety of graphical displays in R. We will use lots of data examples to wok through the basic plots as well as more advanced tools, such as facetting, colors, themes and more.\n\n\nJan 18\n9am - 4pm\nData Wrangling\nThis workshop will to prepare you for dealing with messy data by walking you through real-life examples. We will help you to automate cleaning your data, fixing spelling errors, transforming variables, and generating data summaries using the split-apply-combine paradigm. We will also talk about wide and long format data and help you to convert between these formats and to know when each format is useful.\n\n\nJan 19\n9am - 4pm\nStatistical Modeling in R\nLearn how to fit models, test hypotheses, create model output tables and plots, and more! In the morning, we will cover model-fitting basics (linear regression, mixed models), and in the afternoon we will look into more advanced types of models (generalized linear mixed models, etc.).  The last part of this session is designed as a workshop, so bring your data to analyze (we will have some data sets if you need one!)"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#dplyr-terminology",
    "href": "r-format/slides/3-dplyr.html#dplyr-terminology",
    "title": "Data Wrangling",
    "section": "dplyr terminology",
    "text": "dplyr terminology\nThere are some of the primary dplyr verbs, representing distinct data analysis tasks:\n\nFilter: Select specified rows of a data frame, produce subsets\nArrange: Reorder the rows of a data frame\nSelect: Select particular columns of a data frame\nMutate: Add new or change existing columns of the data frame (as functions of existing columns)\nSummarise: Create collapsed summaries of a data frame\nGroup By: Introduce structure to a data frame"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#motivating-example-pipe-operator",
    "href": "r-format/slides/3-dplyr.html#motivating-example-pipe-operator",
    "title": "Data Wrangling",
    "section": "Motivating Example (Pipe Operator)",
    "text": "Motivating Example (Pipe Operator)\nUse the pipe operator to combine dplyr functions in chain, which allows us to perform more complicated data manipulations\nSyntax (Pipe dataframe as input into the dplyr function):\ndataframe %&gt;% dplyr_function()\n\nPipe Example, by Sharp Sight Labs"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#the-pipe-operator",
    "href": "r-format/slides/3-dplyr.html#the-pipe-operator",
    "title": "Data Wrangling",
    "section": "The pipe operator %>%",
    "text": "The pipe operator %&gt;%\nf(x) %&gt;% g(y) is equivalent to g(f(x),y)\ni.e. the output of one function is used as input to the next function. This function can be the identity\nConsequences:\n\nx %&gt;% f(y) is the same as f(x,y)\nstatements of the form k(h(g(f(x,y),z),u),v,w) become x %&gt;% f(y) %&gt;% g(z) %&gt;% h(u) %&gt;% k(v,w)\nread %&gt;% as “then do”\nin non-mathematical terms, the piping operator allows you to apply more than one different function at the same time to the same data frame."
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#filter",
    "href": "r-format/slides/3-dplyr.html#filter",
    "title": "Data Wrangling",
    "section": "Filter",
    "text": "Filter\nRead in the pitch data set. The data are from an experiment on different advanced metrics of MLB baseball pitchers different pitch types.\n\nlibrary(tidyverse)\npitch &lt;- \n  read_csv(\"https://raw.githubusercontent.com/unl-statistics/R-workshops/main/r-format/data/pitch.csv\")\n\npitch[-1] %&gt;% \n  filter(pitcher_hand == \"R\", pitch_type == \"CU\") %&gt;%\n  head(n=4)\n\n\n\n\n\n\nplayerid\npitcher_hand\npitch_type\nspin_rate\nab_result\naction_result\nadj_h\n\n\n\n\n2795\nR\nCU\n3000.024\n\\N\nF\n0\n\n\n2795\nR\nCU\n3146.456\n\\N\nB\n0\n\n\n3646\nR\nCU\n3012.067\n\\N\nB\n0\n\n\n2795\nR\nCU\n3026.256\nHB\nB\n0\n\n\n\n\n\n\n\nfilter is similar to the base function subset"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#filter-cont.",
    "href": "r-format/slides/3-dplyr.html#filter-cont.",
    "title": "Data Wrangling",
    "section": "Filter (cont.)",
    "text": "Filter (cont.)\nMultiple conditions in filter are combined with a logical AND (i.e. all conditions must be fulfilled)\ne.g. \nfilter(pitcher_hand == \"R\", pitch_type == \"CU\")\nLogical expressions can also be used\ne.g. \nfilter(pitcher_hand == \"R\" &  pitch_type == \"CU\") or filter(pitch_type == \"CU\" | subject == \"KN\")"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#your-turn-3-minutes",
    "href": "r-format/slides/3-dplyr.html#your-turn-3-minutes",
    "title": "Data Wrangling",
    "section": "Your Turn (~3 minutes)",
    "text": "Your Turn (~3 minutes)\n\nUse filter to get a subset of the pitchdata dataset\nEx. Filter the data down to left handed pitchers, who throw a curve with at least 3300 rpms (spin_rate)..\n%&gt;% the subset and create a plot\n\nhint: what is the default first argument of the ggplot function?"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#solution",
    "href": "r-format/slides/3-dplyr.html#solution",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\npitch %&gt;%\n  filter(spin_rate &gt;= 3200 & pitcher_hand == \"L\" & pitch_type == \"CU\") %&gt;%\n  ggplot(aes(x=action_result, y=spin_rate)) +\n  geom_point(aes(color=as.factor(playerid)))"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#arrange",
    "href": "r-format/slides/3-dplyr.html#arrange",
    "title": "Data Wrangling",
    "section": "Arrange",
    "text": "Arrange\nEasy way to arrange your data in ascending or descending order\n\npitch %&gt;% \n  subset(select = c(\"playerid\", \"spin_rate\")) %&gt;%\n  arrange(desc(playerid), spin_rate) \n\n\n\n\n\n\nplayerid\nspin_rate\n\n\n\n\n16669\n3055.508\n\n\n16669\n3072.307\n\n\n16669\n3075.055\n\n\n16669\n3164.546\n\n\n15686\n3032.944"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#arrange-1",
    "href": "r-format/slides/3-dplyr.html#arrange-1",
    "title": "Data Wrangling",
    "section": "Arrange",
    "text": "Arrange\nSuccessive variables are used for breaking ties from previous variables.\n\npitch %&gt;% \n  subset(select = c(\"playerid\", \"spin_rate\")) %&gt;%\n  arrange(playerid, spin_rate)\n\n\n\n\n\n\nplayerid\nspin_rate\n\n\n\n\n476\n3012.770\n\n\n476\n3017.095\n\n\n476\n3024.533\n\n\n476\n3028.328\n\n\n476\n3040.097"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#your-turn",
    "href": "r-format/slides/3-dplyr.html#your-turn",
    "title": "Data Wrangling",
    "section": "Your Turn",
    "text": "Your Turn\n\nLook up the help file for the function slice.\nUse slice on the arranged pitchdata dataset to select a single row\nuse slice to select multiple rows\n\nHint: Use the entire data set"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#solution-1",
    "href": "r-format/slides/3-dplyr.html#solution-1",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\npitch[-1] %&gt;% \n  arrange(desc(playerid), spin_rate) %&gt;% \n  slice(11)\n\n\n\n\n\n\nplayerid\npitcher_hand\npitch_type\nspin_rate\nab_result\naction_result\nadj_h\n\n\n\n\n15540\nR\nCU\n3041.712\n\\N\nF\n0\n\n\n\n\n\n\n\n\npitch[-1] %&gt;% \n  arrange(desc(playerid), spin_rate) %&gt;% \n  slice(1:5)\n\n\n\n\n\n\nplayerid\npitcher_hand\npitch_type\nspin_rate\nab_result\naction_result\nadj_h\n\n\n\n\n16669\nR\nCU\n3055.508\n\\N\nC\n0\n\n\n16669\nR\nCU\n3072.307\n\\N\nB\n0\n\n\n16669\nR\nCU\n3075.055\n\\N\nB\n0\n\n\n16669\nR\nCU\n3164.546\n\\N\nC\n0\n\n\n15686\nR\nCU\n3032.944\nK\nS\n0"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#select",
    "href": "r-format/slides/3-dplyr.html#select",
    "title": "Data Wrangling",
    "section": "Select",
    "text": "Select\n\nUsing Select we are easily able to create a subset of our data. This is similar to the subset function in base.\n\n\npitch %&gt;% \n  select(playerid, pitcher_hand, action_result, spin_rate) %&gt;%\n  head()\n\n\n\n\n\n\nplayerid\npitcher_hand\naction_result\nspin_rate\n\n\n\n\n2795\nR\nF\n3000.024\n\n\n959\nL\nC\n3051.596\n\n\n2795\nR\nB\n3146.456\n\n\n3646\nR\nB\n3012.067\n\n\n2795\nR\nB\n3026.256\n\n\n2795\nL\nB\n3038.633"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#summarise",
    "href": "r-format/slides/3-dplyr.html#summarise",
    "title": "Data Wrangling",
    "section": "Summarise",
    "text": "Summarise\n\nFinding summary statistics of a metric\n\n\n#na.rm - remove NAs from calculation\n\npitch %&gt;%\n    summarise(mean_spinrate = mean(spin_rate, na.rm=TRUE), \n              sd_spinrate = sd(spin_rate, na.rm = TRUE)) \n\n\n\n\n\n\nmean_spinrate\nsd_spinrate\n\n\n\n\n3125.67\n109.8614"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#summarise-and-group_by",
    "href": "r-format/slides/3-dplyr.html#summarise-and-group_by",
    "title": "Data Wrangling",
    "section": "summarise and group_by",
    "text": "summarise and group_by\n\nFinding summary statistics of a metric after accounting first for other variables\n\n\npitch %&gt;%\n    group_by(playerid) %&gt;%\n    summarise(mean_spinrate = mean(spin_rate, na.rm=TRUE), \n              sd_spinrate = sd(spin_rate, na.rm = TRUE)) %&gt;% \n  head(5)\n\n\n\n\n\n\nplayerid\nmean_spinrate\nsd_spinrate\n\n\n\n\n476\n3065.601\n44.64957\n\n\n607\n3278.486\nNA\n\n\n657\n3042.489\n43.01146\n\n\n959\n3056.323\n42.85757\n\n\n1030\n3044.114\n37.69737"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#your-turn-1",
    "href": "r-format/slides/3-dplyr.html#your-turn-1",
    "title": "Data Wrangling",
    "section": "Your Turn",
    "text": "Your Turn\n\nSelect only playerid, spin_rate, and action result\nGroup by both playerid and action result and find mean and sd of spin rates\n%&gt;% the summaries into a ggplot histogram"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#a-solution",
    "href": "r-format/slides/3-dplyr.html#a-solution",
    "title": "Data Wrangling",
    "section": "A Solution",
    "text": "A Solution\n\npitch %&gt;%\n  select(playerid, spin_rate, action_result) %&gt;%\n    group_by(playerid, action_result) %&gt;%\n    summarise(mean_spin = mean(spin_rate), \n              sd_spin = sd(spin_rate)) %&gt;%\n  ggplot(aes(x = mean_spin)) + geom_histogram() #&lt;&lt;"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#mutate",
    "href": "r-format/slides/3-dplyr.html#mutate",
    "title": "Data Wrangling",
    "section": "mutate",
    "text": "mutate\n\nChange an existing or create a new variable into the data\nCreating a new column in your data set that represents something new\nGreat for calculations\nHow would I create a calculation for how far above or below each players pitches are from their own average spin rates?"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#mutate-example",
    "href": "r-format/slides/3-dplyr.html#mutate-example",
    "title": "Data Wrangling",
    "section": "mutate Example",
    "text": "mutate Example\n\npitch %&gt;%\n    select(playerid, spin_rate, action_result) %&gt;%\n    group_by(playerid, action_result) %&gt;%\n    summarise(mean_spin = mean(spin_rate), \n              sd_spin = sd(spin_rate)) %&gt;%\n    mutate(mean = sum(mean_spin) / n()) %&gt;%\n    mutate(difference = mean - mean_spin) %&gt;% head()\n\n# A tibble: 6 × 6\n# Groups:   playerid [3]\n  playerid action_result mean_spin sd_spin  mean difference\n     &lt;dbl&gt; &lt;chr&gt;             &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt;      &lt;dbl&gt;\n1      476 B                 3077.   52.1  3058.      -19.1\n2      476 F                 3101.    1.69 3058.      -43.4\n3      476 S                 3041.   17.0  3058.       17.2\n4      476 X                 3013.   NA    3058.       45.3\n5      607 B                 3278.   NA    3278.        0  \n6      657 B                 3047.   46.2  3036.      -11.2"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#utilzing-ifelse",
    "href": "r-format/slides/3-dplyr.html#utilzing-ifelse",
    "title": "Data Wrangling",
    "section": "Utilzing ifelse",
    "text": "Utilzing ifelse\n\nSometimes you are tasked to create a new column based on a clause\nifelse function allows you to create an if else statement within the creation of the new variable.\nConsider rewriting the handedness of our pitchers.\nIf the pitcher_hand is R write “Right” if not, “Left”\n\n\npitch %&gt;% \n  select(pitcher_hand) %&gt;% \n  mutate(Handedness = ifelse(pitcher_hand == \"R\", \"Right\", \"Left\")) %&gt;% head()\n\n# A tibble: 6 × 2\n  pitcher_hand Handedness\n  &lt;chr&gt;        &lt;chr&gt;     \n1 R            Right     \n2 L            Left      \n3 R            Right     \n4 R            Right     \n5 R            Right     \n6 L            Left"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#caution-with-pipe-operator",
    "href": "r-format/slides/3-dplyr.html#caution-with-pipe-operator",
    "title": "Data Wrangling",
    "section": "Caution with pipe operator",
    "text": "Caution with pipe operator\nWhy does pitch$mean_spin not return a real-valued summary??\n\npitch$mean_spin\n\nNULL\n\n#Columns in our dataset\ncolnames(pitch[,-1])\n\n[1] \"playerid\"      \"pitcher_hand\"  \"pitch_type\"    \"spin_rate\"    \n[5] \"ab_result\"     \"action_result\" \"adj_h\""
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#reasons-for-pipe-operator-mishaps",
    "href": "r-format/slides/3-dplyr.html#reasons-for-pipe-operator-mishaps",
    "title": "Data Wrangling",
    "section": "Reasons for pipe operator mishaps",
    "text": "Reasons for pipe operator mishaps\n\nWhen we use the piping operator like we have been, the data is only ever being changed within the sequence\nWe only ever look at this new variable in the previous chunk.\nIt has not been created globally into the dataset itself\nTo do this, you need to create your new column by declaring it as its own variable.\n\n\npitch$mean_spin &lt;- mean(pitch$spin_rate)"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#mutate-or-summarize",
    "href": "r-format/slides/3-dplyr.html#mutate-or-summarize",
    "title": "Data Wrangling",
    "section": "mutate OR summarize?",
    "text": "mutate OR summarize?\nBoth commands introduce new variables - so which one should we use?\n\n\nmutate\n\nadds variables to the existing data set\nThe resulting variables must have the same length as the original data\ne.g. use for transformations, combinations of multiple variables\n\n\nsummarize\n\ncreates aggregates of the original data\nThe number of rows of the new dataset is determined by the number of combinations of the grouping structure.\nThe number of columns is determined by the number of grouping variables and the summary statistics."
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#shortcuts",
    "href": "r-format/slides/3-dplyr.html#shortcuts",
    "title": "Data Wrangling",
    "section": "Shortcuts",
    "text": "Shortcuts\nsummarize(n = n()) is equivalent to tally() (Number of unique rows in dataset)\n\npitch %&gt;% tally()\npitch %&gt;% summarize(n=n())\n\nNumber of unique observations in each group\n\npitch %&gt;% count(playerid, action_result)\npitch %&gt;% group_by(playerid, action_result) %&gt;% summarize(n=n())\npitch %&gt;% group_by(playerid, action_result) %&gt;% tally()"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#your-turn-10-min",
    "href": "r-format/slides/3-dplyr.html#your-turn-10-min",
    "title": "Data Wrangling",
    "section": "Your Turn (10 min)",
    "text": "Your Turn (10 min)\nBased on your (limited) knowledge of baseball, you determine what is a “successful” curveball. Then determine what pitchers pitched the most successful curveballs!\nNote: There are many different ways of answering this question. None are wrong and you don’t need to know anything about baseball to try. Consider criteria that it needs to meet.\nEx. A successful curveball needs to be above 90 mph in velocity and have over 3100 rpms in spin rate.\nutilize the sum() function to add up all your curveballs!"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#one-solution",
    "href": "r-format/slides/3-dplyr.html#one-solution",
    "title": "Data Wrangling",
    "section": "One Solution",
    "text": "One Solution\nConsider a success as any strike (S), catch (C), and foul ball (F)\n\n\nSScurve &lt;- pitch %&gt;%\n  select(\"playerid\", \"action_result\", \"ab_result\", \"adj_h\") %&gt;%  \n  arrange(desc(playerid)) %&gt;% \n  mutate(successfulCU = ifelse(\n    (action_result %in% c(\"C\",\"S\",\"F\")), 1, 0)) %&gt;%\n  group_by(playerid) %&gt;% \n  mutate(totalSSCU=sum(successfulCU)) %&gt;% \n  mutate(percentSSCU=totalSSCU / n())\n\n\n\n\n\n\nplayerid\naction_result\nab_result\nadj_h\nsuccessfulCU\ntotalSSCU\npercentSSCU\n\n\n\n\n16669\nC\n\\N\n0\n1\n2\n0.5\n\n\n16669\nB\n\\N\n0\n0\n2\n0.5\n\n\n16669\nB\n\\N\n0\n0\n2\n0.5\n\n\n16669\nC\n\\N\n0\n1\n2\n0.5"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#solution-cont.",
    "href": "r-format/slides/3-dplyr.html#solution-cont.",
    "title": "Data Wrangling",
    "section": "Solution (cont.)",
    "text": "Solution (cont.)\n\nCalculate successful curveball percentages\nLook at some graphs to see what the data actually looks like now.\n\n\npercentages &lt;- SScurve %&gt;% \n  distinct(playerid, totalSSCU, percentSSCU)\n\nggplot(data = percentages) + \n  geom_point(aes(x = percentSSCU, y = totalSSCU,\n                 colour = playerid))"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#solution-cont.-1",
    "href": "r-format/slides/3-dplyr.html#solution-cont.-1",
    "title": "Data Wrangling",
    "section": "Solution (cont.)",
    "text": "Solution (cont.)\nFilter down to get the best pitchers with a minimum of 50 curveballs thrown (our median)\n\npercentages %&gt;% \n  filter(totalSSCU &gt; 50) %&gt;% \n  arrange(desc(percentSSCU)) %&gt;% ggplot() +\n   geom_point(aes(x = percentSSCU, y = totalSSCU, colour = playerid))"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#your-turn-2",
    "href": "r-format/slides/3-dplyr.html#your-turn-2",
    "title": "Data Wrangling",
    "section": "Your Turn",
    "text": "Your Turn\nThe dataset ChickWeight is part of the core packages that come with R\nHint: data(ChickWeight) gets the data into your active session.\nFrom the help file:\n\nfour groups of chicks on different protein diets. The body weights of the chicks were measured at birth and every second day thereafter until day 20. They were also measured on day 21."
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#your-turn-3",
    "href": "r-format/slides/3-dplyr.html#your-turn-3",
    "title": "Data Wrangling",
    "section": "Your Turn",
    "text": "Your Turn\n\nCreate a line plot with each line representing the weight of each Chick\nFocus on weight on day 21. Draw side-by-side dotplots of weight by diet.\nBonus: Use summarize the average weight on day 21 under each diet. Overlay the dotplots by error bars around the average weight under each diet (see ?geom_errorbar)\n\nHint for 1: check out ?group and consider what varible or variables you might map to this option"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#solution---q1",
    "href": "r-format/slides/3-dplyr.html#solution---q1",
    "title": "Data Wrangling",
    "section": "Solution - Q1",
    "text": "Solution - Q1\n\nChickWeight %&gt;% \n  ggplot(aes(x=Time, y=weight, group=Chick, color=Diet)) +\n  geom_line() + \n  facet_wrap(~Diet)"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#solution---q2",
    "href": "r-format/slides/3-dplyr.html#solution---q2",
    "title": "Data Wrangling",
    "section": "Solution - Q2",
    "text": "Solution - Q2\n\nChickWeight %&gt;%   \n  filter(Time==21) %&gt;% \n  ggplot(aes(x=Diet)) +\n  geom_point(aes(y=weight, color=Diet), size=3)"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#solution---q3",
    "href": "r-format/slides/3-dplyr.html#solution---q3",
    "title": "Data Wrangling",
    "section": "Solution - Q3",
    "text": "Solution - Q3\nFirst, we need a separate dataset for the summary statistics:\n\nChickW1 &lt;- ChickWeight %&gt;% \n  filter(Time==21) %&gt;% \n  group_by(Diet) %&gt;% \n  summarize(mean_weight = mean(weight, na.rm=TRUE),\n            sd_weight = sd(weight, na.rm=TRUE)/n())"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#solution---q3-cont",
    "href": "r-format/slides/3-dplyr.html#solution---q3-cont",
    "title": "Data Wrangling",
    "section": "Solution - Q3 (cont)",
    "text": "Solution - Q3 (cont)\n\nChickWeight %&gt;% \n  filter(Time==21) %&gt;% \n  ggplot(aes(x=Diet)) +\n  geom_point(aes(y=weight), size=2) +\n  geom_errorbar(data= ChickW1, \n                aes(ymin = mean_weight-1.96*sd_weight, \n                    ymax = mean_weight+1.96*sd_weight, \n                    colour = Diet), width=.3) +\n  geom_point(data=ChickW1, aes(y=mean_weight, color=Diet), size=3)"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#mutate-is-incredibly-flexible",
    "href": "r-format/slides/3-dplyr.html#mutate-is-incredibly-flexible",
    "title": "Data Wrangling",
    "section": "Mutate is incredibly flexible",
    "text": "Mutate is incredibly flexible\nConsider a new variable gain, which gives the increase in weight of a chick since birth\n\nChickPlus &lt;- ChickWeight %&gt;% \n  group_by(Chick) %&gt;% \n  mutate(gain = weight - weight[Time == 0])\n\n\nChickPlus %&gt;% \n  filter(Chick == 1) %&gt;% \n  select(-Diet) %&gt;% \n  glimpse()\n\nRows: 12\nColumns: 4\nGroups: Chick [1]\n$ weight &lt;dbl&gt; 42, 51, 59, 64, 76, 93, 106, 125, 149, 171, 199, 205\n$ Time   &lt;dbl&gt; 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 21\n$ Chick  &lt;ord&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n$ gain   &lt;dbl&gt; 0, 9, 17, 22, 34, 51, 64, 83, 107, 129, 157, 163"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#plotting-weight-gain",
    "href": "r-format/slides/3-dplyr.html#plotting-weight-gain",
    "title": "Data Wrangling",
    "section": "Plotting weight gain",
    "text": "Plotting weight gain\n\nChickPlus %&gt;% \n  ggplot(aes(x = Time, y = gain, group = Chick)) + \n  geom_line(aes(color=Diet)) +\n  facet_wrap(~Diet)"
  },
  {
    "objectID": "r-format/slides/3-dplyr.html#recap",
    "href": "r-format/slides/3-dplyr.html#recap",
    "title": "Data Wrangling",
    "section": "Recap",
    "text": "Recap\n\nGetting used to dplyr actions can take a bit of time and practice\nRecognize keywords and match them to dplyr functions\nIncorporate dplyr functions in your regular workflow - the long-term benefits are there, we promise!\n\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-format/code/99-YourTurnSolutions.html",
    "href": "r-format/code/99-YourTurnSolutions.html",
    "title": "Your Turn Solutions",
    "section": "",
    "text": "Read the first two lines of the file into an object called midwest_names\nRead everything EXCEPT the first two lines into an object called midwest_data\nSolution\n\n#Would use your file path \n\nlibrary(tidyverse)\nmidwest_names &lt;- read_csv(\n  \"http://unl-statistics.github.io/R-workshops/r-format/data/midwest.csv\", n_max= 2, \n  col_names = FALSE)\nmidwest_data &lt;- read_csv(\n  \"http://unl-statistics.github.io/R-workshops/r-format/data/midwest.csv\", \n  skip = 2, col_names = FALSE)\nhead(midwest_data)\n\n# A tibble: 6 × 11\n  X1       X2       X3 X4        X5 X6        X7 X8        X9 X10      X11\n  &lt;chr&gt;    &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;\n1 1994-Nov &lt;NA&gt;  NA    &lt;NA&gt;   NA    &lt;NA&gt;   NA    28-Nov  1.12 &lt;NA&gt;   NA   \n2 1994-Dec 5-Dec  1.09 12-Dec  1.06 19-Dec  1.04 26-Dec  1.03 &lt;NA&gt;   NA   \n3 1995-Jan 2-Jan  1.02 9-Jan   1.05 16-Jan  1.03 23-Jan  1.05 30-Jan  1.06\n4 1995-Feb 6-Feb  1.04 13-Feb  1.04 20-Feb  1.03 27-Feb  1.05 &lt;NA&gt;   NA   \n5 1995-Mar 6-Mar  1.05 13-Mar  1.04 20-Mar  1.05 27-Mar  1.06 &lt;NA&gt;   NA   \n6 1995-Apr 3-Apr  1.09 10-Apr  1.11 17-Apr  1.12 24-Apr  1.15 &lt;NA&gt;   NA   \n\nhead(midwest_names)\n\n# A tibble: 2 × 11\n  X1         X2       X3    X4       X5    X6      X7    X8    X9    X10   X11  \n  &lt;chr&gt;      &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n1 Year-Month Week 1   &lt;NA&gt;  Week 2   &lt;NA&gt;  Week 3  &lt;NA&gt;  Week… &lt;NA&gt;  Week… &lt;NA&gt; \n2 &lt;NA&gt;       End Date Value End Date Value End Da… Value End … Value End … Value\n\n\n\n\n\nScroll to the bottom, choose one of the datasets (Demographics, Examination, etc.). Download the Data file (XPT)\nUse read.xport() to load the file into R\nBriefly examine the dataset you’ve imported (use head or tail, etc)\n\nlibrary(haven) \nsas.data &lt;- read_xpt(\"../data/DEMO_G.XPT\")\nsas.data %&gt;% head(5)\n\n# A tibble: 5 × 48\n   SEQN SDDSRVYR RIDSTATR RIAGENDR RIDAGEYR RIDAGEMN RIDRETH1 RIDRETH3 RIDEXMON\n  &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 62161        7        2        1       22       NA        3        3        2\n2 62162        7        2        2        3       NA        1        1        1\n3 62163        7        2        1       14       NA        5        6        2\n4 62164        7        2        2       44       NA        3        3        1\n5 62165        7        2        2       14       NA        4        4        2\n# ℹ 39 more variables: RIDEXAGY &lt;dbl&gt;, RIDEXAGM &lt;dbl&gt;, DMQMILIZ &lt;dbl&gt;,\n#   DMQADFC &lt;dbl&gt;, DMDBORN4 &lt;dbl&gt;, DMDCITZN &lt;dbl&gt;, DMDYRSUS &lt;dbl&gt;,\n#   DMDEDUC3 &lt;dbl&gt;, DMDEDUC2 &lt;dbl&gt;, DMDMARTL &lt;dbl&gt;, RIDEXPRG &lt;dbl&gt;,\n#   SIALANG &lt;dbl&gt;, SIAPROXY &lt;dbl&gt;, SIAINTRP &lt;dbl&gt;, FIALANG &lt;dbl&gt;,\n#   FIAPROXY &lt;dbl&gt;, FIAINTRP &lt;dbl&gt;, MIALANG &lt;dbl&gt;, MIAPROXY &lt;dbl&gt;,\n#   MIAINTRP &lt;dbl&gt;, AIALANGA &lt;dbl&gt;, WTINT2YR &lt;dbl&gt;, WTMEC2YR &lt;dbl&gt;,\n#   SDMVPSU &lt;dbl&gt;, SDMVSTRA &lt;dbl&gt;, INDHHIN2 &lt;dbl&gt;, INDFMIN2 &lt;dbl&gt;, …"
  },
  {
    "objectID": "r-format/code/99-YourTurnSolutions.html#reading-files",
    "href": "r-format/code/99-YourTurnSolutions.html#reading-files",
    "title": "Your Turn Solutions",
    "section": "",
    "text": "Read the first two lines of the file into an object called midwest_names\nRead everything EXCEPT the first two lines into an object called midwest_data\nSolution\n\n#Would use your file path \n\nlibrary(tidyverse)\nmidwest_names &lt;- read_csv(\n  \"http://unl-statistics.github.io/R-workshops/r-format/data/midwest.csv\", n_max= 2, \n  col_names = FALSE)\nmidwest_data &lt;- read_csv(\n  \"http://unl-statistics.github.io/R-workshops/r-format/data/midwest.csv\", \n  skip = 2, col_names = FALSE)\nhead(midwest_data)\n\n# A tibble: 6 × 11\n  X1       X2       X3 X4        X5 X6        X7 X8        X9 X10      X11\n  &lt;chr&gt;    &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt;\n1 1994-Nov &lt;NA&gt;  NA    &lt;NA&gt;   NA    &lt;NA&gt;   NA    28-Nov  1.12 &lt;NA&gt;   NA   \n2 1994-Dec 5-Dec  1.09 12-Dec  1.06 19-Dec  1.04 26-Dec  1.03 &lt;NA&gt;   NA   \n3 1995-Jan 2-Jan  1.02 9-Jan   1.05 16-Jan  1.03 23-Jan  1.05 30-Jan  1.06\n4 1995-Feb 6-Feb  1.04 13-Feb  1.04 20-Feb  1.03 27-Feb  1.05 &lt;NA&gt;   NA   \n5 1995-Mar 6-Mar  1.05 13-Mar  1.04 20-Mar  1.05 27-Mar  1.06 &lt;NA&gt;   NA   \n6 1995-Apr 3-Apr  1.09 10-Apr  1.11 17-Apr  1.12 24-Apr  1.15 &lt;NA&gt;   NA   \n\nhead(midwest_names)\n\n# A tibble: 2 × 11\n  X1         X2       X3    X4       X5    X6      X7    X8    X9    X10   X11  \n  &lt;chr&gt;      &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;\n1 Year-Month Week 1   &lt;NA&gt;  Week 2   &lt;NA&gt;  Week 3  &lt;NA&gt;  Week… &lt;NA&gt;  Week… &lt;NA&gt; \n2 &lt;NA&gt;       End Date Value End Date Value End Da… Value End … Value End … Value\n\n\n\n\n\nScroll to the bottom, choose one of the datasets (Demographics, Examination, etc.). Download the Data file (XPT)\nUse read.xport() to load the file into R\nBriefly examine the dataset you’ve imported (use head or tail, etc)\n\nlibrary(haven) \nsas.data &lt;- read_xpt(\"../data/DEMO_G.XPT\")\nsas.data %&gt;% head(5)\n\n# A tibble: 5 × 48\n   SEQN SDDSRVYR RIDSTATR RIAGENDR RIDAGEYR RIDAGEMN RIDRETH1 RIDRETH3 RIDEXMON\n  &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 62161        7        2        1       22       NA        3        3        2\n2 62162        7        2        2        3       NA        1        1        1\n3 62163        7        2        1       14       NA        5        6        2\n4 62164        7        2        2       44       NA        3        3        1\n5 62165        7        2        2       14       NA        4        4        2\n# ℹ 39 more variables: RIDEXAGY &lt;dbl&gt;, RIDEXAGM &lt;dbl&gt;, DMQMILIZ &lt;dbl&gt;,\n#   DMQADFC &lt;dbl&gt;, DMDBORN4 &lt;dbl&gt;, DMDCITZN &lt;dbl&gt;, DMDYRSUS &lt;dbl&gt;,\n#   DMDEDUC3 &lt;dbl&gt;, DMDEDUC2 &lt;dbl&gt;, DMDMARTL &lt;dbl&gt;, RIDEXPRG &lt;dbl&gt;,\n#   SIALANG &lt;dbl&gt;, SIAPROXY &lt;dbl&gt;, SIAINTRP &lt;dbl&gt;, FIALANG &lt;dbl&gt;,\n#   FIAPROXY &lt;dbl&gt;, FIAINTRP &lt;dbl&gt;, MIALANG &lt;dbl&gt;, MIAPROXY &lt;dbl&gt;,\n#   MIAINTRP &lt;dbl&gt;, AIALANGA &lt;dbl&gt;, WTINT2YR &lt;dbl&gt;, WTMEC2YR &lt;dbl&gt;,\n#   SDMVPSU &lt;dbl&gt;, SDMVSTRA &lt;dbl&gt;, INDHHIN2 &lt;dbl&gt;, INDFMIN2 &lt;dbl&gt;, …"
  },
  {
    "objectID": "r-format/code/99-YourTurnSolutions.html#summarizing-with-dplyr",
    "href": "r-format/code/99-YourTurnSolutions.html#summarizing-with-dplyr",
    "title": "Your Turn Solutions",
    "section": "Summarizing with dplyr",
    "text": "Summarizing with dplyr\n\n1. Use filter to get a subset of the pitch dataset\nEx. Filter the data down to left handed pitchers, who throw a curve with at least 3200 rpms (spin_rate), and the play results in a ball (action_result).\n%&gt;% the subset and create a plot\nSolution\n\npitch &lt;- read_csv(\"https://unl-statistics.github.io/R-workshops/r-format/data/pitch.csv\")\n\npitch %&gt;%\n  filter(spin_rate &gt;= 3200 & pitcher_hand == \"L\" & pitch_type == \"CU\") %&gt;%\n  ggplot(aes(x=action_result, y=spin_rate)) +\n  geom_point(aes(color=as.factor(playerid)))  #Your graph could be different\n\n\n\n\n\n\n2. Look up the help file for the function slice.\nUse slice on the arranged pitchdata dataset to select a single row\nUse slice to select multiple rows\n\npitch %&gt;% \n  arrange(desc(playerid), spin_rate) %&gt;% \n  slice(11)\n\n# A tibble: 1 × 8\n   ...1 playerid pitcher_hand pitch_type spin_rate ab_result action_result adj_h\n  &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;        &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;         &lt;dbl&gt;\n1   664    15540 R            CU             3042. \"\\\\N\"     F                 0\n\npitch %&gt;% \n  arrange(desc(playerid), spin_rate) %&gt;% \n  slice(1:5)\n\n# A tibble: 5 × 8\n   ...1 playerid pitcher_hand pitch_type spin_rate ab_result action_result adj_h\n  &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;        &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;         &lt;dbl&gt;\n1   966    16669 R            CU             3056. \"\\\\N\"     C                 0\n2  1136    16669 R            CU             3072. \"\\\\N\"     B                 0\n3  1165    16669 R            CU             3075. \"\\\\N\"     B                 0\n4  1411    16669 R            CU             3165. \"\\\\N\"     C                 0\n5   649    15686 R            CU             3033. \"K\"       S                 0\n\n\n\n\n3. Select only playerid, spin_rate, and action result\nGroup by both playerid and action result and find mean and sd of spin rates\n%&gt;% the summaries into a ggplot histogram\nSolution\n\npitch %&gt;%\n  select(playerid, spin_rate, action_result) %&gt;%\n    group_by(playerid, action_result) %&gt;%\n    summarise(mean_spin = mean(spin_rate), sd_spin = sd(spin_rate)) %&gt;%\n  ggplot(aes(x = mean_spin)) + geom_histogram()\n\n\n\n\n\n\n4. Based on your (limited) knowledge of baseball, you determine what is a “successful” curveball. Then determine what pitchers pitched the most successful curveballs!\nNote: There are many different ways of answering this question. None are wrong and you don’t need to know anything about baseball to try. Consider criteria that it needs to meet. Ex. A successful curveball needs to be above 90 mph in velocity and have over 3100 rpms in spin rate.\nYour answer may be different\nSolution\n\n#Consider a success as any strike (S), catch (C), and foul ball (F) \nSScurve &lt;- pitch %&gt;%\n  select(\"playerid\", \"action_result\", \"ab_result\", \"adj_h\") %&gt;%  \n  arrange(desc(playerid)) %&gt;% \n  mutate(successfulCU = ifelse(\n    (action_result %in% c(\"C\",\"S\",\"F\")), 1, 0)) %&gt;%\n  group_by(playerid) %&gt;% \n  mutate(totalSSCU=sum(successfulCU)) %&gt;% \n  mutate(percentSSCU=totalSSCU / n())\n\nSScurve %&gt;% head(4)\n\n# A tibble: 4 × 7\n# Groups:   playerid [1]\n  playerid action_result ab_result adj_h successfulCU totalSSCU percentSSCU\n     &lt;dbl&gt; &lt;chr&gt;         &lt;chr&gt;     &lt;dbl&gt;        &lt;dbl&gt;     &lt;dbl&gt;       &lt;dbl&gt;\n1    16669 C             \"\\\\N\"         0            1         2         0.5\n2    16669 B             \"\\\\N\"         0            0         2         0.5\n3    16669 B             \"\\\\N\"         0            0         2         0.5\n4    16669 C             \"\\\\N\"         0            1         2         0.5\n\n#Calculate successful curveball percentages\npercentages &lt;- SScurve %&gt;% \n  distinct(playerid, totalSSCU, percentSSCU)\n\n#Look at some graphs to see what the data actually looks like now.\nggplot(data = percentages) + \n  geom_point(aes(x = percentSSCU, y = totalSSCU,\n                 colour = playerid))\n\n\n\n#Filter down to get the best pitchers with a minimum of 50 curveballs thrown \npercentages %&gt;% \n  filter(totalSSCU &gt; 50) %&gt;% \n  arrange(desc(percentSSCU)) %&gt;% ggplot() +\n   geom_point(aes(x = percentSSCU, y = totalSSCU, colour = playerid))\n\n\n\n\n\n\n5. The dataset ChickWeight is part of the core packages that come with R\nSolution Create a line plot with each line representing the weight of each Chick\n\nChickWeight &lt;- ChickWeight\n\nChickWeight %&gt;% \n  ggplot(aes(x=Time, y=weight, group=Chick, color=Diet)) +\n  geom_line() + \n  facet_wrap(~Diet)\n\n\n\n\nFocus on weight on day 21. Draw side-by-side dotplots of weight by diet.\n\nChickWeight %&gt;%   \n  filter(Time==21) %&gt;% \n  ggplot(aes(x=Diet)) +\n  geom_point(aes(y=weight, color=Diet), size=3)\n\n\n\n\nBonus: Use summarize the average weight on day 21 under each diet. Overlay the dotplots by error bars around the average weight under each diet (see ?geom_errorbar)\n\nChickW1 &lt;- ChickWeight %&gt;% \n  filter(Time==21) %&gt;% \n  group_by(Diet) %&gt;% \n  summarize(mean_weight = mean(weight, na.rm=TRUE),\n            sd_weight = sd(weight, na.rm=TRUE)/n())\n\nChickWeight %&gt;% \n  filter(Time==21) %&gt;% \n  ggplot(aes(x=Diet)) +\n  geom_point(aes(y=weight), size=2) +\n  geom_errorbar(data= ChickW1, aes(ymin = mean_weight-1.96*sd_weight, ymax = mean_weight+1.96*sd_weight, colour = Diet), width=.3) +\n  geom_point(data=ChickW1, aes(y=mean_weight, color=Diet), size=3)"
  },
  {
    "objectID": "r-format/code/99-YourTurnSolutions.html#tidy-data",
    "href": "r-format/code/99-YourTurnSolutions.html#tidy-data",
    "title": "Your Turn Solutions",
    "section": "Tidy Data",
    "text": "Tidy Data\n\n1. The Iowa Data Portal is a wealth of information on and about the State of Iowa.\nAssess the ‘messiness’ of the data. List issues that prevent us from working with the data directly. Which of these issues are of type (1) or (2) of messiness?\n\nurl &lt;- \"https://data.iowa.gov/api/views/3adi-mht4/rows.csv\"\ncampaign &lt;- readr::read_csv(url)\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nSolution -Date is text, in the format of Month/Day/Year (Messy 2) -City coordinates are a combination of City name, state, zip code and geographic latitude and longitude. (Messy 2)  -Expenditure amount is a textual expression, not a number (Messy different) -No Messy 1? - problems of type Messy 1 are typically hard to detect and often up to interpretation/dependent on the analysis to be done. \n\n\n2. During the 1870 census data on people’s occupation was collected. The data occupation-1870 contains state-level aggregates of occupation by gender.\nUse tidyr to get the data into a long format.\nSeparate the occupation.gender type variable into two variables.\nSpread the data such that you can draw scatterplots of values for men against women facetted by occupation.\n\noccupation &lt;- read_csv(\"https://unl-statistics.github.io/R-workshops/r-format/data/occupation-1870.csv\")\noccupation_long &lt;- occupation %&gt;% \n  pivot_longer(Agriculture.Male:School.Female,names_to = \"Occupation\", values_to = \"Measurement\") %&gt;%\n  separate(Occupation, c(\"Occupation\", \"Gender\"), sep=\"\\\\.\") %&gt;%\n  pivot_wider(names_from = \"Gender\", values_from = \"Measurement\")\nhead(occupation_long, 10)\n\n# A tibble: 10 × 5\n   `Area name`       Total.Population Occupation      Male Female\n   &lt;chr&gt;                        &lt;dbl&gt; &lt;chr&gt;          &lt;dbl&gt;  &lt;dbl&gt;\n 1 Alabama                     996992 Agriculture   226768  64860\n 2 Alabama                     996992 Manufacturing  15078   1992\n 3 Alabama                     996992 Trade          14345     90\n 4 Alabama                     996992 Service        19449  22676\n 5 Alabama                     996992 School         38600  38539\n 6 Arizona Territory             9658 Agriculture     1284      1\n 7 Arizona Territory             9658 Manufacturing    883    156\n 8 Arizona Territory             9658 Trade            588      3\n 9 Arizona Territory             9658 Service         2979    136\n10 Arizona Territory             9658 School            79     70\n\n\n\n\n3. The flights dataset contains information on over 300,000 flights that departed from New York City in the year 2013.\nUsing the flights data, create a new column Date using lubridate. You will need to paste together the columns year, month, and day in order to do this. See the paste function.\nUse dplyr to calculate the average departure delay for each date.\nPlot the date versus the average departure delay\n\nlibrary(lubridate)\nflights &lt;- read.csv(\"http://unl-statistics.github.io/R-workshops/r-format/data/flights.csv\")\n\nflights$date &lt;- ymd(paste(flights$year, flights$month, flights$day, sep = \"-\"))\ndelay.dat &lt;- flights %&gt;% \n  group_by(date) %&gt;% \n  summarise(dep_delay = mean(dep_delay, na.rm = TRUE))\n\nggplot(delay.dat) + geom_line(aes(date, dep_delay))\n\n\n\n\n\n\n4. Read in the billboard top 100 music data:\nUse tidyr to convert this data into a long format.\nUse ggplot2 to create something like this:"
  },
  {
    "objectID": "r-format/code/99-YourTurnSolutions.html#joining-data",
    "href": "r-format/code/99-YourTurnSolutions.html#joining-data",
    "title": "Your Turn Solutions",
    "section": "Joining Data",
    "text": "Joining Data\n\n1. Load the Lahman package into your R session.\nJoin (relevant pieces of) the Master data set and the HallOfFame data.\nOutput the names of individuals with more than 15 attempts (attempts is how many times the playerid shows up in the hall of fame data. Make sure to deal with missing values appropriately.\nSolution\n\nlibrary(Lahman)\n\nVoted &lt;- HallOfFame %&gt;% \n  filter(!is.na(ballots)) %&gt;% \n  group_by(playerID) %&gt;% \n  arrange(yearID) %&gt;% \n  mutate( attempt = order(yearID))\n\nVoted &lt;- left_join(Voted, People %&gt;% \n                dplyr::select(playerID, nameFirst, nameLast), \n                   by = \"playerID\") %&gt;% filter(attempt &gt; 15)\n\nNames &lt;- Voted %&gt;% mutate(FullName = paste(nameFirst, nameLast))\nNames$FullName %&gt;% unique()\n\n [1] \"Rabbit Maranville\" \"Dazzy Vance\"       \"Ray Schalk\"       \n [4] \"Ross Youngs\"       \"Edd Roush\"         \"Zack Wheat\"       \n [7] \"Hank Gowdy\"        \"Eppa Rixey\"        \"Hack Wilson\"      \n[10] \"Red Faber\"         \"Red Ruffing\"       \"Phil Rizzuto\"     \n[13] \"Pee Wee Reese\"     \"Mickey Vernon\"     \"Don Newcombe\"     \n[16] \"Al Dark\""
  },
  {
    "objectID": "r-intro/slides/99-YourTurnSolutions.html",
    "href": "r-intro/slides/99-YourTurnSolutions.html",
    "title": "Your Turn Solutions",
    "section": "",
    "text": "Try playing with chunks of code from this session to further investigate the tips data:\n\nGet a summary of the daily shedding values (use the shed data set)\n\n\n#shed &lt;- read_csv(\"https://unl-statistics.github.io/R-workshops/01-r-intro/data/daily_shedding.csv\")\n\nshed &lt;- read.csv(\"../data/daily_shedding.csv\")\n\n\nsummary(shed$daily_shedding)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   3.912   3.765   5.521  13.218 \n\n\n\nMake side by side boxplots of final weight gain by treatment group (use the final_shed data set)\n\n\nlibrary(tidyverse)\n\nfinal_shed &lt;- shed %&gt;% \n  group_by(pignum) %&gt;% \n  mutate(gain = pig_weight[time_point == 21] - pig_weight[time_point == 0]) %&gt;% filter(time_point == 21)  %&gt;% ungroup() %&gt;% select(-c(4:9))\n\nggplot(final_shed) + \n  geom_boxplot( aes(treatment, gain, fill = treatment))\n\n\n\n\n\nCompute a wilcox test for control vs. the “Bglu” treatment group\n\n\nwilcox.test(total_shedding ~ treatment, data = final_shed,\n            subset = treatment %in% c(\"control\", \"Bglu\"))\n\n\n    Wilcoxon rank sum exact test\n\ndata:  total_shedding by treatment\nW = 23, p-value = 0.04326\nalternative hypothesis: true location shift is not equal to 0"
  },
  {
    "objectID": "r-intro/slides/99-YourTurnSolutions.html#motivating-example",
    "href": "r-intro/slides/99-YourTurnSolutions.html#motivating-example",
    "title": "Your Turn Solutions",
    "section": "",
    "text": "Try playing with chunks of code from this session to further investigate the tips data:\n\nGet a summary of the daily shedding values (use the shed data set)\n\n\n#shed &lt;- read_csv(\"https://unl-statistics.github.io/R-workshops/01-r-intro/data/daily_shedding.csv\")\n\nshed &lt;- read.csv(\"../data/daily_shedding.csv\")\n\n\nsummary(shed$daily_shedding)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   3.912   3.765   5.521  13.218 \n\n\n\nMake side by side boxplots of final weight gain by treatment group (use the final_shed data set)\n\n\nlibrary(tidyverse)\n\nfinal_shed &lt;- shed %&gt;% \n  group_by(pignum) %&gt;% \n  mutate(gain = pig_weight[time_point == 21] - pig_weight[time_point == 0]) %&gt;% filter(time_point == 21)  %&gt;% ungroup() %&gt;% select(-c(4:9))\n\nggplot(final_shed) + \n  geom_boxplot( aes(treatment, gain, fill = treatment))\n\n\n\n\n\nCompute a wilcox test for control vs. the “Bglu” treatment group\n\n\nwilcox.test(total_shedding ~ treatment, data = final_shed,\n            subset = treatment %in% c(\"control\", \"Bglu\"))\n\n\n    Wilcoxon rank sum exact test\n\ndata:  total_shedding by treatment\nW = 23, p-value = 0.04326\nalternative hypothesis: true location shift is not equal to 0"
  },
  {
    "objectID": "r-intro/slides/99-YourTurnSolutions.html#basics",
    "href": "r-intro/slides/99-YourTurnSolutions.html#basics",
    "title": "Your Turn Solutions",
    "section": "Basics",
    "text": "Basics\nUsing the R Reference Card (and the Help pages, if needed), do the following:\n\nFind out how many rows and columns the `iris’ data set has. Figure out at least 2 ways to do this. Hint: “Variable Information” section on the first page of the reference card!\n\n\nnrow(iris)\n\n[1] 150\n\nncol(iris)\n\n[1] 5\n\ndim(iris)\n\n[1] 150   5\n\n\n\nUse the rep function to construct the following vector: 1 1 2 2 3 3 4 4 5 5 Hint: “Data Creation” section of the reference card\n\n\nrep(1:5, each = 2)\n\n [1] 1 1 2 2 3 3 4 4 5 5\n\n\n\nUse rep to construct this vector: 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5\n\n\nrep(1:5, times = 3)\n\n [1] 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5\n\n\n\nFind out how many pigs had a total shedding value of less than 30 log10 CFUs. Hint: if you use the sum function on a logical vector, it’ll return how many TRUEs are in the vector:\n\n\nsum(c(TRUE, TRUE, FALSE, TRUE, FALSE))\n\n[1] 3\n\n\n\nsum(shed$total_shedding &lt; .30)\n\n[1] 66\n\n\n\nMore Challenging: Calculate the sum of the total shedding log10 CFUs of all pigs with a total shedding value of less than 30 log10 CFUs\n\n\nsum(shed$total_shedding[shed$total_shedding &lt; 30])\n\n[1] 1930.403\n\n\n\nWhich pigs have a shedding value less than or equal to 30 OR is in the Acid treatment group?\n\n\nshedding &lt;- final_shed$total_shedding\ntreatment &lt;- final_shed$treatment\nid &lt;- (shedding &lt;= 30 | treatment == \"Acid\")\nfinal_shed[id,]\n\n# A tibble: 15 × 7\n   pignum time_point pig_weight daily_shedding treatment total_shedding  gain\n    &lt;int&gt;      &lt;int&gt;      &lt;dbl&gt;          &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;dbl&gt;\n 1     97         21       24.9           0    RPS                  0    12.9\n 2    181         21       34.6           3.91 RPS                 23.8  16.9\n 3    321         21       28.8           3.91 RPS                 28.0  13.5\n 4    373         21       33.3           0    RPS                 29.1  16.7\n 5    392         21       29.3           0    RPS                 19.6  16.2\n 6     26         21       23.8           4.61 Acid                35.0  12.3\n 7     52         21       34.7           3.91 Acid                34.0  17.2\n 8    126         21       24.3           3.91 Acid                48.4  11.9\n 9    152         21       29.7           3.91 Acid                48.6  14.6\n10    178         21       33.3           3.91 Acid                35.8  16.6\n11    211         21       28.6           0    Acid                30.9  14.4\n12    348         21       27.2           3.91 Acid                58.5  12.9\n13    361         21       19.5           0    Acid                40.1  10.0\n14    378         21       31.6           3.91 Acid                34.0  15.7\n15    426         21       35.0           3.91 Acid                33.5  17.6"
  },
  {
    "objectID": "r-intro/slides/99-YourTurnSolutions.html#data-structures",
    "href": "r-intro/slides/99-YourTurnSolutions.html#data-structures",
    "title": "Your Turn Solutions",
    "section": "Data Structures",
    "text": "Data Structures\n\nIn row_matrix, change ‘byrow = FALSE’ to see what happens\n\n\nmatrix(\n  c(1, 2, 3, 4, 5, 6, 7, 8, 9),\n  nrow = 3,  \n  ncol = 3,        \n  byrow = FALSE        \n)\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n\n\nRecreate this matrix.\n\n\nmatrix(c(2,4,6,8,10,12), nrow=3, ncol = 2, byrow = FALSE)\n\n     [,1] [,2]\n[1,]    2    8\n[2,]    4   10\n[3,]    6   12\n\n\n\nMake a data frame with column 1: 1,2,3,4,5,6 and column 2: a,b,a,b,a,b\n\n\nmydf &lt;- data.frame(col1 = 1:6, col2 = rep(c(\"a\", \"b\"), times = 3))\n\n\nSelect only rows with value “a” in column 2 using logical vector\n\n\nmydf[mydf$col2 == \"a\",]\n\n  col1 col2\n1    1    a\n3    3    a\n5    5    a\n\n\n\n\n\n\nnames(mydf) &lt;- c(\"Bulldogs\", \"Tigers\")\n\n\nmtcars is a built in data set like iris: Extract the 4th row of the mtcars data.\n\n\nmtcars[4,]\n\n                mpg cyl disp  hp drat    wt  qsec vs am gear carb\nHornet 4 Drive 21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\n\n\n\nCreate another column in the flower data frame, that is the sum of Sepal Width, Sepal Length, Petal Width and Petal Length.\n\n\nflower &lt;- iris\n\ntotal &lt;- flower$Sepal.Length + flower$Sepal.Width + flower$Petal.Length + flower$Petal.Width\n\nflower2 &lt;- data.frame(flower, total)\n\nhead(flower2)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species total\n1          5.1         3.5          1.4         0.2  setosa  10.2\n2          4.9         3.0          1.4         0.2  setosa   9.5\n3          4.7         3.2          1.3         0.2  setosa   9.4\n4          4.6         3.1          1.5         0.2  setosa   9.4\n5          5.0         3.6          1.4         0.2  setosa  10.2\n6          5.4         3.9          1.7         0.4  setosa  11.4\n\n\n\nStep Further. Create a data frame of observations where Sepal Length is greater than 6. Then create another column in the this data frame, that is the sum of Sepal Width and Sepal Length\n\n\nflower_s &lt;- flower[flower$Sepal.Length&gt;6, ]\n\ntotal_s &lt;- flower_s$Sepal.Length + flower_s$Sepal.Width\n\nhead(data.frame(flower_s, total_s))\n\n   Sepal.Length Sepal.Width Petal.Length Petal.Width    Species total_s\n51          7.0         3.2          4.7         1.4 versicolor    10.2\n52          6.4         3.2          4.5         1.5 versicolor     9.6\n53          6.9         3.1          4.9         1.5 versicolor    10.0\n55          6.5         2.8          4.6         1.5 versicolor     9.3\n57          6.3         3.3          4.7         1.6 versicolor     9.6\n59          6.6         2.9          4.6         1.3 versicolor     9.5\n\n\n\nCreate a list containing a vector and a 2x3 data frame\n\n\nmylist &lt;- list(vec = 1:6, df = data.frame(x = 1:2, y = 3:4, z = 5:6))\n\n\nUse indexing to select the data frame from your list\n\n\nmylist[[2]]\n\n  x y z\n1 1 3 5\n2 2 4 6\n\n\n\nUse further indexing to select the first row from the data frame in your list\n\n\nmylist[[2]][1,]\n\n  x y z\n1 1 3 5\n\n\n\nView the top 8 rows of mtcars data\n\n\nhead(mtcars, n = 8)\n\n                   mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nDuster 360        14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 240D         24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\n\n\n\nWhat type of object is the mtcars data set?\n\n\nstr(mtcars)\n\n'data.frame':   32 obs. of  11 variables:\n $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...\n $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...\n $ disp: num  160 160 108 258 360 ...\n $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...\n $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...\n $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...\n $ qsec: num  16.5 17 18.6 19.4 17 ...\n $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...\n $ am  : num  1 1 1 0 0 0 0 0 0 0 ...\n $ gear: num  4 4 4 3 3 3 3 4 4 4 ...\n $ carb: num  4 4 1 1 2 1 4 2 2 4 ...\n\n\n\nHow many rows are in iris data set? (try finding this using dim or indexing + length)\n\n\ndim(iris)\n\n[1] 150   5\n\n\n\nSummarize the values in each column in iris data set\n\n\nsummary(iris)\n\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50"
  },
  {
    "objectID": "r-intro/slides/99-YourTurnSolutions.html#packages-and-programming",
    "href": "r-intro/slides/99-YourTurnSolutions.html#packages-and-programming",
    "title": "Your Turn Solutions",
    "section": "Packages and Programming",
    "text": "Packages and Programming\n\nCreate a function that takes numeric input and provides the mean and a 95% confidence interval for the mean for the data (the t.test function could be useful)\n\n\nmean_and_ci &lt;- function(x) {\n    themean &lt;- mean(x)\n    theci &lt;- t.test(x)$conf.int\n    \n    return(list(mean = themean, ci = theci))\n}\n\n\nAdd checks to your function to make sure the data is either numeric or logical. If it is logical convert it to numeric.\n\n\nmean_and_ci &lt;- function(x) {\n    if (!is.numeric(x) && !is.logical(x)) stop(\"Need logical or numeric data\")\n    \n    x &lt;- as.numeric(x)\n    \n    themean &lt;- mean(x)\n    theci &lt;- t.test(x)$conf.int\n    \n    return(list(mean = themean, ci = theci))\n}\n\n\nLoop over the columns of the diamonds data set and apply your function to all of the numeric columns.\n\n\nfor (i in colnames(diamonds)) {\n  if (is.numeric(diamonds[,i,drop = TRUE])) {print(mean_and_ci(diamonds[,i,drop = TRUE]))}\n  else {print(\"nope\")}\n}\n\n$mean\n[1] 0.7979397\n\n$ci\n[1] 0.7939395 0.8019400\nattr(,\"conf.level\")\n[1] 0.95\n\n[1] \"nope\"\n[1] \"nope\"\n[1] \"nope\"\n$mean\n[1] 61.7494\n\n$ci\n[1] 61.73731 61.76150\nattr(,\"conf.level\")\n[1] 0.95\n\n$mean\n[1] 57.45718\n\n$ci\n[1] 57.43833 57.47604\nattr(,\"conf.level\")\n[1] 0.95\n\n$mean\n[1] 3932.8\n\n$ci\n[1] 3899.132 3966.467\nattr(,\"conf.level\")\n[1] 0.95\n\n$mean\n[1] 5.731157\n\n$ci\n[1] 5.721690 5.740624\nattr(,\"conf.level\")\n[1] 0.95\n\n$mean\n[1] 5.734526\n\n$ci\n[1] 5.724887 5.744165\nattr(,\"conf.level\")\n[1] 0.95\n\n$mean\n[1] 3.538734\n\n$ci\n[1] 3.532778 3.544689\nattr(,\"conf.level\")\n[1] 0.95"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#motivating-example",
    "href": "r-intro/slides/2-MotivatingExample.html#motivating-example",
    "title": "Motivating Example",
    "section": "Motivating Example",
    "text": "Motivating Example\n\nKick off the workshop by exploring a real data set using R!\nGoal: get the flavor of using R for data management and exploration\nDon’t worry about understanding all the coding right away\nWe will go back and explain how it all works in detail\nFollow along using 2-MotivatingExample.R\nTip: Using “#” in your R File to take notes\n\nSuper important to document your code!"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#getting-started",
    "href": "r-intro/slides/2-MotivatingExample.html#getting-started",
    "title": "Motivating Example",
    "section": "Getting Started",
    "text": "Getting Started\nLet’s begin by installing and loading tidyverse:\n\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\n\nThis workshop will focus largely on a group of packages that live together under the name tidyverse.\ntidyverse includes the following well known packages:\n\nggplot2\ndplyr\ntidyr\nreadr\nand more!"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#salmonella-shedding-data",
    "href": "r-intro/slides/2-MotivatingExample.html#salmonella-shedding-data",
    "title": "Motivating Example",
    "section": "Salmonella Shedding Data",
    "text": "Salmonella Shedding Data\n\nFecal Salmonella shedding recorded over the course of 21 days\nSeveral variables were recorded for each pig at certain time points:\n\nAmount of Salmonella in feces (log10)\nPig weight (kg)\nDietary treatment group\n\nPrimary Question: Do the different dietary treatments affect Salmonella shedding?"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#first-look-at-data-in-r",
    "href": "r-intro/slides/2-MotivatingExample.html#first-look-at-data-in-r",
    "title": "Motivating Example",
    "section": "First look at data in R",
    "text": "First look at data in R\nLet’s use R to look at the top few rows of the Salmonella shedding data set. First, we load the data set using read_csv:\n\nshed &lt;- read_csv(\"https://unl-statistics.github.io/R-workshops/r-intro/data/daily_shedding.csv\")\n\nNow, we use the head function to look at the first 6 rows of the data:\n\nhead(shed)\n\n# A tibble: 6 × 12\n  pignum time_point pig_weight  temp pan_wt wet_wt Dry_wt_pan Dry_weight\n   &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n1     77          2         NA  103.   1.02   1.09       1.31       0.29\n2     87          2         NA  104.   1.04   1.02       1.33       0.29\n3    122          2         NA  104.   1.02   0.99       1.11       0.09\n4    160          2         NA  104.   1.09   1          1.36       0.27\n5    191          2         NA  104.   1.03   1.02       1.27       0.24\n6    224          2         NA  103    1.08   1          1.39       0.31\n# ℹ 4 more variables: percent_drymatter &lt;dbl&gt;, daily_shedding &lt;dbl&gt;,\n#   treatment &lt;chr&gt;, total_shedding &lt;dbl&gt;"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#salmonella-shedding-data-attributes",
    "href": "r-intro/slides/2-MotivatingExample.html#salmonella-shedding-data-attributes",
    "title": "Motivating Example",
    "section": "Salmonella Shedding Data: Attributes",
    "text": "Salmonella Shedding Data: Attributes\nHow big is this data set, and what types of variables are in each column?\n\nstr(shed)\n\nspc_tbl_ [295 × 12] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ pignum           : num [1:295] 77 87 122 160 191 224 337 345 419 458 ...\n $ time_point       : num [1:295] 2 2 2 2 2 2 2 2 2 2 ...\n $ pig_weight       : num [1:295] NA NA NA NA NA NA NA NA NA NA ...\n $ temp             : num [1:295] 103 104 104 104 104 ...\n $ pan_wt           : num [1:295] 1.02 1.04 1.02 1.09 1.03 1.08 1.03 1.09 1.07 1.04 ...\n $ wet_wt           : num [1:295] 1.09 1.02 0.99 1 1.02 1 1.02 0.99 1.07 1.06 ...\n $ Dry_wt_pan       : num [1:295] 1.31 1.33 1.11 1.36 1.27 1.39 1.3 1.24 1.38 1.26 ...\n $ Dry_weight       : num [1:295] 0.29 0.29 0.09 0.27 0.24 0.31 0.27 0.15 0.31 0.22 ...\n $ percent_drymatter: num [1:295] 26.61 28.43 9.09 27 23.53 ...\n $ daily_shedding   : num [1:295] 5.3 5.7 13.22 6.75 5.86 ...\n $ treatment        : chr [1:295] \"control\" \"control\" \"control\" \"control\" ...\n $ total_shedding   : num [1:295] 2.3 2.48 5.74 2.93 2.54 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   pignum = col_double(),\n  ..   time_point = col_double(),\n  ..   pig_weight = col_double(),\n  ..   temp = col_double(),\n  ..   pan_wt = col_double(),\n  ..   wet_wt = col_double(),\n  ..   Dry_wt_pan = col_double(),\n  ..   Dry_weight = col_double(),\n  ..   percent_drymatter = col_double(),\n  ..   daily_shedding = col_double(),\n  ..   treatment = col_character(),\n  ..   total_shedding = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt;"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#salmonella-shedding-variables",
    "href": "r-intro/slides/2-MotivatingExample.html#salmonella-shedding-variables",
    "title": "Motivating Example",
    "section": "Salmonella Shedding: Variables",
    "text": "Salmonella Shedding: Variables\nLet’s get a summary of the values for each variable:\n\nsummary(shed)\n\n     pignum        time_point     pig_weight         temp           pan_wt     \n Min.   :  6.0   Min.   : 0.0   Min.   : 9.48   Min.   :101.2   Min.   :1.000  \n 1st Qu.:119.0   1st Qu.: 2.0   1st Qu.:16.02   1st Qu.:102.4   1st Qu.:1.030  \n Median :224.0   Median : 7.0   Median :19.78   Median :102.9   Median :1.050  \n Mean   :234.7   Mean   : 8.8   Mean   :21.01   Mean   :102.9   Mean   :1.054  \n 3rd Qu.:361.0   3rd Qu.:14.0   3rd Qu.:25.29   3rd Qu.:103.4   3rd Qu.:1.070  \n Max.   :472.0   Max.   :21.0   Max.   :36.30   Max.   :105.2   Max.   :1.120  \n                                NA's   :59      NA's   :118     NA's   :122    \n     wet_wt        Dry_wt_pan      Dry_weight    percent_drymatter\n Min.   :0.700   Min.   :1.110   Min.   :0.090   Min.   : 9.091   \n 1st Qu.:1.000   1st Qu.:1.300   1st Qu.:0.250   1st Qu.:24.292   \n Median :1.020   Median :1.320   Median :0.280   Median :26.923   \n Mean   :1.026   Mean   :1.322   Mean   :0.268   Mean   :26.109   \n 3rd Qu.:1.050   3rd Qu.:1.353   3rd Qu.:0.290   3rd Qu.:28.431   \n Max.   :1.110   Max.   :1.460   Max.   :0.380   Max.   :36.893   \n NA's   :123     NA's   :123     NA's   :123     NA's   :123      \n daily_shedding    treatment         total_shedding  \n Min.   : 0.000   Length:295         Min.   : 0.000  \n 1st Qu.: 0.000   Class :character   1st Qu.: 1.699  \n Median : 3.912   Mode  :character   Median :13.904  \n Mean   : 3.765                      Mean   :17.423  \n 3rd Qu.: 5.521                      3rd Qu.:30.893  \n Max.   :13.218                      Max.   :66.207"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#scatterplots",
    "href": "r-intro/slides/2-MotivatingExample.html#scatterplots",
    "title": "Motivating Example",
    "section": "Scatterplots",
    "text": "Scatterplots\nLet’s look at the relationship between time point and Salmonella shedding.\n\nggplot(shed, aes(x=time_point, y=total_shedding)) + geom_point()"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#more-scatterplots",
    "href": "r-intro/slides/2-MotivatingExample.html#more-scatterplots",
    "title": "Motivating Example",
    "section": "More Scatterplots",
    "text": "More Scatterplots\nColor the points by treatment groups\n\nggplot(shed, aes(x=time_point, y=total_shedding, colour = treatment)) + geom_point()"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#more-scatterplots-1",
    "href": "r-intro/slides/2-MotivatingExample.html#more-scatterplots-1",
    "title": "Motivating Example",
    "section": "More Scatterplots",
    "text": "More Scatterplots\nSwitch to lines for easier reading\n\nggplot(shed, aes(x=time_point, y=total_shedding, colour = treatment)) + geom_line(aes(group=pignum))"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#even-more-plots",
    "href": "r-intro/slides/2-MotivatingExample.html#even-more-plots",
    "title": "Motivating Example",
    "section": "Even More Plots",
    "text": "Even More Plots\nAdd faceting\n\nggplot(shed, aes(x=time_point, y=total_shedding, color=treatment)) + \n  geom_line(aes(group=pignum)) + \n  facet_wrap(~treatment)"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#variable-creation-and-data-filtering",
    "href": "r-intro/slides/2-MotivatingExample.html#variable-creation-and-data-filtering",
    "title": "Motivating Example",
    "section": "Variable Creation and Data Filtering",
    "text": "Variable Creation and Data Filtering\nWe will make a new variable in the data: gain = weight at day 21 - weight at day 0.\nWe will then filter the data to only include the final values.\n\nfinal_shed &lt;- shed %&gt;% \n  group_by(pignum) %&gt;% \n  mutate(gain = pig_weight[time_point == 21] - pig_weight[time_point == 0]) %&gt;% filter(time_point == 21) %&gt;% ungroup() %&gt;% select(-c(4:9))\n\nsummary(final_shed$gain)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   8.22   12.40   14.14   14.16   16.04   18.86"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#histogram",
    "href": "r-intro/slides/2-MotivatingExample.html#histogram",
    "title": "Motivating Example",
    "section": "Histogram",
    "text": "Histogram\nLet’s look distribution of the final shedding values with a histogram\n\nggplot(final_shed) + geom_histogram(aes(x = total_shedding))"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#one-pig-did-not-shed-at-all",
    "href": "r-intro/slides/2-MotivatingExample.html#one-pig-did-not-shed-at-all",
    "title": "Motivating Example",
    "section": "One pig did not shed at all…",
    "text": "One pig did not shed at all…\nWhich pig, and what treatment did it receive?\n\nfinal_shed[which.min(final_shed$total_shedding),]\n\n# A tibble: 1 × 7\n  pignum time_point pig_weight daily_shedding treatment total_shedding  gain\n   &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;          &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;dbl&gt;\n1     97         21       24.9              0 RPS                    0  12.9"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#shedding-by-treatment",
    "href": "r-intro/slides/2-MotivatingExample.html#shedding-by-treatment",
    "title": "Motivating Example",
    "section": "Shedding by Treatment",
    "text": "Shedding by Treatment\nLook at the average cumulative shedding value for each treatment separately\n\n# Using base `R`:\nmedian(final_shed$total_shedding[final_shed$treatment == \"control\"])\n\n[1] 44.42518\n\n# then repeat for each treatment. Or ...\n\n# Using `tidyverse`:\nfinal_shed %&gt;%  group_by(treatment) %&gt;% \n  summarise(med_shed = median(total_shedding))\n\n# A tibble: 6 × 2\n  treatment med_shed\n  &lt;chr&gt;        &lt;dbl&gt;\n1 Acid          35.4\n2 Bglu          37.6\n3 RCS           39.4\n4 RPS           29.1\n5 Zn+Cu         44.1\n6 control       44.4"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#statistical-significance",
    "href": "r-intro/slides/2-MotivatingExample.html#statistical-significance",
    "title": "Motivating Example",
    "section": "Statistical Significance",
    "text": "Statistical Significance\nThere is a difference, but is it statistically significant?\n\nwilcox.test(total_shedding ~ treatment, data = final_shed,\n            subset = treatment %in% c(\"control\", \"RPS\"))\n\n\n    Wilcoxon rank sum exact test\n\ndata:  total_shedding by treatment\nW = 75, p-value = 0.01327\nalternative hypothesis: true location shift is not equal to 0"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#boxplots",
    "href": "r-intro/slides/2-MotivatingExample.html#boxplots",
    "title": "Motivating Example",
    "section": "Boxplots",
    "text": "Boxplots\nWe could compare the cumulative shedding values of each treatment group with a side by side boxplot\n\nggplot(final_shed) + \n  geom_boxplot( aes(treatment, total_shedding, fill = treatment))"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#boxplots-again",
    "href": "r-intro/slides/2-MotivatingExample.html#boxplots-again",
    "title": "Motivating Example",
    "section": "Boxplots Again",
    "text": "Boxplots Again\nAlternatively, we could use the original data to compare the daily shedding values of each treatment group with side by side boxplots over time\n\nshed %&gt;% filter(time_point != 0) %&gt;% ggplot() + \n  geom_boxplot( aes(treatment, daily_shedding, fill = treatment), position = \"dodge\")  + \n  facet_wrap(~time_point)"
  },
  {
    "objectID": "r-intro/slides/2-MotivatingExample.html#your-turn",
    "href": "r-intro/slides/2-MotivatingExample.html#your-turn",
    "title": "Motivating Example",
    "section": "Your Turn",
    "text": "Your Turn\nTry playing with chunks of code from this session to further investigate the Salmonella shedding data:\n\nGet a summary of the daily shedding values (use the shed data set)\nMake side by side boxplots of final weight gain by treatment group (use the final_shed data set)\nCompute a Wilcox test for control vs. the “Bglu” treatment group\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#matrices",
    "href": "r-intro/slides/4-DataStructures.html#matrices",
    "title": "Data Structures",
    "section": "Matrices",
    "text": "Matrices\n\nA matrix is a rectangular arrangement of numbers in rows and columns\nThere are some functions in R that will require your data to be arranged as a matrix.\n\n\n# Creating a matrix (3x3)\nrow_matrix &lt;-  matrix(\n  # Taking sequence of elements \n  c(1, 2, 3, 4, 5, 6, 7, 8, 9),\n  # Number of rows\n  nrow = 3,  \n  # No. of columns\n  ncol = 3,        \n  # By default matrices are in column-wise order\n  # So this parameter decides how to arrange the matrix\n  byrow = TRUE         \n)\n\nrow_matrix\n\n     [,1] [,2] [,3]\n[1,]    1    2    3\n[2,]    4    5    6\n[3,]    7    8    9"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#naming-rows-and-columns-in-matrices",
    "href": "r-intro/slides/4-DataStructures.html#naming-rows-and-columns-in-matrices",
    "title": "Data Structures",
    "section": "Naming Rows and Columns in Matrices",
    "text": "Naming Rows and Columns in Matrices\n\n# Naming rows\nrownames(row_matrix) = c(\"r1\", \"r2\", \"r3\")\n  \n# Naming columns\ncolnames(row_matrix) = c(\"c1\", \"c2\", \"c3\")\n\nrow_matrix\n\n   c1 c2 c3\nr1  1  2  3\nr2  4  5  6\nr3  7  8  9"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#indexing-elements-in-a-matrix",
    "href": "r-intro/slides/4-DataStructures.html#indexing-elements-in-a-matrix",
    "title": "Data Structures",
    "section": "Indexing Elements in a Matrix",
    "text": "Indexing Elements in a Matrix\nIf only need certain elements in a matrix, you can index them\n\n#matrix[row,col]\n\nrow_matrix[1,]\n\nc1 c2 c3 \n 1  2  3 \n\nrow_matrix[,1]\n\nr1 r2 r3 \n 1  4  7 \n\nrow_matrix[c(1,3),2]\n\nr1 r3 \n 2  8"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#matrix-multiplication",
    "href": "r-intro/slides/4-DataStructures.html#matrix-multiplication",
    "title": "Data Structures",
    "section": "Matrix Multiplication",
    "text": "Matrix Multiplication\n\nA &lt;- matrix(c(1, 2, 3, 4), ncol=2)\nA\n\n     [,1] [,2]\n[1,]    1    3\n[2,]    2    4\n\nB &lt;- matrix(c(5, 6, 7, 8), ncol=2) #would print out similarily\n\nA%*%B\n\n     [,1] [,2]\n[1,]   23   31\n[2,]   34   46\n\n# Note * does element by element multiplication\n\nt(A) #transpose of A\n\n     [,1] [,2]\n[1,]    1    2\n[2,]    3    4"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#your-turn",
    "href": "r-intro/slides/4-DataStructures.html#your-turn",
    "title": "Data Structures",
    "section": "Your Turn",
    "text": "Your Turn\n\nIn row_matrix, change ‘byrow = FALSE’ to see what happens\nRecreate this matrix\n\n\n\n     [,1] [,2]\n[1,]    2    8\n[2,]    4   10\n[3,]    6   12\n\n\n\nIndex the above matrix to return “4”"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#data-frames",
    "href": "r-intro/slides/4-DataStructures.html#data-frames",
    "title": "Data Structures",
    "section": "Data Frames",
    "text": "Data Frames\n\nData Frames are the work horse of R objects\nStructured by rows and columns and can be indexed\nEach column is a variable of one type\nColumn names can be used to index a variable\nAdvice for naming variables applys to naming columns\nCan be specified by grouping vectors of equal length as columns"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#data-frame-indexing",
    "href": "r-intro/slides/4-DataStructures.html#data-frame-indexing",
    "title": "Data Structures",
    "section": "Data Frame Indexing",
    "text": "Data Frame Indexing\n\nElements indexed similar to a vector using [ ]\ndf[i,j] will select the element in the \\(i^{th}\\) row and \\(j^{th}\\) column\ndf[ ,j] will select the entire \\(j^{th}\\) column and treat it as a vector\ndf[i ,] will select the entire \\(i^{th}\\) row and treat it as a vector\nLogical or integer vectors can also be used in place of i and j to subset the row and columns"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#adding-a-new-variable-to-a-data-frame",
    "href": "r-intro/slides/4-DataStructures.html#adding-a-new-variable-to-a-data-frame",
    "title": "Data Structures",
    "section": "Adding a new Variable to a Data Frame",
    "text": "Adding a new Variable to a Data Frame\n\nMaybe you need to do a calculation using data in your data frame\nCreate a new vector that is the same length as other columns\nAppend new column to the data frame using the $ operator\nThe new data frame column will adopt the name of the vector"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#data-frame-demo",
    "href": "r-intro/slides/4-DataStructures.html#data-frame-demo",
    "title": "Data Structures",
    "section": "Data Frame Demo",
    "text": "Data Frame Demo\nUse Edgar Anderson’s Iris Data:\n\nflower &lt;- iris\n\nhead(flower)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#data-frame-demo-1",
    "href": "r-intro/slides/4-DataStructures.html#data-frame-demo-1",
    "title": "Data Structures",
    "section": "Data Frame Demo",
    "text": "Data Frame Demo\nSelect Species column (5th column):\n\nflower[,5]\n\n  [1] setosa     setosa     setosa     setosa     setosa     setosa    \n  [7] setosa     setosa     setosa     setosa     setosa     setosa    \n [13] setosa     setosa     setosa     setosa     setosa     setosa    \n [19] setosa     setosa     setosa     setosa     setosa     setosa    \n [25] setosa     setosa     setosa     setosa     setosa     setosa    \n [31] setosa     setosa     setosa     setosa     setosa     setosa    \n [37] setosa     setosa     setosa     setosa     setosa     setosa    \n [43] setosa     setosa     setosa     setosa     setosa     setosa    \n [49] setosa     setosa     versicolor versicolor versicolor versicolor\n [55] versicolor versicolor versicolor versicolor versicolor versicolor\n [61] versicolor versicolor versicolor versicolor versicolor versicolor\n [67] versicolor versicolor versicolor versicolor versicolor versicolor\n [73] versicolor versicolor versicolor versicolor versicolor versicolor\n [79] versicolor versicolor versicolor versicolor versicolor versicolor\n [85] versicolor versicolor versicolor versicolor versicolor versicolor\n [91] versicolor versicolor versicolor versicolor versicolor versicolor\n [97] versicolor versicolor versicolor versicolor virginica  virginica \n[103] virginica  virginica  virginica  virginica  virginica  virginica \n[109] virginica  virginica  virginica  virginica  virginica  virginica \n[115] virginica  virginica  virginica  virginica  virginica  virginica \n[121] virginica  virginica  virginica  virginica  virginica  virginica \n[127] virginica  virginica  virginica  virginica  virginica  virginica \n[133] virginica  virginica  virginica  virginica  virginica  virginica \n[139] virginica  virginica  virginica  virginica  virginica  virginica \n[145] virginica  virginica  virginica  virginica  virginica  virginica \nLevels: setosa versicolor virginica"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#demo-continued",
    "href": "r-intro/slides/4-DataStructures.html#demo-continued",
    "title": "Data Structures",
    "section": "Demo (Continued)",
    "text": "Demo (Continued)\nSelect Species column with the $ operator:\n\nflower$Species\n\n  [1] setosa     setosa     setosa     setosa     setosa     setosa    \n  [7] setosa     setosa     setosa     setosa     setosa     setosa    \n [13] setosa     setosa     setosa     setosa     setosa     setosa    \n [19] setosa     setosa     setosa     setosa     setosa     setosa    \n [25] setosa     setosa     setosa     setosa     setosa     setosa    \n [31] setosa     setosa     setosa     setosa     setosa     setosa    \n [37] setosa     setosa     setosa     setosa     setosa     setosa    \n [43] setosa     setosa     setosa     setosa     setosa     setosa    \n [49] setosa     setosa     versicolor versicolor versicolor versicolor\n [55] versicolor versicolor versicolor versicolor versicolor versicolor\n [61] versicolor versicolor versicolor versicolor versicolor versicolor\n [67] versicolor versicolor versicolor versicolor versicolor versicolor\n [73] versicolor versicolor versicolor versicolor versicolor versicolor\n [79] versicolor versicolor versicolor versicolor versicolor versicolor\n [85] versicolor versicolor versicolor versicolor versicolor versicolor\n [91] versicolor versicolor versicolor versicolor versicolor versicolor\n [97] versicolor versicolor versicolor versicolor virginica  virginica \n[103] virginica  virginica  virginica  virginica  virginica  virginica \n[109] virginica  virginica  virginica  virginica  virginica  virginica \n[115] virginica  virginica  virginica  virginica  virginica  virginica \n[121] virginica  virginica  virginica  virginica  virginica  virginica \n[127] virginica  virginica  virginica  virginica  virginica  virginica \n[133] virginica  virginica  virginica  virginica  virginica  virginica \n[139] virginica  virginica  virginica  virginica  virginica  virginica \n[145] virginica  virginica  virginica  virginica  virginica  virginica \nLevels: setosa versicolor virginica"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#demo-continued-1",
    "href": "r-intro/slides/4-DataStructures.html#demo-continued-1",
    "title": "Data Structures",
    "section": "Demo (Continued)",
    "text": "Demo (Continued)\n\nflower$Species == \"setosa\"\n\n  [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [13]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [25]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [37]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE\n [49]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [85] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n [97] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[109] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[121] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[133] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\n[145] FALSE FALSE FALSE FALSE FALSE FALSE"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#demo-continued-2",
    "href": "r-intro/slides/4-DataStructures.html#demo-continued-2",
    "title": "Data Structures",
    "section": "Demo (Continued)",
    "text": "Demo (Continued)\n\nflower[flower$Species==\"setosa\", ]\n\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1           5.1         3.5          1.4         0.2  setosa\n2           4.9         3.0          1.4         0.2  setosa\n3           4.7         3.2          1.3         0.2  setosa\n4           4.6         3.1          1.5         0.2  setosa\n5           5.0         3.6          1.4         0.2  setosa\n6           5.4         3.9          1.7         0.4  setosa\n7           4.6         3.4          1.4         0.3  setosa\n8           5.0         3.4          1.5         0.2  setosa\n9           4.4         2.9          1.4         0.2  setosa\n10          4.9         3.1          1.5         0.1  setosa\n11          5.4         3.7          1.5         0.2  setosa\n12          4.8         3.4          1.6         0.2  setosa\n13          4.8         3.0          1.4         0.1  setosa\n14          4.3         3.0          1.1         0.1  setosa\n15          5.8         4.0          1.2         0.2  setosa\n16          5.7         4.4          1.5         0.4  setosa\n17          5.4         3.9          1.3         0.4  setosa\n18          5.1         3.5          1.4         0.3  setosa\n19          5.7         3.8          1.7         0.3  setosa\n20          5.1         3.8          1.5         0.3  setosa\n21          5.4         3.4          1.7         0.2  setosa\n22          5.1         3.7          1.5         0.4  setosa\n23          4.6         3.6          1.0         0.2  setosa\n24          5.1         3.3          1.7         0.5  setosa\n25          4.8         3.4          1.9         0.2  setosa\n26          5.0         3.0          1.6         0.2  setosa\n27          5.0         3.4          1.6         0.4  setosa\n28          5.2         3.5          1.5         0.2  setosa\n29          5.2         3.4          1.4         0.2  setosa\n30          4.7         3.2          1.6         0.2  setosa\n31          4.8         3.1          1.6         0.2  setosa\n32          5.4         3.4          1.5         0.4  setosa\n33          5.2         4.1          1.5         0.1  setosa\n34          5.5         4.2          1.4         0.2  setosa\n35          4.9         3.1          1.5         0.2  setosa\n36          5.0         3.2          1.2         0.2  setosa\n37          5.5         3.5          1.3         0.2  setosa\n38          4.9         3.6          1.4         0.1  setosa\n39          4.4         3.0          1.3         0.2  setosa\n40          5.1         3.4          1.5         0.2  setosa\n41          5.0         3.5          1.3         0.3  setosa\n42          4.5         2.3          1.3         0.3  setosa\n43          4.4         3.2          1.3         0.2  setosa\n44          5.0         3.5          1.6         0.6  setosa\n45          5.1         3.8          1.9         0.4  setosa\n46          4.8         3.0          1.4         0.3  setosa\n47          5.1         3.8          1.6         0.2  setosa\n48          4.6         3.2          1.4         0.2  setosa\n49          5.3         3.7          1.5         0.2  setosa\n50          5.0         3.3          1.4         0.2  setosa"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#demo-continued-3",
    "href": "r-intro/slides/4-DataStructures.html#demo-continued-3",
    "title": "Data Structures",
    "section": "Demo (Continued)",
    "text": "Demo (Continued)\n\ntwo_sepal_width &lt;- flower$Sepal.Width * 2\n\nflower_new &lt;- data.frame(flower,two_sepal_width)\n\nhead(flower_new, n=3)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species two_sepal_width\n1          5.1         3.5          1.4         0.2  setosa             7.0\n2          4.9         3.0          1.4         0.2  setosa             6.0\n3          4.7         3.2          1.3         0.2  setosa             6.4\n\nncol(flower)\n\n[1] 5\n\nncol(flower_new)\n\n[1] 6"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#creating-our-own-data-frame",
    "href": "r-intro/slides/4-DataStructures.html#creating-our-own-data-frame",
    "title": "Data Structures",
    "section": "Creating our own Data Frame",
    "text": "Creating our own Data Frame\nCreate our own data frame using data_frame function\n\nlibrary(tidyverse)\n\nmydf &lt;- data_frame(NUMS = 1:5, \n                   lets = letters[1:5],\n                   vehicle = c(\"car\", \"boat\", \"car\", \"car\", \"boat\"))\nmydf\n\n# A tibble: 5 × 3\n   NUMS lets  vehicle\n  &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  \n1     1 a     car    \n2     2 b     boat   \n3     3 c     car    \n4     4 d     car    \n5     5 e     boat"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#renaming-columns",
    "href": "r-intro/slides/4-DataStructures.html#renaming-columns",
    "title": "Data Structures",
    "section": "Renaming columns",
    "text": "Renaming columns\nWe can use the names function to set that first column to lowercase:\n\nnames(mydf)[1]&lt;- (\"nums\")\nmydf\n\n# A tibble: 5 × 3\n   nums lets  vehicle\n  &lt;int&gt; &lt;chr&gt; &lt;chr&gt;  \n1     1 a     car    \n2     2 b     boat   \n3     3 c     car    \n4     4 d     car    \n5     5 e     boat"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#your-turn-1",
    "href": "r-intro/slides/4-DataStructures.html#your-turn-1",
    "title": "Data Structures",
    "section": "Your Turn",
    "text": "Your Turn\n\n\nMake a data frame with column 1: 1,2,3,4,5,6 and column 2: a,b,a,b,a,b\nSelect only rows with value \"a\" in column 2 using logical vector\nRename both column 1 and column 2 to something of your choosing.\nmtcars is a built-in data set like iris: Extract the 4th row of the mtcars data.\nCreate another column in the flower data frame, that is the sum of Sepal Width, Sepal Length, Petal Width and Petal Length.\n\n\nHint: use “+” instead of sum function (gives total sum). Better ways to do this using dplyr package, but just trying to practice adding new columns right now\n\n\nStep Further. Create another column in the flower data frame, that is the sum of Sepal Width, Sepal Length, Petal Width and Petal Length, where Sepal Length is greater than 6."
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#lists",
    "href": "r-intro/slides/4-DataStructures.html#lists",
    "title": "Data Structures",
    "section": "Lists",
    "text": "Lists\n\nLists are a structured collection of R objects\nR objects in a list need not be the same type\nCreate lists using the list function\nLists indexed using double square brackets [[ ]] to select an object\nUse single square brackets to select two or more list elements. e.g. [c(2,4)]\nFor named lists, can select a list element with $ like data frames"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#list-example",
    "href": "r-intro/slides/4-DataStructures.html#list-example",
    "title": "Data Structures",
    "section": "List Example",
    "text": "List Example\nCreating a list containing a vector and a matrix:\n\nmylist &lt;- list(matrix(letters[1:10], nrow = 2, ncol = 5),\n               seq(0, 49, by = 7))\nmylist\n\n[[1]]\n     [,1] [,2] [,3] [,4] [,5]\n[1,] \"a\"  \"c\"  \"e\"  \"g\"  \"i\" \n[2,] \"b\"  \"d\"  \"f\"  \"h\"  \"j\" \n\n[[2]]\n[1]  0  7 14 21 28 35 42 49\n\n\nUse indexing to select the second list element:\n\nmylist[[2]]\n\n[1]  0  7 14 21 28 35 42 49"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#your-turn-2",
    "href": "r-intro/slides/4-DataStructures.html#your-turn-2",
    "title": "Data Structures",
    "section": "Your Turn",
    "text": "Your Turn\n\nCreate a list containing a vector and a 2x3 data frame\nUse indexing to select the data frame from your list\nUse further indexing to select the first row from the data frame in your list"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#examining-objects",
    "href": "r-intro/slides/4-DataStructures.html#examining-objects",
    "title": "Data Structures",
    "section": "Examining Objects",
    "text": "Examining Objects\n\nhead(x) - View top 6 rows of a data frame\ntail(x) - View bottom 6 rows of a data frame\nsummary(x) - Summary statistics\nstr(x) - View structure of object\ndim(x) - View dimensions of object\nlength(x) - Returns the length of a vector"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#examining-objects-example",
    "href": "r-intro/slides/4-DataStructures.html#examining-objects-example",
    "title": "Data Structures",
    "section": "Examining Objects Example",
    "text": "Examining Objects Example\nWe can examine the first two values of an object by passing the n parameter to the head function:\n\nhead(iris, n = 2)\n\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n\n\nWhat’s its structure?\n\nstr(iris)\n\n'data.frame':   150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ..."
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#your-turn-3",
    "href": "r-intro/slides/4-DataStructures.html#your-turn-3",
    "title": "Data Structures",
    "section": "Your Turn",
    "text": "Your Turn\n\nView the top 8 rows of mtcars data\nWhat type of object is the mtcars data set?\nHow many rows are in iris data set? (Try finding this using dim or indexing + length)\nSummarize the values in each column in iris data set"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#working-with-output-from-a-function",
    "href": "r-intro/slides/4-DataStructures.html#working-with-output-from-a-function",
    "title": "Data Structures",
    "section": "Working with Output from a Function",
    "text": "Working with Output from a Function\n\nThe output from a function can be saved as an object\nThe object can be any type (data frame, vector, etc.) but is often a list object\nItems from the output can be extracted for further computing\nThe output object can be examined using functions like str(x)"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#saving-output-demo",
    "href": "r-intro/slides/4-DataStructures.html#saving-output-demo",
    "title": "Data Structures",
    "section": "Saving Output Demo",
    "text": "Saving Output Demo\n\nt-test using iris data to see if petal lengths for setosa and versicolor are the same\nt.test function can only handle two groups, so we subset out the virginica species\n\n\nt.test(Petal.Length ~ Species, data = iris[iris$Species != \"virginica\", ])\n\n\n    Welch Two Sample t-test\n\ndata:  Petal.Length by Species\nt = -39.493, df = 62.14, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means between group setosa and group versicolor is not equal to 0\n95 percent confidence interval:\n -2.939618 -2.656382\nsample estimates:\n    mean in group setosa mean in group versicolor \n                   1.462                    4.260"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#demo-continued-4",
    "href": "r-intro/slides/4-DataStructures.html#demo-continued-4",
    "title": "Data Structures",
    "section": "Demo (Continued)",
    "text": "Demo (Continued)\nSave the output of the t-test to an object\n\ntout &lt;- t.test(Petal.Length ~ Species, data = iris[iris$Species != \"virginica\", ])\n\nLet’s look at the structure of this object:\n\nstr(tout)\n\nList of 10\n $ statistic  : Named num -39.5\n  ..- attr(*, \"names\")= chr \"t\"\n $ parameter  : Named num 62.1\n  ..- attr(*, \"names\")= chr \"df\"\n $ p.value    : num 9.93e-46\n $ conf.int   : num [1:2] -2.94 -2.66\n  ..- attr(*, \"conf.level\")= num 0.95\n $ estimate   : Named num [1:2] 1.46 4.26\n  ..- attr(*, \"names\")= chr [1:2] \"mean in group setosa\" \"mean in group versicolor\"\n $ null.value : Named num 0\n  ..- attr(*, \"names\")= chr \"difference in means between group setosa and group versicolor\"\n $ stderr     : num 0.0708\n $ alternative: chr \"two.sided\"\n $ method     : chr \"Welch Two Sample t-test\"\n $ data.name  : chr \"Petal.Length by Species\"\n - attr(*, \"class\")= chr \"htest\""
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#demo-extracting-the-p-value",
    "href": "r-intro/slides/4-DataStructures.html#demo-extracting-the-p-value",
    "title": "Data Structures",
    "section": "Demo: Extracting the P-Value",
    "text": "Demo: Extracting the P-Value\nSince this is simply a list, we can use our regular indexing:\n\n#pvalue\ntout$p.value\n\n[1] 9.934433e-46\n\ntout[[3]]\n\n[1] 9.934433e-46"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#importing-data",
    "href": "r-intro/slides/4-DataStructures.html#importing-data",
    "title": "Data Structures",
    "section": "Importing Data",
    "text": "Importing Data\nWe often need to import in our own data rather than just using built-in datasets.\n\nFirst need to find where you have your file saved.\n\nThink back to our discussion about Working Directories and R Studio Projects in the Previous Slides\n\nData read in using R functions such as:\n\nread.table() for reading in .txt files\nread.csv() for reading in .csv files\nread_excel() from the readxl package for .xlsx files\n\nAssign the data to new R object when reading in the file"
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#importing-data-demo",
    "href": "r-intro/slides/4-DataStructures.html#importing-data-demo",
    "title": "Data Structures",
    "section": "Importing Data Demo",
    "text": "Importing Data Demo\nWe first create a csv file (We can use a text editor or MS Excel)\nThen we load it in:\n\n# df = iris[1:10, 1:5]\n# write.csv(df, 'tips.csv')\n\nlittledata &lt;- read.csv(\"tips.csv\", header = TRUE)\n\nhead(littledata)\n\nI like to use head() to make sure my data read in how I thought it should ."
  },
  {
    "objectID": "r-intro/slides/4-DataStructures.html#your-turn-4",
    "href": "r-intro/slides/4-DataStructures.html#your-turn-4",
    "title": "Data Structures",
    "section": "Your Turn",
    "text": "Your Turn\n\nMake 5 rows of data in an excel spreadsheet and save it as a tab-delimited txt file. (or use yourturndata.txt on the website)\nImport this new .txt file into R with read_table. You may need to look at the help page for read_table in order to properly do this.\nIf want to try a csv file, try reading in the tips.csv file yourself.\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-intro/index.html",
    "href": "r-intro/index.html",
    "title": "Programming with Data",
    "section": "",
    "text": "In Programming with data you get a head start with the statistical software R. R has gained a huge number of users in the last years and the number of methods from add-on packages is growing rapidly. The course will be data centric, with lots of different data sets that illustrate examples of the different techniques used for different problems. The course will be a mix of instruction and follow-up exercises. It will be held in a computer lab but you are encouraged to bring your own laptops, with software already loaded. A list of software is available to help you prepare your machine for the workshop."
  },
  {
    "objectID": "r-intro/index.html#timetable",
    "href": "r-intro/index.html#timetable",
    "title": "Programming with Data",
    "section": "Timetable",
    "text": "Timetable\n\n\n\nDate\nNotes\nLectures and Resources\n\n\n\n\n9 - 9:30\nSetting Up\nThis will make sure that everybody’s system is up and running. You should try to install R ahead of time, so that this time can be used to address potential problems.  Setup.R\n\n\n9:30 - 10:30\nMotivating Example\nFirst taste of R: Jumping right into it to get an idea of how to use R and what it is capable of.  2-MotivatingExample.R daily_shedding.csv\n\n\n10:30 - 10:50\nBreak\n\n\n\n10:50 - 11:50\nBasics\nWorking with data and learning about vectors, indexing vectors, and additional statistical functions. 3-Basics.RR Reference Card\n\n\n11:50 - 12:50\nLunch Break (on your own)\n\n\n\n12:50 - 2:20\nData Structures\nUsing and examining the other data structures that are available in R. 4-DataStructures.R  tips.csvyourturndata.txt\n\n\n2:20 - 2:40\nBreak\n\n\n\n2:40 - 4:00\nPackages and Basic Programming\nIntroduction to packages and finding useful packages. We will also cover simple programming constructs to make your life easier with R. 5-PackagesProgramming.R\n\n\n3:55 - 4:00\nEvaluation\nHelp us make the workshops better!"
  },
  {
    "objectID": "r-intro/index.html#useful-links",
    "href": "r-intro/index.html#useful-links",
    "title": "Programming with Data",
    "section": "Useful Links",
    "text": "Useful Links\nRecommended Reading:\n\nR for Data Science\nR for ecologists Data Carpentry workshop\n\n\nYour Turn Solutions\nPlease make sure to try the practice problem before viewing solutions\n\nYour Turn Solutions"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "The schedule listed below is for the next set of workshops. Workshops are typically offered just before the classes start in the Spring as well as the week after Spring finals. We anticipate that these classes will be offered in person, with no online option.\n\n\nSchedule is tentative and subject to change due to enrollment and lab availability\n\nLocation: Hardin 163 (North wing)\nRequired materials: Laptop with software installed\n\nRegister for the workshops here.\nWe will send you an email about a week before the workshops are held with additional details.\n\n\n\nDate\nTime\nCourse\nDescription\n\n\n\n\nJan 15\n\n\nMartin Luther King, Jr. Day\n\n\nJan 16\n9am - 4pm\nIntroduction to R\nLearn the basics of R & Rstudio, how to write your own R scripts and get an introduction to the tidyverse. We’ll start with the beginning and quickly get you up to speed with the basic tools of data exploration. You will learn how to import and manage data sets, create R objects, install and load R packages, and how to ask for help in R.\n\n\nJan 17\n9am - 4pm\nGraphics with ggplot2\nggplot2 provides a framework to produce elegant, high-end graphical displays using the Grammar of Graphics. You will learn how to create a wide variety of graphical displays in R. We will use lots of data examples to wok through the basic plots as well as more advanced tools, such as facetting, colors, themes and more.\n\n\nJan 18\n9am - 4pm\nData Wrangling\nThis workshop will to prepare you for dealing with messy data by walking you through real-life examples. We will help you to automate cleaning your data, fixing spelling errors, transforming variables, and generating data summaries using the split-apply-combine paradigm. We will also talk about wide and long format data and help you to convert between these formats and to know when each format is useful.\n\n\nJan 19\n9am - 4pm\nStatistical Modeling in R\nLearn how to fit models, test hypotheses, create model output tables and plots, and more! In the morning, we will cover model-fitting basics (linear regression, mixed models), and in the afternoon we will look into more advanced types of models (generalized linear mixed models, etc.).  The last part of this session is designed as a workshop, so bring your data to analyze (we will have some data sets if you need one!)\n\n\n\n\n\n\nThese workshops are developed and hosted by Statistics graduate students to assist UNL students, faculty, and staff with developing the R skills necessary for research and data analysis. Individuals from outside the university are welcome to participate. Proceeds from the workshops directly fund graduate student activities.\n\n\n\n\n\n\n\n\nWorkshop Type\nStudent\nUNL Affiliate\nCorporate\n\n\n\n\nFull Day\n$40.00\n$60.00\n$200.00\n\n\nHalf Day\n$20.00\n$30.00\n$100.00\n\n\nFull Week\n$120.00\n$210.00\n$700.00\n\n\n\n\n\n\n\n\n\n\n\n\nWe accept exact cash, checks, or a University cost object. We cannot accept N-cards.\n\n\n\n\n\n\nCorporate Group Rate\n\n\n\n\n\nIf you are anticipating registering more than 4 people who are not UNL Affiliates as a group, please feel free to contact Susan Vanderplas for a group rate.\n\n\n\n\n\n\n\n\n\nIndependent Students (not part of a research lab)\n\n\n\n\n\nIf you are an independent student (e.g. not part of a research lab), and cannot afford the prices we’ve set, please contact Susan Vanderplas about 1 week before the workshops are scheduled to see if scholarships are available.\nInclude in your email how much you can afford to pay, why you need the workshops, and any other details you think are relevant. Scholarships will depend on the number of registered participants. We charge just enough to ensure that the instructors are paid for their time and effort, which is why scholarships depend on registration (which is not known until about a week before workshops start).\n\n\n\nNote that half-day workshops are those which are only offered from e.g. 9-12 or 1-4. We do not allow you to register and pay for only half of a full-day workshop.\n\n\n\nRegister here"
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "",
    "section": "",
    "text": "Schedule is tentative and subject to change due to enrollment and lab availability\n\nLocation: Hardin 163 (North wing)\nRequired materials: Laptop with software installed\n\nRegister for the workshops here.\nWe will send you an email about a week before the workshops are held with additional details.\n\n\n\nDate\nTime\nCourse\nDescription\n\n\n\n\nJan 15\n\n\nMartin Luther King, Jr. Day\n\n\nJan 16\n9am - 4pm\nIntroduction to R\nLearn the basics of R & Rstudio, how to write your own R scripts and get an introduction to the tidyverse. We’ll start with the beginning and quickly get you up to speed with the basic tools of data exploration. You will learn how to import and manage data sets, create R objects, install and load R packages, and how to ask for help in R.\n\n\nJan 17\n9am - 4pm\nGraphics with ggplot2\nggplot2 provides a framework to produce elegant, high-end graphical displays using the Grammar of Graphics. You will learn how to create a wide variety of graphical displays in R. We will use lots of data examples to wok through the basic plots as well as more advanced tools, such as facetting, colors, themes and more.\n\n\nJan 18\n9am - 4pm\nData Wrangling\nThis workshop will to prepare you for dealing with messy data by walking you through real-life examples. We will help you to automate cleaning your data, fixing spelling errors, transforming variables, and generating data summaries using the split-apply-combine paradigm. We will also talk about wide and long format data and help you to convert between these formats and to know when each format is useful.\n\n\nJan 19\n9am - 4pm\nStatistical Modeling in R\nLearn how to fit models, test hypotheses, create model output tables and plots, and more! In the morning, we will cover model-fitting basics (linear regression, mixed models), and in the afternoon we will look into more advanced types of models (generalized linear mixed models, etc.).  The last part of this session is designed as a workshop, so bring your data to analyze (we will have some data sets if you need one!)"
  },
  {
    "objectID": "index.html#pricing",
    "href": "index.html#pricing",
    "title": "",
    "section": "",
    "text": "These workshops are developed and hosted by Statistics graduate students to assist UNL students, faculty, and staff with developing the R skills necessary for research and data analysis. Individuals from outside the university are welcome to participate. Proceeds from the workshops directly fund graduate student activities.\n\n\n\n\n\n\n\n\nWorkshop Type\nStudent\nUNL Affiliate\nCorporate\n\n\n\n\nFull Day\n$40.00\n$60.00\n$200.00\n\n\nHalf Day\n$20.00\n$30.00\n$100.00\n\n\nFull Week\n$120.00\n$210.00\n$700.00\n\n\n\n\n\n\n\n\n\n\n\n\nWe accept exact cash, checks, or a University cost object. We cannot accept N-cards.\n\n\n\n\n\n\nCorporate Group Rate\n\n\n\n\n\nIf you are anticipating registering more than 4 people who are not UNL Affiliates as a group, please feel free to contact Susan Vanderplas for a group rate.\n\n\n\n\n\n\n\n\n\nIndependent Students (not part of a research lab)\n\n\n\n\n\nIf you are an independent student (e.g. not part of a research lab), and cannot afford the prices we’ve set, please contact Susan Vanderplas about 1 week before the workshops are scheduled to see if scholarships are available.\nInclude in your email how much you can afford to pay, why you need the workshops, and any other details you think are relevant. Scholarships will depend on the number of registered participants. We charge just enough to ensure that the instructors are paid for their time and effort, which is why scholarships depend on registration (which is not known until about a week before workshops start).\n\n\n\nNote that half-day workshops are those which are only offered from e.g. 9-12 or 1-4. We do not allow you to register and pay for only half of a full-day workshop."
  },
  {
    "objectID": "index.html#sign-up",
    "href": "index.html#sign-up",
    "title": "",
    "section": "",
    "text": "Register here"
  },
  {
    "objectID": "r-intro/slides/1-Setup.html#your-background",
    "href": "r-intro/slides/1-Setup.html#your-background",
    "title": "Setup",
    "section": "Your Background",
    "text": "Your Background\nWhat do you know already?\n\nExcel, Numbers, Some sort of spreadsheet software\nSAS, SPSS, Minitab\nAny other programming language\nA text editor\nR"
  },
  {
    "objectID": "r-intro/slides/1-Setup.html#what-is-r",
    "href": "r-intro/slides/1-Setup.html#what-is-r",
    "title": "Setup",
    "section": "What is R?",
    "text": "What is R?\n\nAn open-source, free software environment\n“a system for statistical computation and graphics”\nR has some basic infrastructure:\n\nCRAN: Central package repository\nCRAN mirrors: copies of this repository hosted at various locations worldwide"
  },
  {
    "objectID": "r-intro/slides/1-Setup.html#installing-r",
    "href": "r-intro/slides/1-Setup.html#installing-r",
    "title": "Setup",
    "section": "Installing R",
    "text": "Installing R\nHopefully this is done already. If not, for Windows or OS X:\n\nGo to http://www.r-project.org/\nClick the CRAN link on the left, and pick a download site (0-Cloud is a good choice)\nChoose link based on your OS\nOn Windows, choose the “base” subdirectory to install R.\nOn OS X, choose the .pkg file to install R."
  },
  {
    "objectID": "r-intro/slides/1-Setup.html#installing-rstudio",
    "href": "r-intro/slides/1-Setup.html#installing-rstudio",
    "title": "Setup",
    "section": "Installing RStudio",
    "text": "Installing RStudio\nThis should also be done already, but if not…\n\nBrowse to https://www.rstudio.com/\nClick on the “Download RStudio”\nDownload RStudio Desktop Free\nChoose the installer appropriate for your platform\nIf you are using a Mac, you may need to download XQuartz from https://www.xquartz.org/\n\nIf you run into issues, try downloading this to see if it helps, especially with certain graphics."
  },
  {
    "objectID": "r-intro/slides/1-Setup.html#project-management-r-projects",
    "href": "r-intro/slides/1-Setup.html#project-management-r-projects",
    "title": "Setup",
    "section": "Project Management: R Projects",
    "text": "Project Management: R Projects\n\n\nWhat are R Projects?\n\nWhen working on your research it is beneficial to keep all associated files with a project together.\nSets your working directory for you\n\nHow to Create One?\n\nFile -&gt; New Project -&gt; New Directory -&gt; New Project\nIf already have a folder created: File -&gt; New Project -&gt; Existing Directory\nThis will take you to a page where you create a folder and then the file path to that folder (subdirectory)\n\n\nReference for creating RStudio Projects \\(\\\\\\)\nRStudio Projects Website"
  },
  {
    "objectID": "r-intro/slides/1-Setup.html#your-turn-create-a-project-together-for-this-workshop",
    "href": "r-intro/slides/1-Setup.html#your-turn-create-a-project-together-for-this-workshop",
    "title": "Setup",
    "section": "Your Turn: Create a Project Together for this Workshop",
    "text": "Your Turn: Create a Project Together for this Workshop\n\nCreate a RStudio Project for the workshop that you can use throughout the week.\n\nYou can save R files along with the datasets, so you won’t have to set your working directory each day.\n\nSave 2-MotivatingExample.R from the website in your project\n\nThis is the file we are going to use in the next section\n\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-intro/slides/5-PackagesProgramming.html#r-packages",
    "href": "r-intro/slides/5-PackagesProgramming.html#r-packages",
    "title": "Packages and Basic Programming",
    "section": "R Packages",
    "text": "R Packages\n\nCommonly used R functions are installed with base R\nR packages containing more specialized R functions can be installed freely from CRAN servers using function install.packages()\nAfter packages are installed, their functions can be loaded into the current R session using the function library()"
  },
  {
    "objectID": "r-intro/slides/5-PackagesProgramming.html#finding-r-packages",
    "href": "r-intro/slides/5-PackagesProgramming.html#finding-r-packages",
    "title": "Packages and Basic Programming",
    "section": "Finding R Packages",
    "text": "Finding R Packages\n\nHow do I locate a package with the desired function?\nGoogle (“R project” + search term works well)\nR website task views to search relevant subjects: http://cran.r-project.org/web/views/\n??searchterm will search R help for pages related to the search term"
  },
  {
    "objectID": "r-intro/slides/5-PackagesProgramming.html#handy-r-packages",
    "href": "r-intro/slides/5-PackagesProgramming.html#handy-r-packages",
    "title": "Packages and Basic Programming",
    "section": "Handy R Packages",
    "text": "Handy R Packages\n\n\nggplot2: Statistical graphics\ntidyverse: Manipulating data structures (includes dplyr, tidyr, purr, tibble, etc packages)\nlme4: Mixed models\nknitr: integrate LaTeX, HTML, or Markdown with R for easy reproducible research\nvegan: Ordination methods, diversity analysis and other functions for community and vegetation ecologists.\nphyloseq: Handling and analysis of high-throughput microbiome census data\nggtree: an R package for visualization and annotation of phylogenetic trees with their covariates and other associated data\ncaret: The R equivalent to scikit learn: train / test split, cross validation, model performance metrics\n\nList of some Handy R Packages - Definitely NOT comprehensive"
  },
  {
    "objectID": "r-intro/slides/5-PackagesProgramming.html#creating-your-own-functions",
    "href": "r-intro/slides/5-PackagesProgramming.html#creating-your-own-functions",
    "title": "Packages and Basic Programming",
    "section": "Creating Your Own Functions",
    "text": "Creating Your Own Functions\n\nSometimes you just need to create your own function to tackle your data\n\nEspecially if you notice yourself duplicating code\n\n“Remember that a function is essentially a”black box” into which you add some inputs and then receive some outputs. Building a function is about building that “black box”, and there are several components that go into it.” source\n\nCode Skeleton:\n\nfoo &lt;- function(arg1, arg2, ...) {\n    # Code goes here\n    return(output)\n}"
  },
  {
    "objectID": "r-intro/slides/5-PackagesProgramming.html#creating-your-own-functions-continued",
    "href": "r-intro/slides/5-PackagesProgramming.html#creating-your-own-functions-continued",
    "title": "Packages and Basic Programming",
    "section": "Creating Your Own Functions (continued)",
    "text": "Creating Your Own Functions (continued)\nExample:\n\nmymean &lt;- function(data) {\n    ans &lt;- sum(data) / length(data)\n    return(ans)\n}\n\nset.seed(4) #to generate the same random numbers each time run sample function\nexample &lt;- sample(1:200, 15) #return 15 random values between 1 and 200 without replacement. without set.seed, will return different values each time\nmymean(example) #mean of random generated data\n\n[1] 110.7333\n\n\n\nFunction Name: mymean\nArguments (inputs): data (data you want to calculate mean of)\nBody: ans &lt;- sum(data) / length(data) (code you run to get desired output)\nReturn Value: ans (the mean of the data)"
  },
  {
    "objectID": "r-intro/slides/5-PackagesProgramming.html#ifelse-statements",
    "href": "r-intro/slides/5-PackagesProgramming.html#ifelse-statements",
    "title": "Packages and Basic Programming",
    "section": "If/Else Statements",
    "text": "If/Else Statements\nSkeleton:\n\nif (condition) {\n    # Some code that runs if condition is TRUE\n} else {\n    # Some code that runs if condition is FALSE\n}\n\nBasic Example:\n\nx &lt;- -4\nif(x &gt; 0){\nprint(\"Non-negative number\")\n} else {\nprint(\"Negative number\")\n}\n\n[1] \"Negative number\""
  },
  {
    "objectID": "r-intro/slides/5-PackagesProgramming.html#ifelse-statements-continued",
    "href": "r-intro/slides/5-PackagesProgramming.html#ifelse-statements-continued",
    "title": "Packages and Basic Programming",
    "section": "If/Else Statements (Continued)",
    "text": "If/Else Statements (Continued)\nExample within a Function:\n\nmymean &lt;- function(data) {\n    if (!is.numeric(data)) {\n        print(\"Numeric input is required\")\n    } else {\n        ans &lt;- sum(data) / length(data)\n        return(ans)\n    }\n}\n\nmymean(\"dog\")\n\n[1] \"Numeric input is required\"\n\nmymean(c(2,4,5,6,7))\n\n[1] 4.8"
  },
  {
    "objectID": "r-intro/slides/5-PackagesProgramming.html#looping",
    "href": "r-intro/slides/5-PackagesProgramming.html#looping",
    "title": "Packages and Basic Programming",
    "section": "Looping",
    "text": "Looping\n\nReducing the amount of typing we do can be nice\nIf we have a lot of code that is essentially the same we can take advantage of looping.\nR offers several loops: for, while, repeat.\n\n\nfor (i in 1:3) {\n    print(i)\n}\n\n[1] 1\n[1] 2\n[1] 3"
  },
  {
    "objectID": "r-intro/slides/5-PackagesProgramming.html#for-loops-source",
    "href": "r-intro/slides/5-PackagesProgramming.html#for-loops-source",
    "title": "Packages and Basic Programming",
    "section": "For Loops (source)",
    "text": "For Loops (source)\n source"
  },
  {
    "objectID": "r-intro/slides/5-PackagesProgramming.html#for-loop-example",
    "href": "r-intro/slides/5-PackagesProgramming.html#for-loop-example",
    "title": "Packages and Basic Programming",
    "section": "For Loop Example",
    "text": "For Loop Example\n\nfor(i in 1:5) {# Head of for-loop\n  x1 &lt;- i^2 # Code block\n  print(x1) # Print results\n}\n\n[1] 1\n[1] 4\n[1] 9\n[1] 16\n[1] 25"
  },
  {
    "objectID": "r-intro/slides/5-PackagesProgramming.html#for-loop-example-1",
    "href": "r-intro/slides/5-PackagesProgramming.html#for-loop-example-1",
    "title": "Packages and Basic Programming",
    "section": "For Loop Example",
    "text": "For Loop Example\n\nfinal_shed &lt;- read.csv(\"https://unl-statistics.github.io/R-workshops/r-intro/data/daily_shedding.csv\")\n\n\nid &lt;- c(\"pig_weight\", \"total_shedding\", \"daily_shedding\")\nfor(colname in id) {\n    print(paste(colname, mymean(final_shed[, colname])))\n}\n\n[1] \"pig_weight NA\"\n[1] \"total_shedding 17.4232730553356\"\n[1] \"daily_shedding 3.76549250132986\""
  },
  {
    "objectID": "r-intro/slides/5-PackagesProgramming.html#while-loops",
    "href": "r-intro/slides/5-PackagesProgramming.html#while-loops",
    "title": "Packages and Basic Programming",
    "section": "While Loops",
    "text": "While Loops\n\nLoop until a specific condition is met\n\n\ni &lt;- 1\nwhile (i &lt; 5) {\n    print(i)\n    i &lt;- i + 1\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n\n\n\nThe test_expression is i &lt; 5 which is TRUE since 1 is less than 5. So, the body of the loop is entered and i is printed and incremented (i + 1)\nThis will continue until i takes the value 5. The condition 5 &lt; 5 will give FALSE and the while loop exits.\nMake sure the loop will eventually meet the condition, otherwise the loop will run infinitely."
  },
  {
    "objectID": "r-intro/slides/5-PackagesProgramming.html#your-turn",
    "href": "r-intro/slides/5-PackagesProgramming.html#your-turn",
    "title": "Packages and Basic Programming",
    "section": "Your Turn",
    "text": "Your Turn\n\nCreate a function that takes numeric input and provides the mean and a 95% confidence interval for the mean for the data (the t.test function could be useful - example in 4-DataStructures.R - will give you your confidence interval)\nAdd checks to your function to make sure the data is either numeric or logical. If it is logical convert it to numeric.\nThe diamonds data set is included in the ggplot2 package and is well known as a convenient data set for examples. It can be read into your environment with the function data(\"diamonds\", package = \"ggplot2\"). Loop over the columns of the diamonds data set and apply your function to all of the numeric columns.\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#overgrown-calculator",
    "href": "r-intro/slides/3-Basics.html#overgrown-calculator",
    "title": "Basics",
    "section": "Overgrown Calculator",
    "text": "Overgrown Calculator\nBasics Cheatsheet\n\n# Addition and Subtraction\n2 + 5 - 1\n\n[1] 6\n\n# Multiplication\n109*23452\n\n[1] 2556268\n\n# Division\n3/7\n\n[1] 0.4285714"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#more-calculator-operations",
    "href": "r-intro/slides/3-Basics.html#more-calculator-operations",
    "title": "Basics",
    "section": "More Calculator Operations",
    "text": "More Calculator Operations\n\n# Integer division\n7 %/% 2\n\n[1] 3\n\n# Modulo operator (Remainder)\n7 %% 2\n\n[1] 1\n\n# Powers\n1.5^3\n\n[1] 3.375"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#even-more-functions",
    "href": "r-intro/slides/3-Basics.html#even-more-functions",
    "title": "Basics",
    "section": "Even More Functions",
    "text": "Even More Functions\n\nExponentiation\n\nexp(x)\n\nLogarithms\n\nlog(x)\nlog(x, base = 10)\n\nTrigonometric functions\n\nsin(x)\nasin(x)\ncos(x)\ntan(x)"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#creating-variables",
    "href": "r-intro/slides/3-Basics.html#creating-variables",
    "title": "Basics",
    "section": "Creating Variables",
    "text": "Creating Variables\nWe can create variables using the assignment operator &lt;-:\n\nx &lt;- 5\nMyAge &lt;- 25\n\nWe can then perform any of the functions on the variables:\n\nlog(x)\n\n[1] 1.609438\n\nMyAge^2\n\n[1] 625"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#rules-for-variable-creation",
    "href": "r-intro/slides/3-Basics.html#rules-for-variable-creation",
    "title": "Basics",
    "section": "Rules for Variable Creation",
    "text": "Rules for Variable Creation\n\nVariable names can’t start with a number\nVariables in R are case-sensitive\nSome common letters are used internally by R and should be avoided as variable names (c, q, t, C, D, F, T, I)\nThere are reserved words that R won’t let you use for variable names. (for, in, while, if, else, repeat, break, next)\nR will let you use the name of a predefined function. Try not to overwrite those though!"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#vectors",
    "href": "r-intro/slides/3-Basics.html#vectors",
    "title": "Basics",
    "section": "Vectors",
    "text": "Vectors\nA variable does not need to be a single value. We can create a vector using the c function (combine - combines several objects into one):\n\ny &lt;- c(1, 5, 3, 2)\n\nOperations will then be done element-wise:\n\ny / 2\n\n[1] 0.5 2.5 1.5 1.0"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#getting-help",
    "href": "r-intro/slides/3-Basics.html#getting-help",
    "title": "Basics",
    "section": "Getting Help",
    "text": "Getting Help\nWe will talk MUCH more about vectors in a bit, but for now, let’s talk about a couple ways to get help. The primary function to use is the help function. Just pass in the name of the function you need help with:\n\nhelp(head)\n\nThe ? function also works:\n\n?head\n\nGoogling for help can be difficult at first. You might need to search for R + CRAN + &lt;your query&gt; to get good results\nStackoverflow is VERY helpful"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#getting-help-1",
    "href": "r-intro/slides/3-Basics.html#getting-help-1",
    "title": "Basics",
    "section": "Getting Help",
    "text": "Getting Help\nR Reference Card\nYou can download the reference card from:\nHere\nHaving this open or printed off and near you while working is helpful.\n\nRstudio cheatsheets\nThe Rstudio cheatsheets are VERY helpful."
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#warnings-vs.-errors",
    "href": "r-intro/slides/3-Basics.html#warnings-vs.-errors",
    "title": "Basics",
    "section": "Warnings vs. Errors",
    "text": "Warnings vs. Errors\n\nRoutinely beginners to R panic if they see a red message as innocuous as confirming that a library loaded\n\nNot all red text mean that there is an error!\n\nA warning is a message that does not disturb the program flow but is displayed along with the output\n\nNot always a cause for concern\n\nAn error will terminate a program from being ran\n\nGoogle is a beautiful thing"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#your-turn",
    "href": "r-intro/slides/3-Basics.html#your-turn",
    "title": "Basics",
    "section": "Your Turn",
    "text": "Your Turn\nUsing the R Reference Card (and the Help pages, if needed), do the following:\n\nFind out how many rows and columns the iris data set has (use data(iris) to load in the dataset). Figure out at least 2 ways to do this.\n\nHint: “Variable Information” section on the first page of the reference card!\n\nUse the rep function to construct the following vector: 1 1 2 2 3 3 4 4 5 5\n\nHint: “Data Creation” section of the reference card\n\nUse rep to construct this vector: 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#data-frames-introduction",
    "href": "r-intro/slides/3-Basics.html#data-frames-introduction",
    "title": "Basics",
    "section": "Data Frames: Introduction",
    "text": "Data Frames: Introduction\n\nfinal_shed is a data frame.\nData frames hold data sets\nNot every column need be the same type - like an Excel spreadsheet\nEach column in a data frame is a vector 1 - so each column needs to have values that are all the same type.\nWe can access different columns using the $ operator.\n\n\nshedding &lt;- final_shed$total_shedding\ntreatment &lt;- final_shed$treatment\n\n.footnote[ [1] A column can also be a list! This is a more advanced topic that will be saved for later.]"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#more-about-vectors",
    "href": "r-intro/slides/3-Basics.html#more-about-vectors",
    "title": "Basics",
    "section": "More about Vectors",
    "text": "More about Vectors\nA vector is a list of values that are all the same type. We have seen that we can create them using the c or the rep function. We can also use the : operator if we wish to create consecutive values:\n\na &lt;- 10:15\na\n\n[1] 10 11 12 13 14 15\n\n\nWe can extract the different elements of the vector like so:\n\nshedding[3]\n\n[1] 59.04973"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#indexing-vectors",
    "href": "r-intro/slides/3-Basics.html#indexing-vectors",
    "title": "Basics",
    "section": "Indexing Vectors",
    "text": "Indexing Vectors\nWe saw that we can access individual elements of the vector. But indexing is a lot more powerful than that:\n\nhead(shedding)\n\n[1] 37.14022 43.88073 59.04973 44.96963 38.74342 56.12656\n\nshedding[c(1, 3, 5)]\n\n[1] 37.14022 59.04973 38.74342\n\nshedding[1:5]\n\n[1] 37.14022 43.88073 59.04973 44.96963 38.74342"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#logical-values",
    "href": "r-intro/slides/3-Basics.html#logical-values",
    "title": "Basics",
    "section": "Logical Values",
    "text": "Logical Values\n\nR has built in support for logical values\nTRUE and FALSE are built in. T (for TRUE) and F (for FALSE) are supported but can be modified\nLogicals can result from a comparison using\n\n&lt; : “less than”\n&gt; : “greater than”\n&lt;= : “less than or equal to”\n&gt;= : “greater than or equal to”\n== : “is equal to”\n!= : “not equal to”"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#indexing-with-logicals",
    "href": "r-intro/slides/3-Basics.html#indexing-with-logicals",
    "title": "Basics",
    "section": "Indexing with Logicals",
    "text": "Indexing with Logicals\nWe can index vectors using logical values as well:\n\nx &lt;- c(2, 3, 5, 7)\nx[c(TRUE, FALSE, FALSE, TRUE)]\n\n[1] 2 7\n\nx &gt; 3.5\n\n[1] FALSE FALSE  TRUE  TRUE\n\nx[x &gt; 3.5]\n\n[1] 5 7"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#logical-examples",
    "href": "r-intro/slides/3-Basics.html#logical-examples",
    "title": "Basics",
    "section": "Logical Examples",
    "text": "Logical Examples\n\nbad_shedder &lt;- shedding &gt; 50\nshedding[bad_shedder]\n\n[1] 59.04973 56.12656 66.20657 51.98984 58.53921 64.74017 64.27066 56.06566\n[9] 53.76049"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#your-turn-1",
    "href": "r-intro/slides/3-Basics.html#your-turn-1",
    "title": "Basics",
    "section": "Your Turn",
    "text": "Your Turn\n\nFind out how many pigs had a total shedding value of less than 30 log10 CFUs.\n\nHint: if you use the sum function on a logical vector, it’ll return how many TRUEs are in the vector:\n\nsum(c(TRUE, TRUE, FALSE, TRUE, FALSE))\n\n[1] 3\n\n\n\nMore Challenging: Calculate the sum of the total shedding log10 CFUs of all pigs with a total shedding value of less than 30 log10 CFUs."
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#element-wise-logical-operators",
    "href": "r-intro/slides/3-Basics.html#element-wise-logical-operators",
    "title": "Basics",
    "section": "Element-wise Logical Operators",
    "text": "Element-wise Logical Operators\n\n& (elementwise AND)\n| (elementwise OR)\n\n\nc(T, T, F, F) & c(T, F, T, F)\n\n[1]  TRUE FALSE FALSE FALSE\n\nc(T, T, F, F) | c(T, F, T, F)\n\n[1]  TRUE  TRUE  TRUE FALSE\n\n# Which are high shedders in the control group?\nid &lt;- (shedding &gt; 50 & treatment == \"control\")\nfinal_shed[id,]\n\n# A tibble: 4 × 7\n  pignum time_point pig_weight daily_shedding treatment total_shedding  gain\n   &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;          &lt;dbl&gt; &lt;chr&gt;              &lt;dbl&gt; &lt;dbl&gt;\n1    122         21       33.9           5.01 control             59.0  16.8\n2    224         21       22.9           3.91 control             56.1  11.4\n3    337         21       29.5           5.52 control             66.2  16.2\n4    419         21       31             6.21 control             52.0  16.8"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#modifying-vectors",
    "href": "r-intro/slides/3-Basics.html#modifying-vectors",
    "title": "Basics",
    "section": "Modifying Vectors",
    "text": "Modifying Vectors\nWe can modify vectors using indexing as well:\n\nx &lt;- shedding[1:5]\nx\n\n[1] 37.14022 43.88073 59.04973 44.96963 38.74342\n\nx[1] &lt;- 20\nx\n\n[1] 20.00000 43.88073 59.04973 44.96963 38.74342"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#vector-elements",
    "href": "r-intro/slides/3-Basics.html#vector-elements",
    "title": "Basics",
    "section": "Vector Elements",
    "text": "Vector Elements\nElements of a vector must all be the same type:\n\nhead(shedding)\n\n[1] 37.14022 43.88073 59.04973 44.96963 38.74342 56.12656\n\nshedding[bad_shedder] &lt;- \":-(\"\nhead(shedding)\n\n[1] \"37.1402150411922\" \"43.8807276727966\" \":-(\"              \"44.9696314253854\"\n[5] \"38.7434232007542\" \":-(\"             \n\n\nBy changing a value to a string, all the other values were also changed."
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#data-types-in-r",
    "href": "r-intro/slides/3-Basics.html#data-types-in-r",
    "title": "Basics",
    "section": "Data Types in R",
    "text": "Data Types in R\n\nCan use mode or class to find out information about variables\nstr is useful to find information about the structure of your data\nMany data types: numeric, integer, character, Date, and factor most common\n\n\nstr(final_shed)\n\ntibble [59 × 7] (S3: tbl_df/tbl/data.frame)\n $ pignum        : num [1:59] 77 87 122 160 191 224 337 345 419 458 ...\n $ time_point    : num [1:59] 21 21 21 21 21 21 21 21 21 21 ...\n $ pig_weight    : num [1:59] 25.4 23.9 33.9 28.4 28.9 ...\n $ daily_shedding: num [1:59] 4.61 3.91 5.01 3.91 3.91 ...\n $ treatment     : chr [1:59] \"control\" \"control\" \"control\" \"control\" ...\n $ total_shedding: num [1:59] 37.1 43.9 59 45 38.7 ...\n $ gain          : num [1:59] 13.9 11.7 16.8 15.1 14.6 ..."
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#converting-between-types",
    "href": "r-intro/slides/3-Basics.html#converting-between-types",
    "title": "Basics",
    "section": "Converting Between Types",
    "text": "Converting Between Types\nWe can convert between different types using the as series of functions:\n\npignum &lt;- head(final_shed$pignum)\npignum\n\n[1]  77  87 122 160 191 224\n\nas.character(pignum)\n\n[1] \"77\"  \"87\"  \"122\" \"160\" \"191\" \"224\"\n\nas.numeric(\"77\")\n\n[1] 77\n\n#as.factor()\n\nMore About Data Types"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#some-useful-functions",
    "href": "r-intro/slides/3-Basics.html#some-useful-functions",
    "title": "Basics",
    "section": "Some useful functions",
    "text": "Some useful functions\nThere are a whole variety of useful functions to operate on vectors.\nA couple of the more common ones are length, which returns the length (number of elements) of a vector, and sum, which adds up all the elements of a vector.\n\npig_weight &lt;- final_shed$pig_weight\nx &lt;- pig_weight[1:5]\nlength(x)\n\n[1] 5\n\nsum(x)\n\n[1] 140.36\n\n\nNote: Be careful, if you use length with a dataframe, it will return number of variables not number of observations.\n\nclass(shed)\n\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n\nlength(shed)\n\n[1] 12\n\nprod(dim(shed))\n\n[1] 3540"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#statistical-functions",
    "href": "r-intro/slides/3-Basics.html#statistical-functions",
    "title": "Basics",
    "section": "Statistical Functions",
    "text": "Statistical Functions\nUsing the basic functions we’ve learned, it wouldn’t be hard to compute some basic statistics.\n\n(n &lt;- length(pig_weight))\n\n[1] 59\n\n(meanweight &lt;- sum(pig_weight) / n)\n\n[1] 28.82305\n\n(standdev &lt;- sqrt(sum((pig_weight - meanweight)^2) / (n - 1)))\n\n[1] 4.10429\n\n\nBut we don’t have to."
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#built-in-statistical-functions",
    "href": "r-intro/slides/3-Basics.html#built-in-statistical-functions",
    "title": "Basics",
    "section": "Built-in Statistical Functions",
    "text": "Built-in Statistical Functions\n\nmean(pig_weight)\n\n[1] 28.82305\n\nsd(pig_weight)\n\n[1] 4.10429\n\nsummary(pig_weight)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  19.50   25.79   28.80   28.82   32.24   36.30 \n\nquantile(pig_weight, c(.025, .975))\n\n  2.5%  97.5% \n22.279 35.952"
  },
  {
    "objectID": "r-intro/slides/3-Basics.html#your-turn-2",
    "href": "r-intro/slides/3-Basics.html#your-turn-2",
    "title": "Basics",
    "section": "Your Turn",
    "text": "Your Turn\n\nWhich pigs have a shedding value less than or equal to 30 OR is in the Acid treatment group?\nExplore any more calculations in the dataset you may find interesting.\n\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-format/index.html",
    "href": "r-format/index.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "Return to rwrks homepage\nThis workshop will to prepare you for dealing with messy data by walking you through real-life examples. We will work on improving your programming skills and help you move beyond using copy-and-paste. We will discuss how to write functions in order to reduce duplication in your code and automate common tasks and how to use iteration in order to further reduce duplication. You will leave with skills that will allow you to both tackle problems with more ease.\nThe course will be data centric, with lots of different data sets that illustrate examples of the different techniques used for different problems."
  },
  {
    "objectID": "r-format/index.html#timetable",
    "href": "r-format/index.html#timetable",
    "title": "Data Wrangling",
    "section": "Timetable",
    "text": "Timetable\n\n\n\nDate\nNotes\nLectures and Resources\n\n\n\n\n9 - 9:15\nIntroduction\nreading in basic file types: .xls, .csv, .txt, .xport and more  general functions: filter, join, …\n\n\n9:15 - 10:05\nReading Files\nExcel files vs. text, data organization  2-Files.R, midwest.csv, midwest.xls\n\n\n10:05 - 10:30\nBreak\n\n\n\n10:30 - 12:15\nSummarizing with dplyr\nPipe operator and dplyr verbs  3-dplyr.R pitch.csv\n\n\n12:15 - 1:15\nLunch Break (on your own)\n\n\n\n1:15 - 2:45\nTidy Data\nRestructuring data with pivot wider, pivot longer, and separate. 4-tidyr.R, frenchfries.csv, billboard.csv, flights.csv, occupation-1870.csv\n\n\n2:45 - 3:00\nBreak\n\n\n\n3:00 - 4:00\nJoining Data\nJoin dataframes together using SQL-based logic 5-joining.R, boxoffice.csv, baseball.csv\n\n\n3:55 - 4:00\nEvaluation\nHelp us make the workshops better!"
  },
  {
    "objectID": "r-format/index.html#your-turn-solutions",
    "href": "r-format/index.html#your-turn-solutions",
    "title": "Data Wrangling",
    "section": "Your Turn Solutions",
    "text": "Your Turn Solutions\n\nYour Turn Solutions"
  },
  {
    "objectID": "r-format/index.html#useful-links",
    "href": "r-format/index.html#useful-links",
    "title": "Data Wrangling",
    "section": "Useful Links",
    "text": "Useful Links\n\nThe Split-Apply-Combine Strategy for Data Analysis, Journal of Statistical Software, 2011\nOverview of base apply functions\nDplyr and Tidyr Cheat Sheet"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#what-is-tidy-data",
    "href": "r-format/slides/4-tidyr.html#what-is-tidy-data",
    "title": "Data Wrangling",
    "section": "What is tidy data?",
    "text": "What is tidy data?\n\nAspect of data cleaning that structures a dataset to facilitate analysis\nResource: follow along tidyr vignette\navailable as vignette(\"tidy-data\", package=\"tidyr\")\nvignette is version of the tidy data paper with updated code"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#outline",
    "href": "r-format/slides/4-tidyr.html#outline",
    "title": "Data Wrangling",
    "section": "Outline",
    "text": "Outline\n\nDifferent sources of messiness\nKey-Value pairs\ntidyr: pivot_wider and pivot_longer, separate"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#data-is-usually-in-a-spreadsheet-format-but",
    "href": "r-format/slides/4-tidyr.html#data-is-usually-in-a-spreadsheet-format-but",
    "title": "Data Wrangling",
    "section": "Data is usually in a spreadsheet format, but…",
    "text": "Data is usually in a spreadsheet format, but…\nThere are different ways of encoding the same information:\n\n\nOption 1:\n\n\n\n\nPatient\n\n\nTreatment A\n\n\nTreatment B\n\n\n\n\nJohn Smith\n\n\nNA\n\n\n18\n\n\n\n\nJane Doe\n\n\n4\n\n\n1\n\n\n\n\nMary Johnson\n\n\n6\n\n\n7\n\n\n\nOption 2:\n\n\n\n\nPatient\n\n\nJohn Smith\n\n\nJane Doe\n\n\nMary Johnson\n\n\n\n\nA\n\n\nNA\n\n\n4\n\n\n6\n\n\n\n\nB\n\n\n18\n\n\n1\n\n\n7\n\n\n\n\nOption 3:\n\n\n\n\nPatient\n\n\nTreatment\n\n\nScore\n\n\n\n\nJohn Smith\n\n\nA\n\n\nNA\n\n\n\n\nJane Doe\n\n\nA\n\n\n4\n\n\n\n\nMary Johnson\n\n\nA\n\n\n6\n\n\n\n\nJohn Smith\n\n\nB\n\n\n18\n\n\n\n\nJane Doe\n\n\nB\n\n\n1\n\n\n\n\nMary Johnson\n\n\nB\n\n\n7\n\n\n\n\n\n\nNeither #1 nor #2 are “clean” versions of the data: observed information is part of the data structure; some implicit information is assumed"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#sources-of-messiness-review",
    "href": "r-format/slides/4-tidyr.html#sources-of-messiness-review",
    "title": "Data Wrangling",
    "section": "Sources of Messiness (Review)",
    "text": "Sources of Messiness (Review)\nFive main ways tables of data tend not to be tidy:\n\nColumn headers are values, not variable names.\nMultiple variables are stored in one column.\nVariables are stored in both rows and columns.\nMultiple types of observational units are stored in the same table.\nA single observational unit is stored in multiple tables."
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#what-we-have-and-what-we-want",
    "href": "r-format/slides/4-tidyr.html#what-we-have-and-what-we-want",
    "title": "Data Wrangling",
    "section": "What we have and what we want",
    "text": "What we have and what we want\n\n\nWide format\n\nsome variables are spread out across columns.\ntypically uses less space to display\nhow you would typically choose to present your data\nfar less repetition of labels and row elements\n\n\n\nLong format\n\neach variable is a column\neach observation is a row\nis likely not the data’s most compact form"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#remember-from-graphics",
    "href": "r-format/slides/4-tidyr.html#remember-from-graphics",
    "title": "Data Wrangling",
    "section": "Remember from Graphics",
    "text": "Remember from Graphics"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#tidy-data",
    "href": "r-format/slides/4-tidyr.html#tidy-data",
    "title": "Data Wrangling",
    "section": "Tidy Data",
    "text": "Tidy Data\n\nEach variable is a column\nEach observation is a row\nEach type of observational unit forms a table\n\n\n\n\n\n\nPatient\n\n\nTreatment\n\n\nScore\n\n\n\n\nJohn Smith\n\n\nA\n\n\nNA\n\n\n\n\nJohn Smith\n\n\nB\n\n\n18\n\n\n\n\nJane Doe\n\n\nA\n\n\n4\n\n\n\n\nJane Doe\n\n\nB\n\n\n1\n\n\n\n\nMary Johnson\n\n\nA\n\n\n6\n\n\n\n\nMary Johnson\n\n\nB\n\n\n7"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#what-makes-data-tidy",
    "href": "r-format/slides/4-tidyr.html#what-makes-data-tidy",
    "title": "Data Wrangling",
    "section": "What makes data tidy?",
    "text": "What makes data tidy?\n\n\n\n\n\n\nPatient\n\n\nTreatment\n\n\nScore\n\n\n\n\nJohn Smith\n\n\nA\n\n\nNA\n\n\n\n\nJohn Smith\n\n\nB\n\n\n18\n\n\n\n\nJane Doe\n\n\nA\n\n\n4\n\n\n\n\nJane Doe\n\n\nB\n\n\n1\n\n\n\n\nMary Johnson\n\n\nA\n\n\n6\n\n\n\n\nMary Johnson\n\n\nB\n\n\n7\n\n\n\n\n\nTreatment and Patient uniquely describe a single row in the dataset.\nTreatment and Patient are key variables,\nScore is a measurement variable\nthis makes Treatment-Patient and Score a key-value pair"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#key-value-pairs-kvp",
    "href": "r-format/slides/4-tidyr.html#key-value-pairs-kvp",
    "title": "Data Wrangling",
    "section": "Key-value pairs (KVP)",
    "text": "Key-value pairs (KVP)\nKey-Value pairs (KVP) - also attribute-value, field-value, name-value: abstract data representation that allows a lot of flexibility\nOne way of telling whether a data set is tidy is to check that all keys for a value are aligned in one row:\n\n\n\n\n\nUntidy data\n\n\n\n\n\nTidy Data"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#key-value-pairs-kvp-1",
    "href": "r-format/slides/4-tidyr.html#key-value-pairs-kvp-1",
    "title": "Data Wrangling",
    "section": "Key-value pairs (KVP)",
    "text": "Key-value pairs (KVP)\nKeys/Identifiers:\n\nIdentify a record (must be unique)\nExample: Indices on an random variable\nFixed by design of experiment (known in advance)\nMay be single or composite (may have one or more variables)\n\nValues/Measures:\n\nCollected during the experiment (not known in advance)\nUsually numeric quantities"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#lets-ask-for-help",
    "href": "r-format/slides/4-tidyr.html#lets-ask-for-help",
    "title": "Data Wrangling",
    "section": "Let’s ask for help…",
    "text": "Let’s ask for help…\n\nPivot Monsters drawing by Allison Horst & adjusted by R ladies Sydney"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#tidying-data---plan-of-attack",
    "href": "r-format/slides/4-tidyr.html#tidying-data---plan-of-attack",
    "title": "Data Wrangling",
    "section": "Tidying data - Plan of attack",
    "text": "Tidying data - Plan of attack\nMessy (1): tidyr functions:\npivot_longer (data,names_to,values_to, ...): take multiple columns and collapse into key-value pairs\npivot_wider (data,names_from,values_from,values_fill = NA): spread a key-value pair across multiple columns.\nMessy (2): tidyr function separate (data, col, into, sep = \" \"): separate one column into multiple columns\nMessy (3): dplyr : a combination of the functions discussed previously today\nMessy (4): dplyr functionality join (and friends) to combine multiple data sets"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#untidy-data",
    "href": "r-format/slides/4-tidyr.html#untidy-data",
    "title": "Data Wrangling",
    "section": "Untidy data",
    "text": "Untidy data\n\nfrench_fries &lt;- read_csv(\"frenchfries.csv\")\nhead(french_fries) \n\n\n\n\n\n\n\ntime\ntreatment\nsubject\nrep\npotato\nbuttery\ngrassy\nrancid\npainty\n\n\n\n\n61\n1\n1\n3\n1\n2.9\n0.0\n0.0\n0.0\n5.5\n\n\n25\n1\n1\n3\n2\n14.0\n0.0\n0.0\n1.1\n0.0\n\n\n62\n1\n1\n10\n1\n11.0\n6.4\n0.0\n0.0\n0.0\n\n\n26\n1\n1\n10\n2\n9.9\n5.9\n2.9\n2.2\n0.0\n\n\n63\n1\n1\n15\n1\n1.2\n0.1\n0.0\n1.1\n5.1\n\n\n27\n1\n1\n15\n2\n8.8\n3.0\n3.6\n1.5\n2.3"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#this-format-is-not-ideal-for-data-analysis",
    "href": "r-format/slides/4-tidyr.html#this-format-is-not-ideal-for-data-analysis",
    "title": "Data Wrangling",
    "section": "This format is not ideal for data analysis",
    "text": "This format is not ideal for data analysis\n\nlibrary(ggplot2)\n\nggplot(french_fries) + \ngeom_boxplot(aes(x=\"1_buttery\", y=buttery), fill = \"cyan4\") +\ngeom_boxplot(aes(x = \"2_grassy\", y = grassy), fill = \"darkorange2\") +\ngeom_boxplot(aes(x = \"3_painty\", y = painty), fill = \"darkorchid1\") +\ngeom_boxplot(aes(x = \"4_potato\", y = potato), fill = \"chartreuse3\") +\ngeom_boxplot(aes(x = \"5_rancid\", y = rancid), fill = \"deeppink\") +\nxlab(\"variable\") + ylab(\"rating\")"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#lets-start-with-messy-1",
    "href": "r-format/slides/4-tidyr.html#lets-start-with-messy-1",
    "title": "Data Wrangling",
    "section": "Let’s start with Messy (1)",
    "text": "Let’s start with Messy (1)\n\nUse pivot_longer and pivot_wider"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#tidy-your-data-using-pivot_longer",
    "href": "r-format/slides/4-tidyr.html#tidy-your-data-using-pivot_longer",
    "title": "Data Wrangling",
    "section": "Tidy your data using pivot_longer",
    "text": "Tidy your data using pivot_longer\n\nWhen pivoting longer, you need to specify: - the cols (identifiers) - the names_to (new column name) - the values_to (measures from cols)"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#pivot_longer-example",
    "href": "r-format/slides/4-tidyr.html#pivot_longer-example",
    "title": "Data Wrangling",
    "section": "pivot_longer Example",
    "text": "pivot_longer Example\n\nfrench_fries_long &lt;- french_fries %&gt;% \n  pivot_longer(cols = potato:painty, #5:9\n               names_to = \"variable\", \n               values_to = \"rating\")\n\n\n\n\n\n\ntime\ntreatment\nsubject\nrep\nvariable\nrating\n\n\n\n\n1\n1\n3\n1\npotato\n2.9\n\n\n1\n1\n3\n1\nbuttery\n0.0\n\n\n1\n1\n3\n1\ngrassy\n0.0\n\n\n1\n1\n3\n1\nrancid\n0.0\n\n\n1\n1\n3\n1\npainty\n5.5\n\n\n1\n1\n3\n2\npotato\n14.0"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#this-format-is-better-suited-for-data-analysis",
    "href": "r-format/slides/4-tidyr.html#this-format-is-better-suited-for-data-analysis",
    "title": "Data Wrangling",
    "section": "This format is better suited for data analysis",
    "text": "This format is better suited for data analysis\n\nggplot(french_fries_long) + \n  geom_boxplot(aes(x = variable, y = rating, fill = variable))"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#long-to-wide",
    "href": "r-format/slides/4-tidyr.html#long-to-wide",
    "title": "Data Wrangling",
    "section": "Long to Wide",
    "text": "Long to Wide\nIn certain applications, we may wish to take a long dataset and convert it to a wide dataset (Perhaps displaying in a table).\n\n\n\n\n\ntime\ntreatment\nsubject\nrep\nvariable\nrating\n\n\n\n\n1\n1\n3\n1\npotato\n2.9\n\n\n1\n1\n3\n1\nbuttery\n0.0\n\n\n1\n1\n3\n1\ngrassy\n0.0"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#tidy-your-data-using-pivot_wider",
    "href": "r-format/slides/4-tidyr.html#tidy-your-data-using-pivot_wider",
    "title": "Data Wrangling",
    "section": "Tidy your data using pivot_wider",
    "text": "Tidy your data using pivot_wider\n\nWhen pivoting wider, you need to specify: - the names_from (column name that we want to widen) - the values_from (measures from column we want to widen)"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#pivot_wider-example",
    "href": "r-format/slides/4-tidyr.html#pivot_wider-example",
    "title": "Data Wrangling",
    "section": "pivot_wider Example",
    "text": "pivot_wider Example\n\nfrench_fries_wide &lt;- french_fries_long %&gt;% \n  pivot_wider(names_from = variable, \n              values_from = rating, \n              values_fill = NA)\n\n\n\n\n\n\ntime\ntreatment\nsubject\nrep\npotato\nbuttery\ngrassy\nrancid\npainty\n\n\n\n\n1\n1\n3\n1\n2.9\n0.0\n0.0\n0.0\n5.5\n\n\n1\n1\n3\n2\n14.0\n0.0\n0.0\n1.1\n0.0\n\n\n1\n1\n10\n1\n11.0\n6.4\n0.0\n0.0\n0.0\n\n\n1\n1\n10\n2\n9.9\n5.9\n2.9\n2.2\n0.0\n\n\n\n\n\n\n\nWe are now back to our original format"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#pivot_wider-cont.",
    "href": "r-format/slides/4-tidyr.html#pivot_wider-cont.",
    "title": "Data Wrangling",
    "section": "pivot_wider (cont.)",
    "text": "pivot_wider (cont.)\nWe can also use the pivot_wider function to compare replicates within the French Fry dataset\n\nfrench_fries_wide &lt;- french_fries_long %&gt;% \n  pivot_wider(names_from = rep, \n              values_from = rating)\n\n\n\n\n\n\ntime\ntreatment\nsubject\nvariable\n1\n2\n\n\n\n\n1\n1\n3\npotato\n2.9\n14\n\n\n1\n1\n3\nbuttery\n0.0\n0\n\n\n1\n1\n3\ngrassy\n0.0\n0"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#compare-replicates-of-tested-french-fry-data",
    "href": "r-format/slides/4-tidyr.html#compare-replicates-of-tested-french-fry-data",
    "title": "Data Wrangling",
    "section": "Compare replicates of tested French Fry Data",
    "text": "Compare replicates of tested French Fry Data\n\nfrench_fries_wide %&gt;%\n  ggplot(aes(x = `1`, y = `2`)) + \n  geom_point() +\n  facet_wrap(~variable) + \n  geom_abline(colour = \"grey50\")"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#motivating-example-separate-function",
    "href": "r-format/slides/4-tidyr.html#motivating-example-separate-function",
    "title": "Data Wrangling",
    "section": "Motivating Example (separate function)",
    "text": "Motivating Example (separate function)\n\n\n\n\n\n\n\nstates\ndates\n\n\n\n\nLincoln/NE\nAug-2000\n\n\nChicago/IL\nSep-2001\n\n\nAmes/IA\nOct-2002\n\n\nNashville/TN\nFeb-2001"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#basic-idea-separate",
    "href": "r-format/slides/4-tidyr.html#basic-idea-separate",
    "title": "Data Wrangling",
    "section": "Basic Idea: separate",
    "text": "Basic Idea: separate\n\nHow do I handle those values in my dataset? Let’s use separate"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#separate-example-1",
    "href": "r-format/slides/4-tidyr.html#separate-example-1",
    "title": "Data Wrangling",
    "section": "separate Example 1",
    "text": "separate Example 1\n\ndf &lt;- data.frame(x = c(NA, \"a.b\", \"a.d\", \"b.c\"))\ndf\n\n     x\n1 &lt;NA&gt;\n2  a.b\n3  a.d\n4  b.c\n\ndf %&gt;% separate(x, into = c(\"A\", \"B\"))\n\n     A    B\n1 &lt;NA&gt; &lt;NA&gt;\n2    a    b\n3    a    d\n4    b    c"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#separate-example-2",
    "href": "r-format/slides/4-tidyr.html#separate-example-2",
    "title": "Data Wrangling",
    "section": "separate Example 2",
    "text": "separate Example 2\n\ndf2 &lt;- data.frame(y = c(\"Lincoln, NE\", \"Chicago, IL\", \"Ames, IA\", \"Nashville, TN\"))\ndf2\n\n              y\n1   Lincoln, NE\n2   Chicago, IL\n3      Ames, IA\n4 Nashville, TN\n\ndf2 %&gt;% separate(y, c(\"City\", \"State\"), sep = \", \")\n\n       City State\n1   Lincoln    NE\n2   Chicago    IL\n3      Ames    IA\n4 Nashville    TN"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#your-turn",
    "href": "r-format/slides/4-tidyr.html#your-turn",
    "title": "Data Wrangling",
    "section": "Your Turn",
    "text": "Your Turn\nThe Iowa Data Portal is a wealth of information on and about the State of Iowa.\nThe website Campaign Expenditures provides data on campaign expenditures. The code below reads the data into an R session.\n\nurl &lt;- \"https://data.iowa.gov/api/views/3adi-mht4/rows.csv\"\ncampaign &lt;- readr::read_csv(url, guess_max = 50000)\n\nAssess the ‘messiness’ of the data. List issues that prevent us from working with the data directly. Which of these issues are of type (1) or (2) of messiness?"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#problems-with-the-data",
    "href": "r-format/slides/4-tidyr.html#problems-with-the-data",
    "title": "Data Wrangling",
    "section": "Problems with the data",
    "text": "Problems with the data\n\nDate is text, in the format of Month/Day/Year (Messy 2)\ncity coordinates are a combination of City name, state, zip code and geographic latitude and longitude. (Messy 2)\nexpenditure amount is a textual expression, not a number (Messy different)\n\nNo Messy 1? - problems of type Messy 1 are typically hard to detect and often up to interpretation/dependent on the analysis to be done."
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#your-turn-1",
    "href": "r-format/slides/4-tidyr.html#your-turn-1",
    "title": "Data Wrangling",
    "section": "Your Turn",
    "text": "Your Turn\nDuring the 1870 census data on people’s occupation was collected. The data occupation-1870 contains state-level aggregates of occupation by gender.\n\nUse tidyr to get the data into a long format (use pivot_longer).\nSeparate the occupation.gender type variable into two variables.\n“Spread” (use pivot_wider) the data such that you can draw scatterplots of values for men against women facetted by occupation."
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#solution",
    "href": "r-format/slides/4-tidyr.html#solution",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\noccupation &lt;- read_csv(\"https://unl-statistics.github.io/R-workshops/r-format/data/occupation-1870.csv\")\n\noccupation_long &lt;- occupation %&gt;% \n  pivot_longer(Agriculture.Male:School.Female,names_to = \"Occupation\", values_to = \"Measurement\") %&gt;%\n  separate(Occupation, c(\"Occupation\", \"Gender\"), sep=\"\\\\.\") %&gt;%\n  pivot_wider(names_from = \"Gender\", values_from = \"Measurement\")\n\nhead(occupation_long, 10)\n\n# A tibble: 10 × 5\n   `Area name`       Total.Population Occupation      Male Female\n   &lt;chr&gt;                        &lt;dbl&gt; &lt;chr&gt;          &lt;dbl&gt;  &lt;dbl&gt;\n 1 Alabama                     996992 Agriculture   226768  64860\n 2 Alabama                     996992 Manufacturing  15078   1992\n 3 Alabama                     996992 Trade          14345     90\n 4 Alabama                     996992 Service        19449  22676\n 5 Alabama                     996992 School         38600  38539\n 6 Arizona Territory             9658 Agriculture     1284      1\n 7 Arizona Territory             9658 Manufacturing    883    156\n 8 Arizona Territory             9658 Trade            588      3\n 9 Arizona Territory             9658 Service         2979    136\n10 Arizona Territory             9658 School            79     70"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#solution-1",
    "href": "r-format/slides/4-tidyr.html#solution-1",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\noccupation_long %&gt;% ggplot() + geom_point(aes(x = Male, y = Female)) + facet_wrap(~Occupation)"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#dates-and-times",
    "href": "r-format/slides/4-tidyr.html#dates-and-times",
    "title": "Data Wrangling",
    "section": "Dates and Times",
    "text": "Dates and Times\nDates are deceptively hard to work with in R.\nExample: 02/05/2012. Is it February 5th, or May 2nd?\nOther things are difficult too:\n\nTime zones\nPOSIXct format in base R is challenging\n\nThe lubridate package helps tackle some of these issues."
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#basic-lubridate-use",
    "href": "r-format/slides/4-tidyr.html#basic-lubridate-use",
    "title": "Data Wrangling",
    "section": "Basic Lubridate Use",
    "text": "Basic Lubridate Use\n\nlibrary(lubridate) #&lt;&lt; #New Package Alert!!\n\nnow()\ntoday()\nnow() + hours(4)\ntoday() - days(2)\n\n[1] \"2024-02-09 08:16:34 CST\"\n[1] \"2024-02-09\"\n[1] \"2024-02-09 12:16:34 CST\"\n[1] \"2024-02-07\""
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#parsing-dates",
    "href": "r-format/slides/4-tidyr.html#parsing-dates",
    "title": "Data Wrangling",
    "section": "Parsing Dates",
    "text": "Parsing Dates\n\nymd(\"2013-05-14\")\nmdy(\"05/14/2013\")\ndmy(\"14052013\")\nymd_hms(\"2013:05:14 14:50:30\", tz = \"America/Chicago\")\n\n[1] \"2013-05-14\"\n[1] \"2013-05-14\"\n[1] \"2013-05-14\"\n[1] \"2013-05-14 14:50:30 CDT\""
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#your-turn-2",
    "href": "r-format/slides/4-tidyr.html#your-turn-2",
    "title": "Data Wrangling",
    "section": "Your Turn",
    "text": "Your Turn\nThe flights dataset contains information on over 300,000 flights that departed from New York City in the year 2013.\n\nflights &lt;- \n  read.csv(\"http://unl-statistics.github.io/R-workshops/r-format/data/flights.csv\")\n\n\nUsing the flights data, create a new column Date using lubridate. You will need to paste together the columns year, month, and day in order to do this. See the paste function.\nUse dplyr to calculate the average departure delay for each date.\nPlot the date versus the average departure delay"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#solution-2",
    "href": "r-format/slides/4-tidyr.html#solution-2",
    "title": "Data Wrangling",
    "section": "SOLUTION",
    "text": "SOLUTION\n\nflights$date &lt;- ymd(paste(flights$year, flights$month, flights$day, sep = \"-\"))\ndelay.dat &lt;- flights %&gt;% \n    group_by(date) %&gt;% \n    summarise(dep_delay = mean(dep_delay, na.rm = TRUE))\n\n\nggplot(delay.dat) + geom_line(aes(date, dep_delay))"
  },
  {
    "objectID": "r-format/slides/4-tidyr.html#your-turn-3",
    "href": "r-format/slides/4-tidyr.html#your-turn-3",
    "title": "Data Wrangling",
    "section": "Your Turn",
    "text": "Your Turn\n\nRead in the billboard top 100 music data:\n\n\nbillboard &lt;- \n  read.csv(\"http://unl-statistics.github.io/R-workshops/r-format/data/billboard.csv\")\n\n\nUse tidyr to convert this data into a long format.\nUse ggplot2 to create something like this:\n\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-format/slides/5-joining.html#recall---sources-of-messiness",
    "href": "r-format/slides/5-joining.html#recall---sources-of-messiness",
    "title": "Data Wrangling",
    "section": "Recall - Sources of Messiness",
    "text": "Recall - Sources of Messiness\n\nColumn headers are values, not variable names. e.g. treatmenta, treatmentb \nMultiple variables are stored in one column.  e.g. Fall 2015, Spring 2016 or “1301 8th St SE, Orange City, Iowa 51041 (42.99755, -96.04149)”, “2102 Durant, Harlan, Iowa 51537 (41.65672, -95.33780)” \nMultiple observational units are stored in the same table.\nA single observational unit is stored in multiple tables."
  },
  {
    "objectID": "r-format/slides/5-joining.html#recall---tidy-data",
    "href": "r-format/slides/5-joining.html#recall---tidy-data",
    "title": "Data Wrangling",
    "section": "Recall - Tidy data",
    "text": "Recall - Tidy data\n\nEach variable forms one column.\nEach observation forms one row.\nEach type of observational unit forms a table."
  },
  {
    "objectID": "r-format/slides/5-joining.html#finding-your-keys---example-1",
    "href": "r-format/slides/5-joining.html#finding-your-keys---example-1",
    "title": "Data Wrangling",
    "section": "Finding your keys - Example (1)",
    "text": "Finding your keys - Example (1)\n100 patients are randomly assigned to a treatment for heart attack, measured 5 different clinical outcomes."
  },
  {
    "objectID": "r-format/slides/5-joining.html#finding-your-keys---example-1-1",
    "href": "r-format/slides/5-joining.html#finding-your-keys---example-1-1",
    "title": "Data Wrangling",
    "section": "Finding your keys - Example (1)",
    "text": "Finding your keys - Example (1)\n100 patients are randomly assigned to a treatment for heart attack, measured 5 different clinical outcomes.\n\nkey: patient ID\nfactor variable (design): treatment\nmeasured variables: 5 clinical outcomes"
  },
  {
    "objectID": "r-format/slides/5-joining.html#finding-your-keys---example-2",
    "href": "r-format/slides/5-joining.html#finding-your-keys---example-2",
    "title": "Data Wrangling",
    "section": "Finding your keys - Example (2)",
    "text": "Finding your keys - Example (2)\nRandomized complete block trial with four fields, four different types of fertilizer, over four years. Recorded total corn yield, and fertilizer run off"
  },
  {
    "objectID": "r-format/slides/5-joining.html#finding-your-keys---example-2-1",
    "href": "r-format/slides/5-joining.html#finding-your-keys---example-2-1",
    "title": "Data Wrangling",
    "section": "Finding your keys - Example (2)",
    "text": "Finding your keys - Example (2)\nRandomized complete block trial with four fields, four different types of fertilizer, over four years. Recorded total corn yield, and fertilizer run off\n\nkey: fields, types of fertilizer, year\nmeasurement: total corn yield, fertilizer run off"
  },
  {
    "objectID": "r-format/slides/5-joining.html#finding-your-keys---example-3",
    "href": "r-format/slides/5-joining.html#finding-your-keys---example-3",
    "title": "Data Wrangling",
    "section": "Finding your keys - Example (3)",
    "text": "Finding your keys - Example (3)\nCluster sample of twenty students in thirty different schools. For each school, recorded distance from ice rink. For each student, asked how often they go ice skating, and whether or not their parents like ice skating"
  },
  {
    "objectID": "r-format/slides/5-joining.html#finding-your-keys---example-3-1",
    "href": "r-format/slides/5-joining.html#finding-your-keys---example-3-1",
    "title": "Data Wrangling",
    "section": "Finding your keys - Example (3)",
    "text": "Finding your keys - Example (3)\nCluster sample of twenty students in thirty different schools. For each school, recorded distance from ice rink. For each student, asked how often they go ice skating, and whether or not their parents like ice skating\n\nkey: student ID, school ID\nmeasurement: distance to rink, #times ice skating, parents’ preference"
  },
  {
    "objectID": "r-format/slides/5-joining.html#finding-your-keys---example-4",
    "href": "r-format/slides/5-joining.html#finding-your-keys---example-4",
    "title": "Data Wrangling",
    "section": "Finding your keys - Example (4)",
    "text": "Finding your keys - Example (4)\nFor each person, recorded age, sex, height and target weight, and then at multiple times recorded their weight"
  },
  {
    "objectID": "r-format/slides/5-joining.html#finding-your-keys---example-4-1",
    "href": "r-format/slides/5-joining.html#finding-your-keys---example-4-1",
    "title": "Data Wrangling",
    "section": "Finding your keys - Example (4)",
    "text": "Finding your keys - Example (4)\nFor each person, recorded age, sex, height and target weight, and then at multiple times recorded their weight\n\nkey: patient ID, date\nmeasurement: age, sex, height, target weight, current weight\n\nonly patient ID is needed for variables in italics"
  },
  {
    "objectID": "r-format/slides/5-joining.html#back-to-the-list-starting-with-messy-3",
    "href": "r-format/slides/5-joining.html#back-to-the-list-starting-with-messy-3",
    "title": "Data Wrangling",
    "section": "Back to the list starting with Messy (3)",
    "text": "Back to the list starting with Messy (3)\nMessy (3): Multiple observational units are stored in the same table.\nWhat does that mean? The key is split,\ni.e. for some values all key variables are necessary, while other values only need some key variables."
  },
  {
    "objectID": "r-format/slides/5-joining.html#why-do-we-need-to-take-care-of-split-keys",
    "href": "r-format/slides/5-joining.html#why-do-we-need-to-take-care-of-split-keys",
    "title": "Data Wrangling",
    "section": "Why do we need to take care of split keys?",
    "text": "Why do we need to take care of split keys?\n\nData redundancy introduces potential problems (same student should have the same student ID)\nto check data consistency, we split data set into parts - this process is called normalizing\nnormalization reduces overall data size\nuseful way of thinking about objects under study"
  },
  {
    "objectID": "r-format/slides/5-joining.html#tidying-messy-3",
    "href": "r-format/slides/5-joining.html#tidying-messy-3",
    "title": "Data Wrangling",
    "section": "Tidying Messy (3)",
    "text": "Tidying Messy (3)\nSplitting into separate datasets:"
  },
  {
    "objectID": "r-format/slides/5-joining.html#now-for-messy-4",
    "href": "r-format/slides/5-joining.html#now-for-messy-4",
    "title": "Data Wrangling",
    "section": "Now for Messy (4)",
    "text": "Now for Messy (4)\nMessy (4): Values for a single observational unit are stored across multiple tables.\nAfter data are normalized by splitting, we want to de-normalize again by joining datasets."
  },
  {
    "objectID": "r-format/slides/5-joining.html#motivating-example-lahman-package-sports-database",
    "href": "r-format/slides/5-joining.html#motivating-example-lahman-package-sports-database",
    "title": "Data Wrangling",
    "section": "Motivating Example: Lahman package (Sports Database)",
    "text": "Motivating Example: Lahman package (Sports Database)\nSean Lahman is a database journalist, who started databases of historical sports statistics, in particular, the Lahman database on baseball.\n\nlibrary(Lahman)\nLahmanData %&gt;% head(5) %&gt;% knitr::kable(format = \"html\")\n\n\n\n\nfile\nclass\nnobs\nnvar\ntitle\n\n\n\n\nAllstarFull\ndata.frame\n5454\n8\nAllstarFull table\n\n\nAppearances\ndata.frame\n110423\n21\nAppearances table\n\n\nAwardsManagers\ndata.frame\n179\n6\nAwardsManagers table\n\n\nAwardsPlayers\ndata.frame\n6531\n6\nAwardsPlayers table\n\n\nAwardsShareManagers\ndata.frame\n425\n7\nAwardsShareManagers table"
  },
  {
    "objectID": "r-format/slides/5-joining.html#lahman-database",
    "href": "r-format/slides/5-joining.html#lahman-database",
    "title": "Data Wrangling",
    "section": "Lahman database",
    "text": "Lahman database\nThe Lahman database consists of 24 data frames that are linked by playerID.\nThis is clean, but not very readable. \nThe People table includes names and other attributes for each player. \nJoining multiple tables helps us to bring together (pieces of) information from multiple sources."
  },
  {
    "objectID": "r-format/slides/5-joining.html#example-hall-of-fame-of-baseball",
    "href": "r-format/slides/5-joining.html#example-hall-of-fame-of-baseball",
    "title": "Data Wrangling",
    "section": "Example: Hall of Fame of Baseball",
    "text": "Example: Hall of Fame of Baseball\n\nHallOfFame &lt;- HallOfFame %&gt;%\n  group_by(playerID) %&gt;% \n  mutate(times = order(yearID)) \n\nHallOfFame %&gt;%\n  ggplot(aes(x = yearID, y = votes/needed, colour = inducted)) + \n  geom_hline(yintercept = 1, colour = \"grey20\", size = .1) +\n  geom_line(aes(group = playerID), colour = \"black\", size = 0.2) +\n  geom_point()"
  },
  {
    "objectID": "r-format/slides/5-joining.html#hall-of-fame---how-many-attempts",
    "href": "r-format/slides/5-joining.html#hall-of-fame---how-many-attempts",
    "title": "Data Wrangling",
    "section": "Hall of Fame - how many attempts?",
    "text": "Hall of Fame - how many attempts?\nWe’d like to label all the last attempts - and not just with the playerID\n\nHallOfFame %&gt;% \n  ggplot(aes(x = times, y = votes/needed, colour = inducted)) + \n  geom_hline(yintercept = 1, colour = \"grey20\", size = .1) +\n  geom_line(aes(group = playerID), colour = \"black\", size = 0.2) +\n  geom_point()"
  },
  {
    "objectID": "r-format/slides/5-joining.html#joins---general-idea",
    "href": "r-format/slides/5-joining.html#joins---general-idea",
    "title": "Data Wrangling",
    "section": "Joins - general idea",
    "text": "Joins - general idea\n\nImage from RStudio Conf 2020"
  },
  {
    "objectID": "r-format/slides/5-joining.html#joins---more-specific-idea",
    "href": "r-format/slides/5-joining.html#joins---more-specific-idea",
    "title": "Data Wrangling",
    "section": "Joins - more specific idea",
    "text": "Joins - more specific idea\n\nNatural Language: I want THIS with THAT using this common variable.\nData sets are joined along values of variables.\nIn dplyr there are various join functions: left_join, inner_join, full_join, …\nDifferences between join functions are only visible if not all values in one set have values in the other"
  },
  {
    "objectID": "r-format/slides/5-joining.html#simple-example-data",
    "href": "r-format/slides/5-joining.html#simple-example-data",
    "title": "Data Wrangling",
    "section": "Simple example data",
    "text": "Simple example data\n\n\n\ndf1 &lt;- data.frame(\n  id = 1:6, \n  trt = rep(c(\"A\", \"B\", \"C\"),\n  rep=c(2,1,3)), \n  value = c(5,3,7,1,2,3))\n\n\n\n\n\n\nid\ntrt\nvalue\n\n\n\n\n1\nA\n5\n\n\n2\nB\n3\n\n\n3\nC\n7\n\n\n4\nA\n1\n\n\n5\nB\n2\n\n\n6\nC\n3\n\n\n\n\n\n\n\n\n\ndf2 &lt;- data.frame(\n  id=c(4,4,5,5,7,7), \n  stress=rep(c(0,1), 3),\n  bpm = c(65, 125, 74, 136, 48, 110))\n\n\n\n\n\n\nid\nstress\nbpm\n\n\n\n\n4\n0\n65\n\n\n4\n1\n125\n\n\n5\n0\n74\n\n\n5\n1\n136\n\n\n7\n0\n48\n\n\n7\n1\n110"
  },
  {
    "objectID": "r-format/slides/5-joining.html#left-join",
    "href": "r-format/slides/5-joining.html#left-join",
    "title": "Data Wrangling",
    "section": "Left join",
    "text": "Left join\n\nall elements in the left data set are kept\nnon-matches are filled in by NA\nright_join works symmetric\n\n\nleft_join(df1, df2, by=\"id\")\n\n\n\n\n\n\nid\ntrt\nvalue\nstress\nbpm\n\n\n\n\n1\nA\n5\nNA\nNA\n\n\n2\nB\n3\nNA\nNA\n\n\n3\nC\n7\nNA\nNA\n\n\n4\nA\n1\n0\n65\n\n\n4\nA\n1\n1\n125\n\n\n5\nB\n2\n0\n74\n\n\n5\nB\n2\n1\n136\n\n\n6\nC\n3\nNA\nNA"
  },
  {
    "objectID": "r-format/slides/5-joining.html#inner-join",
    "href": "r-format/slides/5-joining.html#inner-join",
    "title": "Data Wrangling",
    "section": "Inner join",
    "text": "Inner join\n\nonly matches from both data sets are kept\n\n\ninner_join(df1, df2, by = \"id\")\n\n\n\n\n\n\nid\ntrt\nvalue\nstress\nbpm\n\n\n\n\n4\nA\n1\n0\n65\n\n\n4\nA\n1\n1\n125\n\n\n5\nB\n2\n0\n74\n\n\n5\nB\n2\n1\n136"
  },
  {
    "objectID": "r-format/slides/5-joining.html#full-join",
    "href": "r-format/slides/5-joining.html#full-join",
    "title": "Data Wrangling",
    "section": "Full join",
    "text": "Full join\n\nall ids are kept, missings are filled in with NA\n\n\nfull_join(df1, df2, by = \"id\") \n\n\n\n\n\n\nid\ntrt\nvalue\nstress\nbpm\n\n\n\n\n1\nA\n5\nNA\nNA\n\n\n2\nB\n3\nNA\nNA\n\n\n3\nC\n7\nNA\nNA\n\n\n4\nA\n1\n0\n65\n\n\n4\nA\n1\n1\n125\n\n\n5\nB\n2\n0\n74\n\n\n5\nB\n2\n1\n136\n\n\n6\nC\n3\nNA\nNA\n\n\n7\nNA\nNA\n0\n48\n\n\n7\nNA\nNA\n1\n110"
  },
  {
    "objectID": "r-format/slides/5-joining.html#traps-of-joins",
    "href": "r-format/slides/5-joining.html#traps-of-joins",
    "title": "Data Wrangling",
    "section": "Traps of joins",
    "text": "Traps of joins\n\nSometimes we unexpectedly cannot match values: missing values, different spelling, …\nBe very aware of things like a trailing or leading space\nJoin can be along multiple variables, e.g. by = c(\"ID\", \"Date\")\nJoining variable(s) can have different names, e.g. by = c(\"State\" = \"Name\")\nAlways make sure to check dimensions of data before and after a join\nCheck on missing values; help with that: anti_join"
  },
  {
    "objectID": "r-format/slides/5-joining.html#anti-join",
    "href": "r-format/slides/5-joining.html#anti-join",
    "title": "Data Wrangling",
    "section": "Anti join",
    "text": "Anti join\n\na neat function in dplyr\ncareful, not symmetric!\n\n\nanti_join(df1, df2, by=\"id\") # no values for id in df2\n\n  id trt value\n1  1   A     5\n2  2   B     3\n3  3   C     7\n4  6   C     3\n\nanti_join(df2, df1, by=\"id\") # no values for id in df1\n\n  id stress bpm\n1  7      0  48\n2  7      1 110"
  },
  {
    "objectID": "r-format/slides/5-joining.html#joining-baseball-data-from-the-lahman-package",
    "href": "r-format/slides/5-joining.html#joining-baseball-data-from-the-lahman-package",
    "title": "Data Wrangling",
    "section": "Joining baseball data from the Lahman Package",
    "text": "Joining baseball data from the Lahman Package\nDoes lifetime batting average make a difference in a player being inducted?\n\nBatting2 &lt;- Batting %&gt;% group_by(playerID) %&gt;% \n  mutate(BatAvg = H/AB) %&gt;% \n  summarise(LifeBA = mean(BatAvg, na.rm=TRUE))\n\nhof_bats &lt;- inner_join(HallOfFame %&gt;% filter(category == \"Player\"),\n                       Batting2, by = c(\"playerID\"))\n\nhof_bats %&gt;% \n  ggplot(aes(x = yearID, y = LifeBA, group = playerID)) + \n  geom_point(aes(color = inducted))"
  },
  {
    "objectID": "r-format/slides/5-joining.html#joining-baseball-data-22",
    "href": "r-format/slides/5-joining.html#joining-baseball-data-22",
    "title": "Data Wrangling",
    "section": "Joining Baseball Data (2/2)",
    "text": "Joining Baseball Data (2/2)\nWhat about pitchers? Are pitchers with lower lifetime ERAs more likely to be inducted?\n\nPitching2 &lt;- Pitching %&gt;% group_by(playerID) %&gt;% \n  summarise(LifeERA = mean(ERA, na.rm = TRUE))\n\nhof_pitch &lt;- inner_join(HallOfFame %&gt;% filter(category == \"Player\"), \n                        Pitching2, by = c(\"playerID\"))\n\nhof_pitch %&gt;% \n  ggplot(aes(x = yearID, y = LifeERA, group = playerID)) + \n  geom_point(aes(color = inducted))"
  },
  {
    "objectID": "r-format/slides/5-joining.html#your-turn",
    "href": "r-format/slides/5-joining.html#your-turn",
    "title": "Data Wrangling",
    "section": "Your turn",
    "text": "Your turn\n\nLoad the Lahman package into your R session: library(Lahman)\nJoin (relevant pieces of) the People data set and the HallOfFame data.\nOutput the names of individuals with 15 or more attempts in getting into the Hall of Fame (“times” in the data set). Make sure to deal with missing values appropriately."
  },
  {
    "objectID": "r-format/slides/5-joining.html#solution",
    "href": "r-format/slides/5-joining.html#solution",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\nVoted &lt;- HallOfFame %&gt;% \n  filter(!is.na(ballots)) %&gt;% \n  group_by(playerID) %&gt;% \n  arrange(yearID) %&gt;% \n  mutate( attempt = order(yearID))\n\nVoted &lt;- left_join(Voted, People %&gt;% \n                dplyr::select(playerID, nameFirst, nameLast), \n                   by = \"playerID\") %&gt;% filter(attempt &gt; 15)\nNames &lt;- Voted %&gt;% mutate(FullName = paste(nameFirst, nameLast))\nNames$FullName %&gt;% unique() %&gt;% \n  head(3) %&gt;% knitr::kable(format = \"html\")\n\n\n\n\nx\n\n\n\n\nRabbit Maranville\n\n\nDazzy Vance\n\n\nRay Schalk"
  },
  {
    "objectID": "r-format/slides/5-joining.html#data-wrangling-is-a-super-power",
    "href": "r-format/slides/5-joining.html#data-wrangling-is-a-super-power",
    "title": "Data Wrangling",
    "section": "Data Wrangling is a Super Power",
    "text": "Data Wrangling is a Super Power\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-format/slides/2-Files.html#data-files-in-excel",
    "href": "r-format/slides/2-Files.html#data-files-in-excel",
    "title": "Data Wrangling",
    "section": "Data Files in Excel",
    "text": "Data Files in Excel\n\nFormats .xls and .csv - what’s the difference?\nFile extensions .xls and .xlsx are proprietary Excel formats, binary files\ncsv is an extension for Comma Separated Value files. They are text files - directly readable.\nMotivating Example: Gas prices in the Midwest since 1994\n\n\nCSV - comma-separated values (contains plain text entries and commas) XLS - specific spreadsheet file for Microsoft Excel. Can’t be opened with a text editor"
  },
  {
    "objectID": "r-format/slides/2-Files.html#motivating-example",
    "href": "r-format/slides/2-Files.html#motivating-example",
    "title": "Data Wrangling",
    "section": "MOTIVATING EXAMPLE",
    "text": "MOTIVATING EXAMPLE\nGas Prices in the Midwest\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYear-Month\nWeek 1\n…3\nWeek 2\n…5\nWeek 3\n…7\nWeek 4\n…9\nWeek 5\n…11\n\n\n\n\nNA\nEnd Date\nValue\nEnd Date\nValue\nEnd Date\nValue\nEnd Date\nValue\nEnd Date\nValue\n\n\n1994-Nov\nNA\nNA\nNA\nNA\nNA\nNA\n28-Nov\n1.122\nNA\nNA\n\n\n1994-Dec\n5-Dec\n1.086\n12-Dec\n1.057\n19-Dec\n1.039\n26-Dec\n1.027\nNA\nNA\n\n\n1995-Jan\n2-Jan\n1.025\n9-Jan\n1.046\n16-Jan\n1.031\n23-Jan\n1.054\n30-Jan\n1.055\n\n\n1995-Feb\n6-Feb\n1.045\n13-Feb\n1.04\n20-Feb\n1.031\n27-Feb\n1.052\nNA\nNA\n\n\n1995-Mar\n6-Mar\n1.053\n13-Mar\n1.042\n20-Mar\n1.048\n27-Mar\n1.065\nNA\nNA"
  },
  {
    "objectID": "r-format/slides/2-Files.html#whats-the-difference-read_csv-vs.-read_",
    "href": "r-format/slides/2-Files.html#whats-the-difference-read_csv-vs.-read_",
    "title": "Data Wrangling",
    "section": "What’s the difference read_csv vs. read_* ??",
    "text": "What’s the difference read_csv vs. read_* ??\nread_csv is just one way to read a file using the readr package:\n\nread_delim: the most generic function. Use the delim argument to read a file with any type of delimiter\nread_tsv: read tab separated files\nread_lines: read a file into a vector that has one element per line of the file\nread_file: read a file into a single character element\nread_table: read a file separated by space\n\n\nStart by having them load tidyverse. (Includes all of the packages we’ll be using today)"
  },
  {
    "objectID": "r-format/slides/2-Files.html#your-turn",
    "href": "r-format/slides/2-Files.html#your-turn",
    "title": "Data Wrangling",
    "section": "Your Turn",
    "text": "Your Turn\nHave a look at the parameters of read_csv to solve the following problems:\n\nRead the first two lines of the file into an object called midwest_names\nRead everything EXCEPT the first two lines into an object called midwest_data\n\nHint: Visit http://unl-statistics.github.io/R-workshops/r-format/data/midwest.csv to download the data into your current working directory (getwd()) and look at it in Excel to help figure out what the issue is."
  },
  {
    "objectID": "r-format/slides/2-Files.html#your-turn-solutions",
    "href": "r-format/slides/2-Files.html#your-turn-solutions",
    "title": "Data Wrangling",
    "section": "Your Turn Solutions",
    "text": "Your Turn Solutions\n\nmidwest_names &lt;- read_csv(\n\"midwest.csv\", \n  n_max= 2, col_names = FALSE)\n\n\nmidwest_data &lt;- read_csv(\n\"midwest.csv\", \n  skip = 2, col_names = FALSE)"
  },
  {
    "objectID": "r-format/slides/2-Files.html#quick-lesson-in-data-cleaning",
    "href": "r-format/slides/2-Files.html#quick-lesson-in-data-cleaning",
    "title": "Data Wrangling",
    "section": "Quick Lesson in Data Cleaning",
    "text": "Quick Lesson in Data Cleaning\n\nlibrary(lubridate) # works with dates\nlibrary(tidyverse)\nvalues &lt;- c(midwest_data$X3, midwest_data$X5, midwest_data$X7, \n            midwest_data$X9, midwest_data$X11)\ndates &lt;- c(paste(midwest_data$X1, midwest_data$X2, sep = \"-\"), \n           paste(midwest_data$X1, midwest_data$X4, sep = \"-\"),\n           paste(midwest_data$X1, midwest_data$X6, sep = \"-\"),\n           paste(midwest_data$X1, midwest_data$X8, sep = \"-\"),\n           paste(midwest_data$X1, midwest_data$X10, sep = \"-\"))\n\ndates &lt;- dates[!is.na(values)] #removing NAs\nvalues &lt;- values[!is.na(values)] #removing Nas\n\ndates &lt;- ymd(dates)\n\nmidwest_gas &lt;- data_frame(date = dates, price = values)\nmidwest_gas &lt;- arrange(midwest_gas, dates)\n\n\nexplain - paste function values - vector of the different columns dates - vector of different dates (combining year/month with month/day)\nymd function - transforms dates stored in a character to date with year, month, day components"
  },
  {
    "objectID": "r-format/slides/2-Files.html#now-we-can-make-a-plot",
    "href": "r-format/slides/2-Files.html#now-we-can-make-a-plot",
    "title": "Data Wrangling",
    "section": "Now we can make a plot!",
    "text": "Now we can make a plot!\n\nlibrary(ggplot2)\n\nggplot(midwest_gas, aes(x = date, y = price)) + geom_line()"
  },
  {
    "objectID": "r-format/slides/2-Files.html#reading-excel-data",
    "href": "r-format/slides/2-Files.html#reading-excel-data",
    "title": "Data Wrangling",
    "section": "Reading Excel Data",
    "text": "Reading Excel Data\nDownload the midwest.xls file to your current working directory (getwd())\n\nlibrary(readxl)\nmidwest2 &lt;- read_excel(\"https://github.com/unl-statistics/R-workshops/raw/main/r-format/data/midwest.xls\") \nhead(midwest2)\n\nSomething isn’t quite right here…\n\n\n\n\n\nYear-Month\nWeek 1\n...3\nWeek 2\n...5\nWeek 3\n...7\nWeek 4\n...9\nWeek 5\n...11\n\n\n\n\nNA\nEnd Date\nValue\nEnd Date\nValue\nEnd Date\nValue\nEnd Date\nValue\nEnd Date\nValue\n\n\n1994-Nov\nNA\nNA\nNA\nNA\nNA\nNA\n39779\n1.1220000000000001\nNA\nNA\n\n\n1994-Dec\n39786\n1.0860000000000001\n39793\n1.0569999999999999\n39800\n1.0389999999999999\n39807\n1.0269999999999999\nNA\nNA"
  },
  {
    "objectID": "r-format/slides/2-Files.html#reading-excel-data-attempt-2",
    "href": "r-format/slides/2-Files.html#reading-excel-data-attempt-2",
    "title": "Data Wrangling",
    "section": "Reading Excel Data: Attempt #2",
    "text": "Reading Excel Data: Attempt #2\nThe 2nd row of the excel file also contains variable names.\nLet’s skip the first this time. We can then rename the first column.\n\nmidwest2 &lt;- read_excel(\"https://github.com/unl-statistics/R-workshops/raw/main/r-format/data/midwest.xls\", skip = 1) #&lt;&lt;\nnames(midwest2)[1] &lt;- \"Year-Month\"\nhead(midwest2)\n\n\n\n\n\n\nYear-Month\nEnd Date...2\nValue...3\nEnd Date...4\nValue...5\nEnd Date...6\nValue...7\nEnd Date...8\nValue...9\nEnd Date...10\nValue...11\n\n\n\n\n1994-Nov\nNA\nNA\nNA\nNA\nNA\nNA\n2012-11-28\n1.122\nNA\nNA\n\n\n1994-Dec\n2012-12-05\n1.086\n2012-12-12\n1.057\n2012-12-19\n1.039\n2012-12-26\n1.027\nNA\nNA\n\n\n1995-Jan\n2012-01-02\n1.025\n2012-01-09\n1.046\n2012-01-16\n1.031\n2012-01-23\n1.054\n2012-01-30\n1.055\n\n\n\n\n\n\n\nBetter, but not yet perfect…\n\nHow can you fix this? Brute force way by renaming all columns? Take this into consideration when entering in your data into spreadsheets (no merged columns names with subheadings)"
  },
  {
    "objectID": "r-format/slides/2-Files.html#haven-package",
    "href": "r-format/slides/2-Files.html#haven-package",
    "title": "Data Wrangling",
    "section": "haven Package",
    "text": "haven Package\n\nOther file formats can be read using the functions from package haven\nSPSS: read_spss\nSAS: read_xpt\nStata: read_dta"
  },
  {
    "objectID": "r-format/slides/2-Files.html#useful-packages-for-other-data-files",
    "href": "r-format/slides/2-Files.html#useful-packages-for-other-data-files",
    "title": "Data Wrangling",
    "section": "Useful Packages for Other Data Files",
    "text": "Useful Packages for Other Data Files\n\nforeign package reads from Minitab, Systat, etc. files.\nrgdal package reads shapefiles (for maps)\nsf package reads arcgis files, etc. sf package\n\n\nR knowledge Spatial, by Allison Horst"
  },
  {
    "objectID": "r-format/slides/2-Files.html#your-turn-2-minutes",
    "href": "r-format/slides/2-Files.html#your-turn-2-minutes",
    "title": "Data Wrangling",
    "section": "Your Turn (~2 minutes)",
    "text": "Your Turn (~2 minutes)\nThe NHANES (National Health and Nutrition Survey) publishes data in the SAS xport format:\nhttps://wwwn.cdc.gov/Nchs/Nhanes/continuousnhanes/default.aspx?BeginYear=2013\n\nScroll to the bottom, choose one of the datasets (Demographics, Examination, etc.). Download the Data file (XPT)\nUse read_xpt() to load the file into R\nBriefly examine the dataset you’ve imported (use head or tail, etc)"
  },
  {
    "objectID": "r-format/slides/2-Files.html#solution",
    "href": "r-format/slides/2-Files.html#solution",
    "title": "Data Wrangling",
    "section": "Solution",
    "text": "Solution\n\nlibrary(haven) \nsas.data &lt;- read_xpt(\"../data/DEMO_G.XPT\")\nsas.data %&gt;% head(2)\n\n# A tibble: 2 × 48\n   SEQN SDDSRVYR RIDSTATR RIAGENDR RIDAGEYR RIDAGEMN RIDRETH1 RIDRETH3 RIDEXMON\n  &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 62161        7        2        1       22       NA        3        3        2\n2 62162        7        2        2        3       NA        1        1        1\n# ℹ 39 more variables: RIDEXAGY &lt;dbl&gt;, RIDEXAGM &lt;dbl&gt;, DMQMILIZ &lt;dbl&gt;,\n#   DMQADFC &lt;dbl&gt;, DMDBORN4 &lt;dbl&gt;, DMDCITZN &lt;dbl&gt;, DMDYRSUS &lt;dbl&gt;,\n#   DMDEDUC3 &lt;dbl&gt;, DMDEDUC2 &lt;dbl&gt;, DMDMARTL &lt;dbl&gt;, RIDEXPRG &lt;dbl&gt;,\n#   SIALANG &lt;dbl&gt;, SIAPROXY &lt;dbl&gt;, SIAINTRP &lt;dbl&gt;, FIALANG &lt;dbl&gt;,\n#   FIAPROXY &lt;dbl&gt;, FIAINTRP &lt;dbl&gt;, MIALANG &lt;dbl&gt;, MIAPROXY &lt;dbl&gt;,\n#   MIAINTRP &lt;dbl&gt;, AIALANGA &lt;dbl&gt;, WTINT2YR &lt;dbl&gt;, WTMEC2YR &lt;dbl&gt;,\n#   SDMVPSU &lt;dbl&gt;, SDMVSTRA &lt;dbl&gt;, INDHHIN2 &lt;dbl&gt;, INDFMIN2 &lt;dbl&gt;, …\n\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "pricing.html",
    "href": "pricing.html",
    "title": "UNL R Workshops",
    "section": "",
    "text": "Workshop Type\nStudent\nUNL Affiliate\nCorporate\n\n\n\n\nFull Day\n$40.00\n$60.00\n$200.00\n\n\nHalf Day\n$20.00\n$30.00\n$100.00\n\n\nFull Week\n$120.00\n$210.00\n$700.00"
  },
  {
    "objectID": "r-modeling/index.html",
    "href": "r-modeling/index.html",
    "title": "Statistical Modeling in R",
    "section": "",
    "text": "Return to rwrks homepage\nAfter the end of Statistical Modeling in R, we expect you to be able to do the following:\nNote: This workshop day is not a substitute for courses such as 801 and 802 which teach ANOVA, regression, some experimental design, etc. The goal is to teach you how to implement these models in R and extract and display the output; we will not be teaching experimental design or the statistical details of each test and model."
  },
  {
    "objectID": "r-modeling/index.html#timetable",
    "href": "r-modeling/index.html#timetable",
    "title": "Statistical Modeling in R",
    "section": "Timetable",
    "text": "Timetable\n\n\n\nTime\nNotes\nLectures and Resources\n\n\n\n\n9:00 - 9:15\nIntroduction to Statistical Modeling\nWhy is statistical modeling important? Why should you do exploratory data analysis (EDA)?  1-ModelingIntro.R\n\n\n9:15 - 10:00\nBasic Statistical Tests\np-values, confidence intervals, t-tests, and chi-square tests, simple regression, etc.  2-BasicStatisticalTests.R\n\n\n10:00 - 10:15\nBreak\n\n\n\n10:15 - 12:00\nLinear Models (and more)\nANOVA, factorials, blocking, and normality assumptions  3-LinearModels.R\n\n\n12:00 - 1:00\nLunch Break (on your own)\n\n\n\n1:00 - 2:15\nGeneralized Linear Models (and more)\nWhat if my data is not normally distributed? 4-GeneralizedLinearModels.R\n\n\n2:15 - 2:30\nBreak\n\n\n\n2:30 - 4:00\nWorkshop: Bring Your Own Data\nCombine all the new R skills you learned this week to analyze your own data and walk away with results! Bonus - incorporate them into your Shiny app from yesterday! 5-ModelingWorkshop.R  Note: We will have a few data sets if you need one.\n\n\n3:55 - 4:00\nEvaluation\nHelp us make the workshops better!"
  },
  {
    "objectID": "r-modeling/index.html#useful-links",
    "href": "r-modeling/index.html#useful-links",
    "title": "Statistical Modeling in R",
    "section": "Useful Links",
    "text": "Useful Links\n\nemmeans - See links to Vignettes\nMixed Models by Ben Bolker"
  },
  {
    "objectID": "r-modeling/slides/1-ModelingIntro.html#outline",
    "href": "r-modeling/slides/1-ModelingIntro.html#outline",
    "title": "Introduction to Statistical Modeling",
    "section": "Outline",
    "text": "Outline\n\nWhat is statistical modeling?\nObservational Studies vs Planned Experiments\nData Format\nExploratory Data Analysis - why do it?\n\nContent modified from: https://tjfisher19.github.io/introStatModeling/introductory-statistics-in-r.html#goals-of-a-statistical-analysis"
  },
  {
    "objectID": "r-modeling/slides/1-ModelingIntro.html#why-is-statistical-analysis-important",
    "href": "r-modeling/slides/1-ModelingIntro.html#why-is-statistical-analysis-important",
    "title": "Introduction to Statistical Modeling",
    "section": "Why is statistical analysis important?",
    "text": "Why is statistical analysis important?\nThe language R is our tool to facilitate investigations into data and the process of making sense of it. This is what the science of statistics is all about.\nThe goals of a statistical analysis typically are\n\nto make sense of data in the face of uncertainty.\nto meaningfully describe the patterns of variation in collected sample data, and use this information to make reliable inferences/generalizations about the parent population.\n\n\nIn many statistical problems, we are interested in describing the relationship that may exist among several different measured variables. For example, your current GPA could be impacted by how much you study. Or there may be several contributing factors – your credit hour load, your ACT score, whether or not you have a part-time job, etc.\nOf course, what makes your GPA is the result of a very highly complex combination of factors, some important and others not so important."
  },
  {
    "objectID": "r-modeling/slides/1-ModelingIntro.html#data-science-process",
    "href": "r-modeling/slides/1-ModelingIntro.html#data-science-process",
    "title": "Introduction to Statistical Modeling",
    "section": "Data science process",
    "text": "Data science process\n\nImage source: https://towardsdatascience.com/the-data-science-process-a19eb7ebc41b?gi=10ee5878828e"
  },
  {
    "objectID": "r-modeling/slides/1-ModelingIntro.html#data-collection",
    "href": "r-modeling/slides/1-ModelingIntro.html#data-collection",
    "title": "Introduction to Statistical Modeling",
    "section": "Data collection",
    "text": "Data collection\nWhat is the source of your data? How was the data collected?\n\n\nObservational Studies\n\nsimply collect measurements on predictor and response variables as they naturally occur.\nno intervention from the data collector.\ncannot establish causal connections\ne.g. the natural resources department is interested in the relationship between the water quality and the distance from the nearest power plant.\n\n\nPlanned Experiments\n\na researcher manipulates one or more variables, while holding all other variables constant\nwe can establish cause and effect relationships between the predictors and response\ne.g. an agronomy and horticulture grad student applies different types of fertilizer to plots in a corn field and measures the height of the corn plants.\n\n\n\n\nBefore we introduce more statistical models we need to step back and discuss the source of our data. Are the data a “sample of convenience,” or were they obtained via a designed experiment or some random sampling scheme? How the data were collected has a crucial impact on what conclusions can be meaningfully made.\nIt is important to recognize that there are two primary methods for obtaining data for analysis: designed experiments and observational studies. There is a third type of data collected through survey sampling methods that incorporates elements from both designed experiments and observational studies, but we exclude it here. It is important to know the distinction because each type of data results in a different approach to interpreting estimated models."
  },
  {
    "objectID": "r-modeling/slides/1-ModelingIntro.html#data-cleaning",
    "href": "r-modeling/slides/1-ModelingIntro.html#data-cleaning",
    "title": "Introduction to Statistical Modeling",
    "section": "Data cleaning",
    "text": "Data cleaning\nRecall tidy data format! Specify EVERYTHING (e.g. plot, treatment, pair, response, etc.)\n\nEach variable is a column\nEach observation is a row\nEach type of observational unit forms a table"
  },
  {
    "objectID": "r-modeling/slides/1-ModelingIntro.html#experimental-unit-vs-sampling-unit",
    "href": "r-modeling/slides/1-ModelingIntro.html#experimental-unit-vs-sampling-unit",
    "title": "Introduction to Statistical Modeling",
    "section": "Experimental unit vs Sampling unit",
    "text": "Experimental unit vs Sampling unit\n In a planned experiment, it is important to know where your treatments were independently applied.\nExample:\nIf you apply different fertilizers to plots in a field and measure the height of 10 corn plants from the middle rows of the plot, where are the treatments applied?\n\n\nExperimental unit - plot (fertilizer was independently applied)\nSampling unit - corn plants (measurements were taken individually on the corn plants)\n\n\n\nOptions:\n\nAverage your response over your sub samples (e.g. find the average height of the 10 plants)\nAccount for sub-sampling in your statistical model.\n\nDo not treat each sub-sample as an independent unit in your analysis."
  },
  {
    "objectID": "r-modeling/slides/1-ModelingIntro.html#exploratory-data-analysis-eda",
    "href": "r-modeling/slides/1-ModelingIntro.html#exploratory-data-analysis-eda",
    "title": "Introduction to Statistical Modeling",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\nTypically referred to looking at descriptive statistics. EDA should be performed prior to a formal analysis (“look at your data first!”)\n\n\nNumerical summaries\n\nmeans, medians, standard deviation\nquantiles, five-number summaries\ncorrelations\n\n\nGraphical Summaries\n\nOne variable: boxplots, histograms, density plots, etc.\nTwo variables: scatterplots, side-by-side boxplots, overlaid density plots\nMany variables: scatterplot matrices, interactive graphics, faceting\n\n\n\nRemember, what you put into your statistical model, you get out of your statistical model. Data quality is important!\n\ndescriptive statistics in Intro Statistics books. This is an important step that should always be performed prior to a formal analysis. It looks simple but it is vital to conducting a meaningful analysis. EDA is comprised of: numerical summaries and graphical summaries\nWe look for outliers, data-entry errors and skewness or unusual distributions using EDA. Are the data distributed as you expect? Getting data into a form suitable for analysis by cleaning out mistakes and aberrations is often time consuming. It often takes more time than the data analysis itself! In this course, data will usually be ready to analyze but we will occasionally intermix messy data. You should realize that in practice it is rarely the case to receive clean data."
  },
  {
    "objectID": "r-modeling/slides/1-ModelingIntro.html#eda-example",
    "href": "r-modeling/slides/1-ModelingIntro.html#eda-example",
    "title": "Introduction to Statistical Modeling",
    "section": "EDA Example",
    "text": "EDA Example\nRecall the Palmer Penguin data set.\n\ninstall.packages(\"palmerpenguins\")\ndata(penguins, package = \"palmerpenguins\")\nhead(penguins)\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n2007\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n2007\n\n\nGentoo\nBiscoe\n48.4\n14.4\n203\n4625\nfemale\n2009\n\n\nGentoo\nBiscoe\n51.1\n16.5\n225\n5250\nmale\n2009\n\n\nChinstrap\nDream\n50.6\n19.4\n193\n3800\nmale\n2007\n\n\nChinstrap\nDream\n46.7\n17.9\n195\n3300\nfemale\n2007\n\n\n\n\n\n\n\nData were collected and made available by Dr. Kristen Gorman and the Palmer Station, Antarctica LTER, a member of the Long Term Ecological Research Network."
  },
  {
    "objectID": "r-modeling/slides/1-ModelingIntro.html#eda-example-numerical-summaries",
    "href": "r-modeling/slides/1-ModelingIntro.html#eda-example-numerical-summaries",
    "title": "Introduction to Statistical Modeling",
    "section": "EDA Example: Numerical summaries",
    "text": "EDA Example: Numerical summaries\n\npenguins %&gt;%\n  group_by(sex) %&gt;%\n  summarize(across(c(\"body_mass_g\"), \n                   list(Mean = ~ mean(., na.rm = T), \n                        SD = ~ sd(., na.rm =T), \n                        Min = ~ min(., na.rm = T), \n                        Median = ~ median(., na.rm = T), \n                        Max = ~ max(., na.rm = T))))\n\n\n\n\n\n\n\nsex\nbody_mass_g_Mean\nbody_mass_g_SD\nbody_mass_g_Min\nbody_mass_g_Median\nbody_mass_g_Max\n\n\n\n\nfemale\n3862.3\n666.2\n2700\n3650\n5200\n\n\nmale\n4545.7\n787.6\n3250\n4300\n6300\n\n\nNA\n4005.6\n679.4\n2975\n4100\n4875\n\n\n\n\n\n\n\n\nYour turn:\n+ What if you wanted to get summaries by species instead of sex? What about by both?\n+ Can you get summaries for a different measure?"
  },
  {
    "objectID": "r-modeling/slides/1-ModelingIntro.html#eda-example-graphical-summaries",
    "href": "r-modeling/slides/1-ModelingIntro.html#eda-example-graphical-summaries",
    "title": "Introduction to Statistical Modeling",
    "section": "EDA Example: Graphical summaries",
    "text": "EDA Example: Graphical summaries\n\npenguins %&gt;%\n  ggplot(aes(x = sex, y = body_mass_g, color = sex, fill = sex)) +\n  geom_boxplot(alpha = 0.5) +\n  geom_point(position = \"jitter\", alpha = 0.7) + \n  theme_bw() +\n  theme(aspect.ratio = 1)"
  },
  {
    "objectID": "r-modeling/slides/1-ModelingIntro.html#your-turn",
    "href": "r-modeling/slides/1-ModelingIntro.html#your-turn",
    "title": "Introduction to Statistical Modeling",
    "section": "Your turn",
    "text": "Your turn\n\nHow would you look at the graphical summary for each species?\nWhat type of plot would you make to compare body mass and flipper length?"
  },
  {
    "objectID": "r-modeling/slides/1-ModelingIntro.html#statistical-models",
    "href": "r-modeling/slides/1-ModelingIntro.html#statistical-models",
    "title": "Introduction to Statistical Modeling",
    "section": "Statistical Models",
    "text": "Statistical Models\nA statistical model is a mechanism we will use to try to describe the structural relationship between some measured outcome (called the response variable) and one or more impacting variables (called predictor variables or factors or features, depending on the contextual circumstance) in a simplified mathematical way.\n\\[\n\\text{Data} = \\text{Systematic Structure} + \\text{Random Variation}\n\\]\n\nThink of a model airplane. It is just a simplified representation of the real thing.\nIt is in this sense that you can think of a statistical model as a “simplification” in much the same way as the model airplane: we know that the true relationship between response and predictor variables is very detailed and complex. The goal of the model is not to capture all the intricacies of the complexity but rather, the model only seeks to describe the essential features of any relationships that exist."
  },
  {
    "objectID": "r-modeling/slides/1-ModelingIntro.html#in-this-session-we-will",
    "href": "r-modeling/slides/1-ModelingIntro.html#in-this-session-we-will",
    "title": "Introduction to Statistical Modeling",
    "section": "In this session we will…",
    "text": "In this session we will…\n\nBasic statistical tests\n\nFive step hypothesis procedure\nconfidence intervals & p-values\nt-tests, chi-square tests, and simple regression\n\nLinear models\n\nOne-way and two-way ANOVA\nBlocking\n\nGeneralized Linear Models\n\nPoisson and binomial response variables\n\nWorkshop time: bring your own data!\n\nWe will have example data sets for you to practice.\n\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#outline",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#outline",
    "title": "Basic Statistical Tests",
    "section": "Outline",
    "text": "Outline\n\np-values\nconfidence intervals\nt-tests\nchi-square tests\nsimple regression"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#five-step-hypothesis-testing-procedure",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#five-step-hypothesis-testing-procedure",
    "title": "Basic Statistical Tests",
    "section": "Five Step Hypothesis Testing Procedure",
    "text": "Five Step Hypothesis Testing Procedure\n\nStep 1: State your null and alternate hypothesis.\nStep 2: Collect data.\nStep 3: Perform a statistical test.\nStep 4: Decide whether to reject or fail to reject your null hypothesis.\nStep 5: Present your findings.\n\n\n\nStep 1: State your null and alternate hypothesis.\n\n(the prediction that you want to investigate)\nThe alternate hypothesis is usually your initial hypothesis that predicts a relationship between variables. The null hypothesis is a prediction of no relationship between the variables you are interested in.\n\nStep 2: Collect data.\n\nFor a statistical test to be valid, it is important to perform sampling and collect data in a way that is designed to test your hypothesis. If your data are not representative, then you cannot make statistical inferences about the population you are interested in.\n\nStep 3: Perform a statistical test.\n\nThere are a variety of statistical tests available, but they are all based on the comparison of within-group variance (how spread out the data is within a category) versus between-group variance (how different the categories are from one another).\n\nStep 4: Decide whether to reject or fail to reject your null hypothesis.\n\nBased on the outcome of your statistical test, you will have to decide whether to reject or fail to reject your null hypothesis.\nIn most cases you will use the p-value generated by your statistical test to guide your decision. And in most cases, your predetermined level of significance for rejecting the null hypothesis will be 0.05 – that is, when there is a less than 5% chance that you would see these results if the null hypothesis were true.\n\nStep 5: Present your findings.\n\nThe results of hypothesis testing will be presented in the results and discussion sections of your research paper."
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#statistical-hypotheses",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#statistical-hypotheses",
    "title": "Basic Statistical Tests",
    "section": "Statistical Hypotheses",
    "text": "Statistical Hypotheses\n\nNull Hypothesis what we are hoping to disprove?\nAlternative Hypothesis if random chance isn’t the reason, then what?"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#what-is-a-p-value",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#what-is-a-p-value",
    "title": "Basic Statistical Tests",
    "section": "What is a p-value?",
    "text": "What is a p-value?\n\nImage source: Susan VanderPlas UNL Extension\nThe p-value is the probability of observing the data we saw under the null hypothesis (\\(H_0\\))\nA p-value is the area under the reference distribution where values are as or more extreme than the hypothesized value.\nIf the p-value is low (p \\(&lt; \\alpha\\)), where \\(\\alpha = 0.05, 0.01,\\) or another pre-specified value) then we know that it is relatively unlikely to observe our data under \\(H_0\\) which means that it is more likely that \\(H_0\\) is false and \\(H_A\\) is true."
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#what-is-a-p-value-1",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#what-is-a-p-value-1",
    "title": "Basic Statistical Tests",
    "section": "What is a p-value?",
    "text": "What is a p-value?\n\nImage source: Susan VanderPlas UNL Extension"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#what-is-a-confidence-interval",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#what-is-a-confidence-interval",
    "title": "Basic Statistical Tests",
    "section": "What is a confidence interval?",
    "text": "What is a confidence interval?\n\nConfidence intervals are a range of values around the central estimate obtained from the sample data.Image source: Susan VanderPlas UNL Extension\n\nSometimes, we don’t want to test whether a parameter is equal to a specific value - instead, we might want to know what that value is (or at least, a range of possible values for that parameter).\nIn this case, we construct a confidence interval - a set of plausible values for the parameter.\nWe can think of a confidence interval as our best estimate of the parameter value + uncertainty.\nConfidence intervals, like hypothesis tests, are conducted based on a parameter \\(\\alpha\\) representing the acceptable level of error. If we want to be 95% confident in our estimate, our interval will be wider than if we want to be 90% confident in our estimate – we have to include more values to get a wider interval."
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#penguins-data",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#penguins-data",
    "title": "Basic Statistical Tests",
    "section": "Penguins Data",
    "text": "Penguins Data\n\ndata(penguins, package = \"palmerpenguins\")"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#two-sample-independent-t-test",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#two-sample-independent-t-test",
    "title": "Basic Statistical Tests",
    "section": "Two-sample independent t-test",
    "text": "Two-sample independent t-test\nResearch Question Is there a difference in the body mass (g) of penguins between male and female penguins?\n\n\nData\n\n\n\n\n\nsex\nbody_mass_g\n\n\n\n\nmale\n3750\n\n\nfemale\n3800\n\n\nfemale\n3250\n\n\n\n\n\n\n\nNumerical Summary\n\n\n\n\n\nsex\nmean\nsd\n\n\n\n\nfemale\n3862.3\n666.2\n\n\nmale\n4545.7\n787.6\n\n\n\n\n\n\n\n\nGraphical Summary"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#two-sample-t-test",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#two-sample-t-test",
    "title": "Basic Statistical Tests",
    "section": "Two-sample t-test",
    "text": "Two-sample t-test\n\nhelp(t.test)\nt.test(y ~ x, \n       data = data_name,\n       alternative = “two.sided”, \n       mu = 0, \n       paired = FALSE, \n       var.equal = FALSE, \n       conf.level = 0.95)\n\n\ny: The variable name of the quantitative response.\nx: The variable name of the grouping variable (or treatment).\ndata: The name of the data set\nalternative: The alternative hypothesis. Options include “two.sided”, “less”, or “greater.”\nmu: The value assumed to be the true difference in means.\npaired: Whether or not to use a paired t-test.\nvar.equal: Whether or not the variances are equal between the two groups.\nconf.level: The confidence level to use for the test.\n\n\nTest for equal variances\n\nlibrary(car)\nleveneTest(penguins2$body_mass_g, group = penguins2$sex, center = mean)\n\nLevene's Test for Homogeneity of Variance (center = mean)\n       Df F value   Pr(&gt;F)   \ngroup   1  9.3374 0.002428 **\n      331                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#two-sample-independent-t-test-1",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#two-sample-independent-t-test-1",
    "title": "Basic Statistical Tests",
    "section": "Two-sample independent t-test",
    "text": "Two-sample independent t-test\n\nNull: the mean body mass for female penguins is equal to the mean body mass for male penguins (female - male \\(= 0\\))\nAlternative: the mean body mass for female penguins is not equal to the mean body mass for male penguins (female - male \\(\\ne 0\\))\n\n\npenguins_ttest &lt;- t.test(body_mass_g ~ sex, data = penguins2) #&lt;&lt;\npenguins_ttest\n\n\n\n\n    Welch Two Sample t-test\n\ndata:  body_mass_g by sex\nt = -8.5545, df = 323.9, p-value = 4.794e-16\nalternative hypothesis: true difference in means between group female and group male is not equal to 0\n95 percent confidence interval:\n -840.5783 -526.2453\nsample estimates:\nmean in group female   mean in group male \n            3862.273             4545.685"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#two-sample-independent-t-test-table-results",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#two-sample-independent-t-test-table-results",
    "title": "Basic Statistical Tests",
    "section": "Two-sample independent t-test (table results)",
    "text": "Two-sample independent t-test (table results)\nExtract specific output\n\npenguins_ttest$statistic\npenguins_ttest$df\npenguins_ttest$p.value\n\nSummarize results with library(broom)\n\ninstall.packages(\"broom\")\nlibrary(broom)\npenguins_results &lt;- tidy(penguins_ttest) #&lt;&lt;\npenguins_results\n\n\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n-683.4\n3862.3\n4545.7\n-8.6\n&lt;0.001\n323.9\n-840.6\n-526.2\nWelch Two Sample t-test\ntwo.sided"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#two-sample-independent-t-test-graphical-results",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#two-sample-independent-t-test-graphical-results",
    "title": "Basic Statistical Tests",
    "section": "Two-sample independent t-test (graphical results)",
    "text": "Two-sample independent t-test (graphical results)\n\nggplot(penguins_results, aes(x = NA, y = estimate)) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.2) +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +\n  theme_bw() +\n  theme(aspect.ratio = 0.5, axis.text.y = element_blank()) +\n  xlab(\"\") + ylab(\"Difference in Body Mass \\n (Female - Male)\") +\n  coord_flip()"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#your-turn",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#your-turn",
    "title": "Basic Statistical Tests",
    "section": "Your Turn",
    "text": "Your Turn\n\nWhat if you wanted the difference to be male - female? (Hint: use relevel())\nThe default confidence level is 95%, how would you change it to a 90% confidence level?\n\nDoes your p-value change?\nHow about your confidence interval?"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#your-turn-1",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#your-turn-1",
    "title": "Basic Statistical Tests",
    "section": "Your Turn",
    "text": "Your Turn\n\nWhat if you wanted the difference to be male - female?\n\n\nlevels(penguins2$sex)\n\n[1] \"female\" \"male\"  \n\npenguins2$sex &lt;- relevel(penguins2$sex, ref = \"male\") #&lt;&lt;\nlevels(penguins2$sex)\n\n[1] \"male\"   \"female\"\n\n\n\npenguins_ttest2 &lt;- t.test(body_mass_g ~ sex, data = penguins2)\npenguins_ttest2\n\n\n\n\n\n\n\nestimate\nestimate1\nestimate2\nstatistic\np.value\nparameter\nconf.low\nconf.high\nmethod\nalternative\n\n\n\n\n683.4\n4545.7\n3862.3\n8.6\n&lt;0.001\n323.9\n526.2\n840.6\nWelch Two Sample t-test\ntwo.sided"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#your-turn-2",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#your-turn-2",
    "title": "Basic Statistical Tests",
    "section": "Your Turn",
    "text": "Your Turn\n\nThe default confidence level is 95%, how would you change it to a 90% confidence level?\n\nDoes your p-value change?\nHow about your confidence interval?\n\n\n\n\n[1] 4.793891e-16\n\n\n[1] 526.2453 840.5783\nattr(,\"conf.level\")\n[1] 0.95\n\n\n\npenguins_ttest3 &lt;- t.test(body_mass_g ~ sex, \n                          data = penguins2, \n                          conf.level = 0.9) #&lt;&lt;\npenguins_ttest3$p.value\npenguins_ttest3$conf.int\n\n\n\n[1] 4.793891e-16\n\n\n[1] 551.6295 815.1941\nattr(,\"conf.level\")\n[1] 0.9"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#chi-square-test-of-independence",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#chi-square-test-of-independence",
    "title": "Basic Statistical Tests",
    "section": "Chi-square test of independence",
    "text": "Chi-square test of independence\nResearch Question Are island and the species of penguin associated?\n\n\nData\n\n\n\n\n\nspecies\nisland\n\n\n\n\nAdelie\nTorgersen\n\n\nAdelie\nTorgersen\n\n\nAdelie\nTorgersen\n\n\n\n\n\n\n\n  Numerical Summary\n\n\n           species\nisland      Adelie Chinstrap Gentoo\n  Biscoe        44         0    124\n  Dream         56        68      0\n  Torgersen     52         0      0\n\n\n\nGraphical Summary"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#chi-square-test-of-independence-1",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#chi-square-test-of-independence-1",
    "title": "Basic Statistical Tests",
    "section": "Chi-square test of independence",
    "text": "Chi-square test of independence\n\nhelp(\"chisq.test\")\nchisq.test(y ~ x, \n       data = data_name,\n       simulate.p.value = FALSE,\n       B = 2000)"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#chi-square-test-of-independence-2",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#chi-square-test-of-independence-2",
    "title": "Basic Statistical Tests",
    "section": "Chi-square test of independence",
    "text": "Chi-square test of independence\n\nchisq.test(penguins3$island, penguins3$species) #&lt;&lt;\n\n\n    Pearson's Chi-squared test\n\ndata:  penguins3$island and penguins3$species\nX-squared = 299.55, df = 4, p-value &lt; 2.2e-16\n\nchisq.test(penguins3$island, penguins3$species, \n           simulate.p.value = T) #&lt;&lt;\n\n\n    Pearson's Chi-squared test with simulated p-value (based on 2000\n    replicates)\n\ndata:  penguins3$island and penguins3$species\nX-squared = 299.55, df = NA, p-value = 0.0004998"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression",
    "title": "Basic Statistical Tests",
    "section": "Simple Regression",
    "text": "Simple Regression\nResearch Question Is there a relationship between penguin body mass and flipper length?\n\n\nData\n\n\n\n\n\nbody_mass_g\nflipper_length_mm\n\n\n\n\n3750\n181\n\n\n3800\n186\n\n\n3250\n195\n\n\n\n\n\n\n\n  Numerical Summary\nPearson Correlation\n\n\n[1] 0.8712018\n\n\n\nGraphical Summary"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression-1",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression-1",
    "title": "Basic Statistical Tests",
    "section": "Simple Regression",
    "text": "Simple Regression\n\\[y = \\text{intercept} + \\text{slope} \\cdot x + \\text{error}\\]\n\nhelp(lm)\nregression_mod &lt;- lm(y ~ x, data = data_name)\nsummary(regression_mod)"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression-2",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression-2",
    "title": "Basic Statistical Tests",
    "section": "Simple Regression",
    "text": "Simple Regression\n\npenguins_regression &lt;- lm(body_mass_g ~ flipper_length_mm, data = penguins4) #&lt;&lt;\nsummary(penguins_regression)\n\n\nCall:\nlm(formula = body_mass_g ~ flipper_length_mm, data = penguins4)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1058.80  -259.27   -26.88   247.33  1288.69 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)       -5780.831    305.815  -18.90   &lt;2e-16 ***\nflipper_length_mm    49.686      1.518   32.72   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 394.3 on 340 degrees of freedom\nMultiple R-squared:  0.759, Adjusted R-squared:  0.7583 \nF-statistic:  1071 on 1 and 340 DF,  p-value: &lt; 2.2e-16"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression-evaluate-model",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression-evaluate-model",
    "title": "Basic Statistical Tests",
    "section": "Simple Regression (evaluate model)",
    "text": "Simple Regression (evaluate model)\n\npar(mfrow = c(2,2))\nplot(penguins_regression)\n\npar(mfrow = c(1,1))"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression-results",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression-results",
    "title": "Basic Statistical Tests",
    "section": "Simple Regression (results)",
    "text": "Simple Regression (results)\n\\[y_{i} = \\beta_0 + \\beta_1 \\cdot x_{i} + \\epsilon_{i}\\]\n\n\\(y_{i}\\) is the body mass (g) for penguin \\(i = 1, ..., n\\)\n\\(\\beta_0\\) is the intercept coefficient\n\\(\\beta_1\\) is the slope coefficient\n\\(x_{i}\\) is the flipper length (mm) for penguin \\(i = 1, ..., n\\)\n\\(\\epsilon_i\\) is the error for penguin \\(i = 1, ..., n\\) where \\(\\epsilon \\sim N(0, \\sigma^2)\\)\n\n\ntidy(penguins_regression)  %&gt;% \n  mutate(p.value = scales::pvalue(p.value))\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n-5780.83\n305.81\n-18.90\n&lt;0.001\n\n\nflipper_length_mm\n49.69\n1.52\n32.72\n&lt;0.001\n\n\n\n\n\n\n\n\\(\\text{body mass}_{i} = -5780.83 + 49.56 \\cdot \\text{flipper length}_{i} + \\epsilon_{i}\\) where \\(\\epsilon \\sim N(0, \\sigma^2)\\)"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression-results-1",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression-results-1",
    "title": "Basic Statistical Tests",
    "section": "Simple Regression (results)",
    "text": "Simple Regression (results)\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n-5780.83\n305.81\n-18.90\n&lt;0.001\n\n\nflipper_length_mm\n49.69\n1.52\n32.72\n&lt;0.001\n\n\n\n\n\n\n\n\nHypotheses\n\\[H_0: \\beta_1 = 0 \\text{ (the slope is equal to 0)}\\] \\[H_A: \\beta_1 \\ne 0 \\text{ (the slope is not equal to 0)}\\]\n\nConclusion\nWe have evidence to conclude there is an association between flipper length and body mass (t = 32.72; df = 340; p &lt; 0.0001)."
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression-results-2",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#simple-regression-results-2",
    "title": "Basic Statistical Tests",
    "section": "Simple Regression (results)",
    "text": "Simple Regression (results)\n\npenguins_preds &lt;- cbind(penguins4, predict(penguins_regression, interval = 'confidence')) #&lt;&lt;\nggplot(penguins_preds, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(shape = 1) +\n  geom_line(aes(y = fitted(penguins_regression))) + #&lt;&lt;\n  geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.3)  #&lt;&lt;"
  },
  {
    "objectID": "r-modeling/slides/2-BasicStatisticalTests.html#your-turn-simple-regression",
    "href": "r-modeling/slides/2-BasicStatisticalTests.html#your-turn-simple-regression",
    "title": "Basic Statistical Tests",
    "section": "Your Turn: Simple Regression",
    "text": "Your Turn: Simple Regression\nFit a linear regression line between bill length and bill depth for each species\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#outline",
    "href": "r-modeling/slides/3-LinearModels.html#outline",
    "title": "Linear Models (and more!)",
    "section": "Outline",
    "text": "Outline\n\nOne Way ANOVA\nTwo-way ANOVA\n\nQualitative/Qualitative\nQuantitative/Qualitative\n\nBlocking"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#overarching-example",
    "href": "r-modeling/slides/3-LinearModels.html#overarching-example",
    "title": "Linear Models (and more!)",
    "section": "Overarching Example",
    "text": "Overarching Example\nA plant pathology researcher is studying the effect of an experimental fungicide on the fresh weight of azaleas inoculated with a certain fungus. She has 49 potted plants of a particular azalea variety growing in a greenhouse. All plants are inoculated with a fungus. To start, she has 7 different fungicide combinations, with 7 plants per treatment.(Example from Lentner and Bishop, Experimental Design and Analysis (2nd))\n\nazalea &lt;- read.csv(\"https://raw.githubusercontent.com/unl-statistics/R-workshops/main/r-modeling/data/AzaleaOneWay.csv\")\n\n\nhead(azalea)\n\n  Trt Weight\n1   1     43\n2   1     37\n3   1     36\n4   1     42\n5   1     38\n6   1     31\n\n\nNote: As we go along, we will continue to use this scenario; we will just continue to get more specific on what the treatments are. The dataset will be updated accordingly as well."
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#one-way-anova",
    "href": "r-modeling/slides/3-LinearModels.html#one-way-anova",
    "title": "Linear Models (and more!)",
    "section": "One-Way ANOVA",
    "text": "One-Way ANOVA\n\nEssentially an expansion of the t-test Source\nCompare more than 2 levels of a treatment factor\n\nTreatment factor is your independent variable, the variable you expect to possibly cause the variation we see in the response. (i.e. the fungicide combination)\nLevels are the subdivisions of your overall treatment factor. (i.e. the 7 different combinations)\nIf you only have two levels of a factor, a One-Way ANOVA would be equivalent to t-test.\n\nRandomly sample your experimental units, and then randomly assign them to the different levels of the treatment factor."
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#model",
    "href": "r-modeling/slides/3-LinearModels.html#model",
    "title": "Linear Models (and more!)",
    "section": "Model",
    "text": "Model\n\\[y_{ij} = \\mu + \\tau_i + \\varepsilon_{ij}\\]\n\n\\(y_{ij}\\) is the response of the \\(j^{th}\\) observation in the \\(i^{th}\\) treatment level\n\\(\\mu\\) is the overall/grand mean\n\\(\\tau_i\\) is the effect of the \\(i^{th}\\) treatment level\n\\(\\varepsilon_{ij} \\sim N(0,\\sigma^2)\\) is the residual error\n\nIn terms of our example:\n\n\\(y_{ij}\\) is the fresh weight of the \\(j^{th}\\) azalea in the \\(i^{th}\\) fungicide level\n\\(\\mu\\) is the overall/grand mean\n\\(\\tau_i\\) is the effect of the \\(i^{th}\\) fungicide level\n\\(\\varepsilon_{ij} \\sim N(0,\\sigma^2)\\) is the residual error"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#hypotheses",
    "href": "r-modeling/slides/3-LinearModels.html#hypotheses",
    "title": "Linear Models (and more!)",
    "section": "Hypotheses",
    "text": "Hypotheses\n\\[H_0: \\mu_1 = \\mu_2 = ... = \\mu_n\\] \\[H_A: \\text{at least one } \\mu_i \\text{ is different}\\]\nOR\n\\[H_0: \\tau_1 = \\tau_2 = ... = \\tau_n = 0\\] \\[H_A: \\text{at least one } \\tau_i \\ne 0\\]\nThese hypotheses are equivalent, just being expressed in two different ways."
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#one-way-anova-in-r",
    "href": "r-modeling/slides/3-LinearModels.html#one-way-anova-in-r",
    "title": "Linear Models (and more!)",
    "section": "One-Way ANOVA in R",
    "text": "One-Way ANOVA in R\n\nWhen running this in R, make sure the variables are the type you need them.\nThe following code is incorrect… why?\n\n\nlibrary(car)\n#mod.fit &lt;- lm(response ~ trt, data = data)\nmod.fit &lt;- lm(Weight ~ Trt, data = azalea)\nAnova(mod.fit, type = \"III\")\n\nAnova Table (Type III tests)\n\nResponse: Weight\n             Sum Sq Df  F value Pr(&gt;F)    \n(Intercept) 14014.7  1 387.6348 &lt;2e-16 ***\nTrt            11.3  1   0.3117 0.5793    \nResiduals    1699.3 47                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nNote the only 1 degree of freedom with treatment. We should have 6!"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#one-way-anova-in-r-1",
    "href": "r-modeling/slides/3-LinearModels.html#one-way-anova-in-r-1",
    "title": "Linear Models (and more!)",
    "section": "One-Way ANOVA in R",
    "text": "One-Way ANOVA in R\n\nWhen running this in R, make sure the variables are the type you need them.\nChange Trt to a factor!\n\n\nlibrary(car)\n#mod.fit &lt;- lm(response ~ trt, data = data)\nazalea$Trt.new &lt;- as.factor(azalea$Trt)\nmod.fit &lt;- lm(Weight ~ Trt.new, data = azalea)\nAnova(mod.fit, type = \"III\")\n\nAnova Table (Type III tests)\n\nResponse: Weight\n            Sum Sq Df  F value Pr(&gt;F)    \n(Intercept) 9731.6  1 297.7812 &lt;2e-16 ***\nTrt.new      338.0  6   1.7236 0.1392    \nResiduals   1372.6 42                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nWe do not have evidence of an effect of fungicide combination on the mean fresh weight of azaleas."
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#but-what-if-we-did-have-a-difference",
    "href": "r-modeling/slides/3-LinearModels.html#but-what-if-we-did-have-a-difference",
    "title": "Linear Models (and more!)",
    "section": "But what if we did have a difference?!",
    "text": "But what if we did have a difference?!\n\nIf you reject the null hypothesis in a One-Way ANOVA, the result only tells you that at least one mean is different (i.e. at least one treatment level is different from the others).\nWe want to know which treatment levels are different!\nUse emmeans"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#emmeans-results",
    "href": "r-modeling/slides/3-LinearModels.html#emmeans-results",
    "title": "Linear Models (and more!)",
    "section": "emmeans results",
    "text": "emmeans results\n\nlibrary(emmeans)\nemmeans(mod.fit, pairwise ~ Trt.new)\n\n$emmeans\n Trt.new emmean   SE df lower.CL upper.CL\n 1         37.3 2.16 42     32.9     41.6\n 2         38.3 2.16 42     33.9     42.6\n 3         38.7 2.16 42     34.4     43.1\n 4         43.4 2.16 42     39.1     47.8\n 5         35.1 2.16 42     30.8     39.5\n 6         37.0 2.16 42     32.6     41.4\n 7         41.6 2.16 42     37.2     45.9\n\nConfidence level used: 0.95 \n\n$contrasts\n contrast            estimate   SE df t.ratio p.value\n Trt.new1 - Trt.new2   -1.000 3.06 42  -0.327  0.9999\n Trt.new1 - Trt.new3   -1.429 3.06 42  -0.468  0.9991\n Trt.new1 - Trt.new4   -6.143 3.06 42  -2.010  0.4236\n Trt.new1 - Trt.new5    2.143 3.06 42   0.701  0.9918\n Trt.new1 - Trt.new6    0.286 3.06 42   0.094  1.0000\n Trt.new1 - Trt.new7   -4.286 3.06 42  -1.403  0.7974\n Trt.new2 - Trt.new3   -0.429 3.06 42  -0.140  1.0000\n Trt.new2 - Trt.new4   -5.143 3.06 42  -1.683  0.6307\n Trt.new2 - Trt.new5    3.143 3.06 42   1.029  0.9444\n Trt.new2 - Trt.new6    1.286 3.06 42   0.421  0.9995\n Trt.new2 - Trt.new7   -3.286 3.06 42  -1.075  0.9319\n Trt.new3 - Trt.new4   -4.714 3.06 42  -1.543  0.7179\n Trt.new3 - Trt.new5    3.571 3.06 42   1.169  0.9018\n Trt.new3 - Trt.new6    1.714 3.06 42   0.561  0.9976\n Trt.new3 - Trt.new7   -2.857 3.06 42  -0.935  0.9645\n Trt.new4 - Trt.new5    8.286 3.06 42   2.712  0.1204\n Trt.new4 - Trt.new6    6.429 3.06 42   2.104  0.3693\n Trt.new4 - Trt.new7    1.857 3.06 42   0.608  0.9962\n Trt.new5 - Trt.new6   -1.857 3.06 42  -0.608  0.9962\n Trt.new5 - Trt.new7   -6.429 3.06 42  -2.104  0.3693\n Trt.new6 - Trt.new7   -4.571 3.06 42  -1.496  0.7455\n\nP value adjustment: tukey method for comparing a family of 7 estimates"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#new-information",
    "href": "r-modeling/slides/3-LinearModels.html#new-information",
    "title": "Linear Models (and more!)",
    "section": "New Information!",
    "text": "New Information!\nSuppose you find out from the researchers that are actually only two fungicides used. Treatment 1 is a standard fungicide, Truban (T), and is used as a control in the experiment. Treatments 2-7 are the experimental fungicide, Nurell (N), that is applied at different times and rates. The researchers want to compare T and N to see if there is a difference between these two fungicide treatments."
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#how-do-we-address-this-new-information",
    "href": "r-modeling/slides/3-LinearModels.html#how-do-we-address-this-new-information",
    "title": "Linear Models (and more!)",
    "section": "How do we address this new information?",
    "text": "How do we address this new information?\n\nContrast!\nWe can write a specific test that uses our model from before to test for a difference between T and N.\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n\nT\nN\nN\nN\nN\nN\nN\n\n\n\\(\\mu_1\\)\n\\(\\mu_2\\)\n\\(\\mu_3\\)\n\\(\\mu_4\\)\n\\(\\mu_5\\)\n\\(\\mu_6\\)\n\\(\\mu_7\\)\n\n\n\n\nWe would average together treatments 2-7 and compare to treatment 1.\n\n\\[H_0: \\mu_1 = \\frac{\\mu_2 + \\mu_3 + \\mu_4 + \\mu_5 + \\mu_6 + \\mu_7}{6}\\]\n\\[H_A: \\mu_1 \\ne \\frac{\\mu_2 + \\mu_3 + \\mu_4 + \\mu_5 + \\mu_6 + \\mu_7}{6}\\]"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#contrasts-in-r-1",
    "href": "r-modeling/slides/3-LinearModels.html#contrasts-in-r-1",
    "title": "Linear Models (and more!)",
    "section": "Contrasts in R",
    "text": "Contrasts in R\n\nIf you care about the estimate and standard error:\n\n\nlibrary(gmodels)\nfit.contrast(mod.fit, \"Trt.new\", c(1, -1/6, -1/6, -1/6, -1/6, -1/6, -1/6))\n\n                                                                                                                                   Estimate\nTrt.new c=( 1 -0.166666666666667 -0.166666666666667 -0.166666666666667 -0.166666666666667 -0.166666666666667 -0.166666666666667 ) -1.738095\n                                                                                                                                  Std. Error\nTrt.new c=( 1 -0.166666666666667 -0.166666666666667 -0.166666666666667 -0.166666666666667 -0.166666666666667 -0.166666666666667 )   2.333819\n                                                                                                                                     t value\nTrt.new c=( 1 -0.166666666666667 -0.166666666666667 -0.166666666666667 -0.166666666666667 -0.166666666666667 -0.166666666666667 ) -0.7447429\n                                                                                                                                   Pr(&gt;|t|)\nTrt.new c=( 1 -0.166666666666667 -0.166666666666667 -0.166666666666667 -0.166666666666667 -0.166666666666667 -0.166666666666667 ) 0.4605743\nattr(,\"class\")\n[1] \"fit_contrast\""
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#contrasts-in-r-2",
    "href": "r-modeling/slides/3-LinearModels.html#contrasts-in-r-2",
    "title": "Linear Models (and more!)",
    "section": "Contrasts in R",
    "text": "Contrasts in R\n\nIf you only care about the test:\n\n\nfit.contrast(mod.fit, \"Trt.new\", c(6, -1, -1, -1, -1, -1, -1))\n\n                                   Estimate\nTrt.new c=( 6 -1 -1 -1 -1 -1 -1 ) -10.42857\n                                  Std. Error\nTrt.new c=( 6 -1 -1 -1 -1 -1 -1 )   14.00292\n                                     t value\nTrt.new c=( 6 -1 -1 -1 -1 -1 -1 ) -0.7447429\n                                   Pr(&gt;|t|)\nTrt.new c=( 6 -1 -1 -1 -1 -1 -1 ) 0.4605743\nattr(,\"class\")\n[1] \"fit_contrast\"\n\n\n\nAgain, no evidence there is a difference between the mean fresh weight of T and N."
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#more-information",
    "href": "r-modeling/slides/3-LinearModels.html#more-information",
    "title": "Linear Models (and more!)",
    "section": "More information!",
    "text": "More information!\nNow that the researchers know there isn’t a difference between the T and N fungicides, they want to know more about the N fungicide specifically. You learn that this fungicide was applied either 3 days before inoculation or 7 days after inoculation. Additionally, it is applied at either the 1 oz., 3 oz., or 5 oz. dose rates.\n\n\n\n\n\n\n\n\n\n\n\nN\nN\nN\nN\nN\nN\n\n\n\n\n3 days before\n3 days before\n3 days before\n7 days after\n7 days after\n7 days after\n\n\n1 oz.\n3 oz.\n5 oz.\n1 oz.\n3 oz.\n5 oz.\n\n\n\nNow, instead of a single treatment factor, we have 2! We have time of application and rate of application. Thus, a One-Way ANOVA will no longer suffice."
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#two-way-anova-1",
    "href": "r-modeling/slides/3-LinearModels.html#two-way-anova-1",
    "title": "Linear Models (and more!)",
    "section": "Two-Way ANOVA",
    "text": "Two-Way ANOVA\n\nExtension of One-Way ANOVA, we just now have two treatment factors instead of one.\nWhen dealing with more than one treatment factor, our treatment design is now a factorial.\nYou have an \\(i \\times j\\) factorial\n\n\\(i\\) is the number of levels of treatment 1\n\\(j\\) is the number of levels of treatment 2\nSo in our example, we have a \\(2 \\times 3\\) factorial.\n\nWe are interested in knowing if the two treatment factors interact in their effect on the response.\n\nIf the response of one factor strongly depends on the level of the other factor, the two factors are said to interact."
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#model-1",
    "href": "r-modeling/slides/3-LinearModels.html#model-1",
    "title": "Linear Models (and more!)",
    "section": "Model",
    "text": "Model\n\\[y_{ijk} = \\mu + \\alpha_i + \\beta_j + \\alpha\\beta_{ij} + \\varepsilon_{ijk}\\]\n\n\\(y_{ijk}\\) is the response of the \\(k^{th}\\) observation in the \\(i^{th}\\) treatment level of treatment 1 and the \\(j^{th}\\) treatment level of treatment 2\n\\(\\mu\\) is the overall/grand mean\n\\(\\alpha_i\\) is the effect of the \\(i^{th}\\) treatment level of treatment 1\n\\(\\beta_j\\) is the effect of the \\(j^{th}\\) treatment level of treatment 2\n\\(\\alpha\\beta_{ij}\\) is the interaction effect of the \\(i^{th}\\) and \\(j^th\\) treatment levels of treatments 1 and 2 respectively\n\\(\\varepsilon_{ijk} \\sim N(0,\\sigma^2)\\) is the residual error"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#model-cont.",
    "href": "r-modeling/slides/3-LinearModels.html#model-cont.",
    "title": "Linear Models (and more!)",
    "section": "Model cont.",
    "text": "Model cont.\nIn terms of our example:\n\n\\(y_{ijk}\\) is the fresh weight of the \\(k^{th}\\) azalea in the \\(i^{th}\\) treatment level of time of application and the \\(j^{th}\\) treatment level of application rate\n\\(\\mu\\) is the overall/grand mean\n\\(\\alpha_i\\) is the effect of the \\(i^{th}\\) treatment level of time of application\n\\(\\beta_j\\) is the effect of the \\(j^{th}\\) treatment level of application rate\n\\(\\alpha\\beta_{ij}\\) is the interaction effect of the \\(i^{th}\\) and \\(j^th\\) treatment levels of time of application and application rate respectively\n\\(\\varepsilon_{ijk} \\sim N(0,\\sigma^2)\\) is the residual error"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#hypotheses-1",
    "href": "r-modeling/slides/3-LinearModels.html#hypotheses-1",
    "title": "Linear Models (and more!)",
    "section": "Hypotheses",
    "text": "Hypotheses\n\nThe first set of hypotheses we analyze with a Two-Way ANOVA is a test of the interaction.\n\n\\[H_0: \\text{There is no interaction.}\\] \\[H_A: \\text{There is an interaction.}\\]\n\nIf we reject the null hypothesis and conclude there is an interaction, we proceed by looking at the simple effects.\n\nThe difference between means of two levels of one factor at a single level of the other factor.\n\nIf we fail to reject the null hypothesis and conclude there is no evidence of an interaction, we proceed by looking at the main effects.\n\nThe means for each level of one factor averaged over the levels of the other."
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#two-way-anova-in-r",
    "href": "r-modeling/slides/3-LinearModels.html#two-way-anova-in-r",
    "title": "Linear Models (and more!)",
    "section": "Two-Way ANOVA in R",
    "text": "Two-Way ANOVA in R\n\nazalea2 &lt;- read.csv(\"https://raw.githubusercontent.com/unl-statistics/R-workshops/main/r-modeling/data/AzaleaTwoWay.csv\")\n\n\nazalea2$AppTime.new &lt;- as.factor(azalea2$AppTime)\nazalea2$AppRate.new &lt;- as.factor(azalea2$AppRate)\nmod.fit2 &lt;- lm(Weight ~ AppTime.new + AppRate.new + AppTime.new:AppRate.new, data = azalea2)\nAnova(mod.fit2, type = \"III\")\n\nAnova Table (Type III tests)\n\nResponse: Weight\n                         Sum Sq Df  F value\n(Intercept)             10260.6  1 291.9675\nAppTime.new                34.6  1   0.9837\nAppRate.new               114.0  2   1.6220\nAppTime.new:AppRate.new     4.3  2   0.0617\nResiduals                1265.1 36         \n                        Pr(&gt;F)    \n(Intercept)             &lt;2e-16 ***\nAppTime.new             0.3279    \nAppRate.new             0.2116    \nAppTime.new:AppRate.new 0.9403    \nResiduals                         \n---\nSignif. codes:  \n0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#results",
    "href": "r-modeling/slides/3-LinearModels.html#results",
    "title": "Linear Models (and more!)",
    "section": "Results",
    "text": "Results\n\n\nNo evidence of an interaction between the time of application and application rate.\nNo evidence of a main effect of time of application.\nWe have strong evidence there is a main effect of application rate.\nThus, we look at the main effect of application rate using emmeans.\n\n\n\nemmeans(mod.fit2, pairwise ~ AppRate.new)\n\n$emmeans\n AppRate.new emmean   SE df lower.CL upper.CL\n 1             36.7 1.58 36     33.5     39.9\n 3             37.9 1.58 36     34.6     41.1\n 5             42.5 1.58 36     39.3     45.7\n\nResults are averaged over the levels of: AppTime.new \nConfidence level used: 0.95 \n\n$contrasts\n contrast                    estimate   SE df\n AppRate.new1 - AppRate.new3    -1.14 2.24 36\n AppRate.new1 - AppRate.new5    -5.79 2.24 36\n AppRate.new3 - AppRate.new5    -4.64 2.24 36\n t.ratio p.value\n  -0.510  0.8669\n  -2.582  0.0365\n  -2.072  0.1100\n\nResults are averaged over the levels of: AppTime.new \nP value adjustment: tukey method for comparing a family of 3 estimates"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#but-what-if-there-had-been-an-interaction",
    "href": "r-modeling/slides/3-LinearModels.html#but-what-if-there-had-been-an-interaction",
    "title": "Linear Models (and more!)",
    "section": "But what if there HAD been an interaction?",
    "text": "But what if there HAD been an interaction?\n\nStill use the emmeans function!\nIn the pairwise part of the argument, use the vertical bar, |, to denote which treatment factor you want to keep constant.\n\nFactor you want to look at differences of | Factor you want to keep constant"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#but-what-if-there-had-been-an-interaction-1",
    "href": "r-modeling/slides/3-LinearModels.html#but-what-if-there-had-been-an-interaction-1",
    "title": "Linear Models (and more!)",
    "section": "But what if there HAD been an interaction?",
    "text": "But what if there HAD been an interaction?\n\nemmeans(mod.fit2, pairwise ~ AppRate.new|AppTime.new)\n\n$emmeans\nAppTime.new = 1:\n AppRate.new emmean   SE df lower.CL upper.CL\n 1             38.3 2.24 36     33.7     42.8\n 3             38.7 2.24 36     34.2     43.3\n 5             43.4 2.24 36     38.9     48.0\n\nAppTime.new = 2:\n AppRate.new emmean   SE df lower.CL upper.CL\n 1             35.1 2.24 36     30.6     39.7\n 3             37.0 2.24 36     32.5     41.5\n 5             41.6 2.24 36     37.0     46.1\n\nConfidence level used: 0.95 \n\n$contrasts\nAppTime.new = 1:\n contrast                    estimate   SE df\n AppRate.new1 - AppRate.new3   -0.429 3.17 36\n AppRate.new1 - AppRate.new5   -5.143 3.17 36\n AppRate.new3 - AppRate.new5   -4.714 3.17 36\n t.ratio p.value\n  -0.135  0.9900\n  -1.623  0.2492\n  -1.488  0.3086\n\nAppTime.new = 2:\n contrast                    estimate   SE df\n AppRate.new1 - AppRate.new3   -1.857 3.17 36\n AppRate.new1 - AppRate.new5   -6.429 3.17 36\n AppRate.new3 - AppRate.new5   -4.571 3.17 36\n t.ratio p.value\n  -0.586  0.8284\n  -2.029  0.1198\n  -1.443  0.3303\n\nP value adjustment: tukey method for comparing a family of 3 estimates"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#but-what-if-there-had-been-an-interaction-2",
    "href": "r-modeling/slides/3-LinearModels.html#but-what-if-there-had-been-an-interaction-2",
    "title": "Linear Models (and more!)",
    "section": "But what if there HAD been an interaction?",
    "text": "But what if there HAD been an interaction?\n\nemmeans(mod.fit2, pairwise ~ AppTime.new|AppRate.new)\n\n$emmeans\nAppRate.new = 1:\n AppTime.new emmean   SE df lower.CL upper.CL\n 1             38.3 2.24 36     33.7     42.8\n 2             35.1 2.24 36     30.6     39.7\n\nAppRate.new = 3:\n AppTime.new emmean   SE df lower.CL upper.CL\n 1             38.7 2.24 36     34.2     43.3\n 2             37.0 2.24 36     32.5     41.5\n\nAppRate.new = 5:\n AppTime.new emmean   SE df lower.CL upper.CL\n 1             43.4 2.24 36     38.9     48.0\n 2             41.6 2.24 36     37.0     46.1\n\nConfidence level used: 0.95 \n\n$contrasts\nAppRate.new = 1:\n contrast                    estimate   SE df\n AppTime.new1 - AppTime.new2     3.14 3.17 36\n t.ratio p.value\n   0.992  0.3279\n\nAppRate.new = 3:\n contrast                    estimate   SE df\n AppTime.new1 - AppTime.new2     1.71 3.17 36\n t.ratio p.value\n   0.541  0.5918\n\nAppRate.new = 5:\n contrast                    estimate   SE df\n AppTime.new1 - AppTime.new2     1.86 3.17 36\n t.ratio p.value\n   0.586  0.5615"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#another-twist",
    "href": "r-modeling/slides/3-LinearModels.html#another-twist",
    "title": "Linear Models (and more!)",
    "section": "Another Twist!",
    "text": "Another Twist!\nIn the previous analysis, we treated application rate as a qualitative/categorical variable, meaning the researchers are only interested in the levels of 1 oz., 3 oz., and 5 oz. You learn the researchers actually want to be able to predict the fresh weight of azaleas that were given N at the 2 oz. rate.\n\nBefore, we were analyzing a qualitative/qualitative factorial, where both treatment factors are qualitative.\nNow, we want to change the analysis to a qualitative/quantitative factorial.\n\nTime of application remains a qualitative variable.\nApplication rate is updated to a quantitative."
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#quantqual-factorial",
    "href": "r-modeling/slides/3-LinearModels.html#quantqual-factorial",
    "title": "Linear Models (and more!)",
    "section": "Quant/Qual Factorial",
    "text": "Quant/Qual Factorial\n\nWe are now adding in regression to our factorial analysis.\nWant to know if the same line can be fit for the two levels time of application\n\nIn other words, does the time of application effect the prediction of fresh weight of azaleas for the rate of application?\nIn other, other words, is there an interaction?\n\nOur hypotheses are very similar to what they were earlier. We just now need to add in a test of shape for the regression lines.\n\nTo determine the maximum power of your regression line, take the number of levels of your quantitative factor and subtract 1.\nSo for our example, we have 3 levels. Thus, we can fit up to a maximum power of 2 (a quadratic)."
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#quantqual-factorial-in-r",
    "href": "r-modeling/slides/3-LinearModels.html#quantqual-factorial-in-r",
    "title": "Linear Models (and more!)",
    "section": "Quant/Qual Factorial in R",
    "text": "Quant/Qual Factorial in R\n\nNeed to use orthogonal contrasts in order to test for shape. Outside the scope of this workshop.\n\nThese contrasts are nicely built into R.\n\n\n\nmod.fit3 &lt;- aov(Weight ~ AppTime.new + AppRate.new + AppTime.new:AppRate.new, data = azalea2)\nsummary(mod.fit3, split=list(AppRate.new = list(Linear=1, Quad=2)))\n\n                                  Df Sum Sq\nAppTime.new                        1   52.6\nAppRate.new                        2  262.9\n  AppRate.new: Linear              1   28.6\n  AppRate.new: Quad                1  234.3\nAppTime.new:AppRate.new            2    4.3\n  AppTime.new:AppRate.new: Linear  1    1.4\n  AppTime.new:AppRate.new: Quad    1    2.9\nResiduals                         36 1265.1\n                                  Mean Sq F value\nAppTime.new                         52.60   1.497\nAppRate.new                        131.45   3.741\n  AppRate.new: Linear               28.58   0.813\n  AppRate.new: Quad                234.32   6.668\nAppTime.new:AppRate.new              2.17   0.062\n  AppTime.new:AppRate.new: Linear    1.44   0.041\n  AppTime.new:AppRate.new: Quad      2.89   0.082\nResiduals                           35.14        \n                                  Pr(&gt;F)  \nAppTime.new                       0.2291  \nAppRate.new                       0.0334 *\n  AppRate.new: Linear             0.3731  \n  AppRate.new: Quad               0.0140 *\nAppTime.new:AppRate.new           0.9403  \n  AppTime.new:AppRate.new: Linear 0.8407  \n  AppTime.new:AppRate.new: Quad   0.7758  \nResiduals                                 \n---\nSignif. codes:  \n0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#model-based-on-our-actual-results",
    "href": "r-modeling/slides/3-LinearModels.html#model-based-on-our-actual-results",
    "title": "Linear Models (and more!)",
    "section": "Model based on our actual results",
    "text": "Model based on our actual results\n\nNeed to get estimates for our coefficients. \\[y = 37.4554 - 1.1786*rate + 0.4375*rate^2\\]\n\n\nmod.fit4 &lt;- lm(Weight ~ AppRate + I(AppRate^2), data = azalea2)\nsummary(mod.fit4)\n\n\nCall:\nlm(formula = Weight ~ AppRate + I(AppRate^2), data = azalea2)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-13.7143  -3.3393   0.3929   4.0357   9.5000 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)   37.4554     3.5548  10.537  5.7e-13\nAppRate       -1.1786     2.9112  -0.405    0.688\nI(AppRate^2)   0.4375     0.4764   0.918    0.364\n                \n(Intercept)  ***\nAppRate         \nI(AppRate^2)    \n---\nSignif. codes:  \n0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.822 on 39 degrees of freedom\nMultiple R-squared:  0.1659,    Adjusted R-squared:  0.1231 \nF-statistic: 3.878 on 2 and 39 DF,  p-value: 0.02911"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#if-there-had-been-an-interaction",
    "href": "r-modeling/slides/3-LinearModels.html#if-there-had-been-an-interaction",
    "title": "Linear Models (and more!)",
    "section": "If there had been an interaction?",
    "text": "If there had been an interaction?\n\nFor 3 days before: \\(y = 39.0565 - 1.3393*rate + 0.4375*rate^2\\)\nFor 7 days after: \\(y = 35.8541 - 1.0179*rate + 0.4375*rate^2\\)\n\n\nmod.fit5 &lt;- lm(Weight ~ AppTime.new + AppRate + I(AppRate^2) + AppTime.new:AppRate, data = azalea2)\nsummary(mod.fit5)\n\n\nCall:\nlm(formula = Weight ~ AppTime.new + AppRate + I(AppRate^2) + \n    AppTime.new:AppRate, data = azalea2)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-12.2738  -4.0119   0.2798   4.4702   9.7262 \n\nCoefficients:\n                     Estimate Std. Error t value\n(Intercept)           39.0565     4.0406   9.666\nAppTime.new2          -3.2024     3.7767  -0.848\nAppRate               -1.3393     2.9772  -0.450\nI(AppRate^2)           0.4375     0.4788   0.914\nAppTime.new2:AppRate   0.3214     1.1057   0.291\n                     Pr(&gt;|t|)    \n(Intercept)          1.15e-11 ***\nAppTime.new2            0.402    \nAppRate                 0.655    \nI(AppRate^2)            0.367    \nAppTime.new2:AppRate    0.773    \n---\nSignif. codes:  \n0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.851 on 37 degrees of freedom\nMultiple R-squared:  0.2009,    Adjusted R-squared:  0.1145 \nF-statistic: 2.325 on 4 and 37 DF,  p-value: 0.07446"
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#last-twist",
    "href": "r-modeling/slides/3-LinearModels.html#last-twist",
    "title": "Linear Models (and more!)",
    "section": "Last Twist!",
    "text": "Last Twist!\nYou learn the researchers actually 7 plots, and they made sure all six treatment combinations of the N fungicide were included. The researchers completed the experiment in a Randomized Complete Block Design! (Note: We are also going to go back to the assumption it is a qualitative/qualitative analysis.)\n\nA block allows us to group experimental units together such that the variance expected within the block is a lot smaller than the variance between blocks.\n\nThink of a plot of land with a river running along one side.\n\nWe typically assume blocks are a random sample from the population, and thus, our sample of blocks is representative of the population of similar constructed blocks.\n\nMakes the effect of the block a random effect."
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#rcbd-models-examples",
    "href": "r-modeling/slides/3-LinearModels.html#rcbd-models-examples",
    "title": "Linear Models (and more!)",
    "section": "RCBD Models Examples",
    "text": "RCBD Models Examples\n\nOne-Way ANOVA\n\n\\[y_{ij} = \\mu + \\tau_i + b_j + \\varepsilon_{ij}\\]\n\n\\(b_j \\sim N(0,\\sigma_b^2)\\) is the effect of the \\(j^{th}\\) block\nThe rest of the aspects of the model are basically the same as before. Description of subscripts changes.\nTwo-Way ANOVA\n\n\\[y_{ijk} = \\mu + \\alpha_i + \\beta_j + \\alpha\\beta_{ij} + b_k + \\varepsilon_{ijk}\\]\n\n\\(b_k \\sim N(0,\\sigma_b^2)\\) is the effect of the \\(k^{th}\\) block\nThe rest of the aspects of the model are basically the same as before. Description of subscripts changes."
  },
  {
    "objectID": "r-modeling/slides/3-LinearModels.html#rcbd-analysis-in-r",
    "href": "r-modeling/slides/3-LinearModels.html#rcbd-analysis-in-r",
    "title": "Linear Models (and more!)",
    "section": "RCBD Analysis in R",
    "text": "RCBD Analysis in R\n\nazalea3 &lt;- read.csv(\"https://raw.githubusercontent.com/unl-statistics/R-workshops/main/r-modeling/data/AzaleaBlock.csv\")\n\n\nazalea3$AppTime.new &lt;- as.factor(azalea3$AppTime)\nazalea3$AppRate.new &lt;- as.factor(azalea3$AppRate)\nazalea3$Block.new &lt;- as.factor(azalea3$Block)\nlibrary(lme4)\nmod.fit6 &lt;- lmer(Weight ~ AppTime.new + AppRate.new + AppTime.new:AppRate.new + (1|Block.new), data = azalea3)\nAnova(mod.fit3, type = \"III\")\n\nAnova Table (Type III tests)\n\nResponse: Weight\n                         Sum Sq Df  F value\n(Intercept)             10260.6  1 291.9675\nAppTime.new                34.6  1   0.9837\nAppRate.new               114.0  2   1.6220\nAppTime.new:AppRate.new     4.3  2   0.0617\nResiduals                1265.1 36         \n                        Pr(&gt;F)    \n(Intercept)             &lt;2e-16 ***\nAppTime.new             0.3279    \nAppRate.new             0.2116    \nAppTime.new:AppRate.new 0.9403    \nResiduals                         \n---\nSignif. codes:  \n0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-graphics/index.html",
    "href": "r-graphics/index.html",
    "title": "Graphics with ggplot2",
    "section": "",
    "text": "After the end of Graphics with ggplot, we expect you to be able to do the following:"
  },
  {
    "objectID": "r-graphics/index.html#timetable",
    "href": "r-graphics/index.html#timetable",
    "title": "Graphics with ggplot2",
    "section": "Timetable",
    "text": "Timetable\n\n\n\nTime\nNotes\nLectures and Resources\n\n\n\n\n9 - 9:45\nLook at that!\nbasic plots: scatterplots, boxplots, histograms, barcharts and more  some aesthetics: color, shape, …  1-GraphicsIntro.R\n\n\n9:45 - 10:30\nBasics\nWhy is data visualization important?.  Data Types, Formats, and Structures  Formatting your data: A tidy data discussion  2-Basics.R\n\n\n10:30 - 10:45\nBreak\n\n\n\n10:45 - 12:00\nLayers of Graphics\nMore detailed look at the ggplot2 package: layers, geoms. 3-Layers.R\n\n\n12:00 - 1:00\nLunch Break (on your own)\n\n\n\n1:00 - 2:30\nWhat do we see?\nDiscussion of faceting and cognitive aspects of human perception. 4-Perception.R\n\n\n2:30 - 2:45\nBreak\n\n\n\n2:45 - 3:50\nPolishing your plots\nFinishing touches: options, themes. 5-PolishingPlots.R\n\n\n3:50 - 4:00\nEvaluation\nHelp us make the workshops better!"
  },
  {
    "objectID": "r-graphics/index.html#solutions",
    "href": "r-graphics/index.html#solutions",
    "title": "Graphics with ggplot2",
    "section": "Solutions",
    "text": "Solutions\n\nYour Turn Solutions"
  },
  {
    "objectID": "r-graphics/index.html#useful-links",
    "href": "r-graphics/index.html#useful-links",
    "title": "Graphics with ggplot2",
    "section": "Useful Links",
    "text": "Useful Links\n\nR graphics with ggplot2\n\nggplot2 cheat sheet\nggplot2 aesthetics cheat sheet\nggplot2 reference guide\nCombine multiple plots with the patchwork, cowplot, and gridExtra packages\nggplot2 Elegant Graphics for Data Analysis by Hadley Wickham, Danielle Navarro, and Thomas Lin Pedersen\nmaps in ggplot2\nggplot2 Extensions see also slides by Ashirwad Barnwal\n\n\n\nTypes of Charts and Chart Styling\n\nThe R Graph Gallery\nR Graph Catalog\nThe Data Vis Project\nData Visualization Catalogue\nThe pros and cons of chart taxonomies\nData Visualization Style Guidelines"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#what-is-a-plot",
    "href": "r-graphics/slides/3-Layers.html#what-is-a-plot",
    "title": "Data Visualization",
    "section": "What is a plot?",
    "text": "What is a plot?\nggplot2 uses the idea that you can build every graph from the same components:\n\na data set\na coordinate system\ngeoms - visual marks that represent data\n\n\nto display values, map variables in the data to visual properties of the geom (aesthetics) like size, color, and x and y locations"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#how-to-build-a-graph",
    "href": "r-graphics/slides/3-Layers.html#how-to-build-a-graph",
    "title": "Data Visualization",
    "section": "How to build a graph",
    "text": "How to build a graph\nComplete the template below to build a graph"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#how-to-build-a-graph-1",
    "href": "r-graphics/slides/3-Layers.html#how-to-build-a-graph-1",
    "title": "Data Visualization",
    "section": "How to build a graph",
    "text": "How to build a graph\nggplot(data = mpg, aes(x = class, y = hwy))\n\nThis will begin a plot that you can finish by adding layers to.\nYou can add one geom per layer"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#your-turn",
    "href": "r-graphics/slides/3-Layers.html#your-turn",
    "title": "Data Visualization",
    "section": "Your Turn!",
    "text": "Your Turn!\nChange the code below to have the points on top of the boxplots.\n\nggplot(data = mpg, aes(x = class, y = hwy)) + \n  geom_jitter() + \n  geom_boxplot()"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#available-geoms",
    "href": "r-graphics/slides/3-Layers.html#available-geoms",
    "title": "Data Visualization",
    "section": "Available Geoms",
    "text": "Available Geoms"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#alternative-method-of-building-layers-stats",
    "href": "r-graphics/slides/3-Layers.html#alternative-method-of-building-layers-stats",
    "title": "Data Visualization",
    "section": "Alternative method of building layers: Stats",
    "text": "Alternative method of building layers: Stats\nA stat builds a new variable to plot (e.g., count and proportion)"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#faceting-options",
    "href": "r-graphics/slides/3-Layers.html#faceting-options",
    "title": "Data Visualization",
    "section": "Faceting Options",
    "text": "Faceting Options\n\nfacet_grid(. ~ b): facet into columns based on b\nfacet_grid(a ~ .): facet into rows based on a\nfacet_grid(a ~ b): facet into both rows and columns\nfacet_wrap( ~ fl): wrap facets into a rectangular layout\n\nYou can set scales to let axis limits vary across facets:\n\nfacet_grid(y ~ x, scales = \"free\"): x and y axis limits adjust to individual facets\n\n“free_x” - x axis limits adjust\n“free_y” - y axis limits adjust\n\n\nYou can also set a labeller to adjust facet labels: - facet_grid(. ~ fl, labeller = label_both) - facet_grid(. ~ fl, labeller = label_bquote(alpha ^ .(x))) - facet_grid(. ~ fl, labeller = label_parsed)"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#position-adjustments-jitter",
    "href": "r-graphics/slides/3-Layers.html#position-adjustments-jitter",
    "title": "Data Visualization",
    "section": "Position Adjustments: Jitter",
    "text": "Position Adjustments: Jitter\n\nJitter: Add random noise to X & Y position of each element to avoid overplotting\nThere is also a jitter geom"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#maps-1",
    "href": "r-graphics/slides/3-Layers.html#maps-1",
    "title": "Data Visualization",
    "section": "Maps",
    "text": "Maps\nPlotting geospatial data is a common visualization task, and one that requires specialized tools.\nTypically the problem can be decomposed into two problems:\n\nusing one data source to draw a map\nadding metadata from another information source to the map\n\nresource"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#example-nebraska-population",
    "href": "r-graphics/slides/3-Layers.html#example-nebraska-population",
    "title": "Data Visualization",
    "section": "Example: Nebraska Population",
    "text": "Example: Nebraska Population\nMap Source Data\n\nne_counties &lt;- map_data(\"county\", \"nebraska\")\n\n\n\n\n\n\nlong\nlat\ngroup\norder\nregion\nsubregion\n\n\n\n\n-98.72636\n40.69719\n1\n1\nnebraska\nadams\n\n\n-98.29664\n40.69719\n1\n2\nnebraska\nadams\n\n\n\n\n\nPopulation Data\n\nne_population &lt;- read.csv(\"https://raw.githubusercontent.com/unl-statistics/R-workshops/main/r-graphics/data/nebraska-population.csv\")\n\n\n\n\n\n\nsubregion\npopulation\n\n\n\n\nadams\n31205\n\n\nantelope\n6295"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#example-nebraska-population-1",
    "href": "r-graphics/slides/3-Layers.html#example-nebraska-population-1",
    "title": "Data Visualization",
    "section": "Example: Nebraska Population",
    "text": "Example: Nebraska Population\n\nggplot(ne_data) +\n  geom_polygon(aes(x = long, y = lat, group = group, fill = log(population)), color = \"black\") +\n  coord_map() +\n  theme_void() +\n  scale_fill_gradient(low = \"white\", high = \"green4\")"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#libraryggforce",
    "href": "r-graphics/slides/3-Layers.html#libraryggforce",
    "title": "Data Visualization",
    "section": "library(ggforce)",
    "text": "library(ggforce)\n\nlibrary(ggforce)\nggplot(iris, aes(Petal.Length, Petal.Width, colour = Species)) +\n  geom_point() +\n  facet_zoom(x = Species == 'versicolor') #&lt;&lt;"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#libraryggvoronoi",
    "href": "r-graphics/slides/3-Layers.html#libraryggvoronoi",
    "title": "Data Visualization",
    "section": "library(ggvoronoi)",
    "text": "library(ggvoronoi)"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#libraryggridges",
    "href": "r-graphics/slides/3-Layers.html#libraryggridges",
    "title": "Data Visualization",
    "section": "library(ggridges)",
    "text": "library(ggridges)\n\nBy Claus O. Wilke"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#libraryggrepel",
    "href": "r-graphics/slides/3-Layers.html#libraryggrepel",
    "title": "Data Visualization",
    "section": "library(ggrepel)",
    "text": "library(ggrepel)\n\nThe ggrepel library, as illustrated by Allison Horst"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#librarypatchwork",
    "href": "r-graphics/slides/3-Layers.html#librarypatchwork",
    "title": "Data Visualization",
    "section": "library(patchwork)",
    "text": "library(patchwork)\n\nPatchwork, as illustrated by Allison Horst"
  },
  {
    "objectID": "r-graphics/slides/3-Layers.html#ggplot2-extensions",
    "href": "r-graphics/slides/3-Layers.html#ggplot2-extensions",
    "title": "Data Visualization",
    "section": "ggplot2 extensions",
    "text": "ggplot2 extensions\nCheck out slides for some frequently used extensions by Ashirwad Barnwal HERE.\n\n\nUNL R Workshops"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#why-is-data-visualization-important",
    "href": "r-graphics/slides/2-Basics.html#why-is-data-visualization-important",
    "title": "Data Visualization",
    "section": "Why is data visualization important?",
    "text": "Why is data visualization important?\n\nExploratory Data Analysis (EDA)\n\nExamples:\n\nAnscombe’s Quartet Exercise"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#anscombes-quartet",
    "href": "r-graphics/slides/2-Basics.html#anscombes-quartet",
    "title": "Data Visualization",
    "section": "Anscombe’s Quartet",
    "text": "Anscombe’s Quartet\n\n4 data sets that have nearly identical simple statistical properties that appear very different when graphed\ndemonstrate both the importance of graphing data before analyzing it and the effect of outliers on statistical properties\n11 (x,y) points\nthe same mean, median, standard deviation, and correlation coefficient between x and y"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#anscombes-quartet-data",
    "href": "r-graphics/slides/2-Basics.html#anscombes-quartet-data",
    "title": "Data Visualization",
    "section": "Anscombe’s Quartet: data",
    "text": "Anscombe’s Quartet: data\n\n\n\n\n\nSet I\n\n\nx\ny\n\n\n\n\n10\n8.04\n\n\n8\n6.95\n\n\n13\n7.58\n\n\n9\n8.81\n\n\n11\n8.33\n\n\n14\n9.96\n\n\n6\n7.24\n\n\n4\n4.26\n\n\n12\n10.84\n\n\n7\n4.82\n\n\n5\n5.68\n\n\n\n\n\n\n\n\n\n\n\nSet II\n\n\nx\ny\n\n\n\n\n10\n9.14\n\n\n8\n8.14\n\n\n13\n8.74\n\n\n9\n8.77\n\n\n11\n9.26\n\n\n14\n8.10\n\n\n6\n6.13\n\n\n4\n3.10\n\n\n12\n9.13\n\n\n7\n7.26\n\n\n5\n4.74\n\n\n\n\n\n\n\n\n\n\n\nSet III\n\n\nx\ny\n\n\n\n\n10\n7.46\n\n\n8\n6.77\n\n\n13\n12.74\n\n\n9\n7.11\n\n\n11\n7.81\n\n\n14\n8.84\n\n\n6\n6.08\n\n\n4\n5.39\n\n\n12\n8.15\n\n\n7\n6.42\n\n\n5\n5.73\n\n\n\n\n\n\n\n\n\n\n\nSet IV\n\n\nx\ny\n\n\n\n\n8\n6.58\n\n\n8\n5.76\n\n\n8\n7.71\n\n\n8\n8.84\n\n\n8\n8.47\n\n\n8\n7.04\n\n\n8\n5.25\n\n\n19\n12.50\n\n\n8\n5.56\n\n\n8\n7.91\n\n\n8\n6.89"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#anscombes-quartet-summary-statistics",
    "href": "r-graphics/slides/2-Basics.html#anscombes-quartet-summary-statistics",
    "title": "Data Visualization",
    "section": "Anscombe’s Quartet: summary statistics",
    "text": "Anscombe’s Quartet: summary statistics\n \n\n\n\n\n\n\nI\nII\nIII\nIV\n\n\n\n\nmean(x)\n9\n9\n9\n9\n\n\nsd(x)\n3.32\n3.32\n3.32\n3.32\n\n\nmean(y)\n7.5\n7.5\n7.5\n7.5\n\n\nsd(y)\n2.03\n2.03\n2.03\n2.03\n\n\ncor(x,y)\n0.82\n0.82\n0.82\n0.82\n\n\n\n\n\n\n\n\neach data set has the same mean, standard deviation, and correlation coefficient between x and y."
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#anscombes-quartet-plots",
    "href": "r-graphics/slides/2-Basics.html#anscombes-quartet-plots",
    "title": "Data Visualization",
    "section": "Anscombe’s Quartet: plots",
    "text": "Anscombe’s Quartet: plots\n\n\nplot y versus x for each set with a linear regression trendline displayed on each plot:\nThis classic example really illustrates the importance of looking at your data, not just the summary statistics and model parameters you compute from it."
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#data",
    "href": "r-graphics/slides/2-Basics.html#data",
    "title": "Data Visualization",
    "section": "Data",
    "text": "Data\nBefore it’s possible to talk about a graphical grammar, it’s important to know the type and format of the data you’re working with.\n\n\n\nWhy?\n\n\n\n\nthe data contains all of the information you’re trying to convey\nthe appropriate graphical techniques depend on the kind of data that you are working with\nWorking with R and ggplot is much easier if the data you use is in the right shape."
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#data-levels-of-measurement",
    "href": "r-graphics/slides/2-Basics.html#data-levels-of-measurement",
    "title": "Data Visualization",
    "section": "Data: levels of measurement",
    "text": "Data: levels of measurement\n\n\nQuantitative:\n\nContinuous\n\ne.g. height, weight\n\nDiscrete\n\ne.g. age in years\n\n\n\n\nQualitative:\n- Nominal\n- categories have no meaningful order\n-   e.g. colors\n\nOrdinal\n\ncategories have order but no meaningful distance between categories\ne.g. five star ratings"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#data-dimensionality-form-and-type",
    "href": "r-graphics/slides/2-Basics.html#data-dimensionality-form-and-type",
    "title": "Data Visualization",
    "section": "Data: Dimensionality, Form, and Type",
    "text": "Data: Dimensionality, Form, and Type\n\n\nDimensions\n\nUnivariate\n\n1 variable\n\nBivariate\n\n2 variables\n\nMultivariate\n\n2+ variables\n\n\nForms\n\nTraditional\nAggregated\n\n\nTypes\n\nCount\n\nWord Frequency\nSports Statistics\n\nTime Series\nSpatial\nTime to Event\n\nSurvival\nReliability\n\nCategorical"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#exploring-relationships",
    "href": "r-graphics/slides/2-Basics.html#exploring-relationships",
    "title": "Data Visualization",
    "section": "Exploring Relationships",
    "text": "Exploring Relationships\n\nContinuous vs. Continuous\n\nscatter plot, line plot\n\nContinuous vs. Categorical\n\nboxplots, dotcharts, multiple density plots, violin plots\n\nCategorical vs. Categorical\n\nmosaicplots, side-by-side barplots\n\nMultidimensional\n\n\nResources\n\nThe Data Vis Project\nData Visualization Catalogue"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#data-format",
    "href": "r-graphics/slides/2-Basics.html#data-format",
    "title": "Data Visualization",
    "section": "Data format",
    "text": "Data format\n\nWorking with R and ggplot is much easier if the data you use is in the right shape.\nUnlike base graphics, ggplot works with dataframes and not individual vectors.\nAll the data needed to make the plot is typically contained within the dataframe\nggplot expects your data to be in a particular sort of shape - “tidy data”"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#same-data-different-layouts",
    "href": "r-graphics/slides/2-Basics.html#same-data-different-layouts",
    "title": "Data Visualization",
    "section": "Same data, different layouts",
    "text": "Same data, different layouts\n\n\n\nOption 1:\n\n\n\n\n\n\n\n\nName\nTreatment A\nTreatment B\n\n\n\n\nJohn Smith\nNA\n18\n\n\nJane Doe\n4\n1\n\n\nMary Johnson\n6\n7\n\n\n\nOption 2:\n\n\n\n\n\n\n\n\n\nTreatment\nJohn Smith\nJane Doe\nMary Johnson\n\n\n\n\n A\nNA\n4\n6\n\n\n B\n18\n1\n7\n\n\n\n\nOption 3:\n\n\n\n\n\n\n\n\nName\nTreatment\nMeasurement\n\n\n\n\nJohn Smith\nA\nNA\n\n\nJohn Smith\nB\n18\n\n\nJane Doe\nA\n4\n\n\nJane Doe\nB\n1\n\n\nMary Johnson\nA\n6\n\n\nMary Johnson\nB\n7\n\n\n\n\n\n\n\nThe data is the same, but the layout is different. Our vocabulary of rows and columns is simply not rich enough to describe why the two tables represent the same data. In addition to appearance, we need a way to describe the underlying semantics, or meaning, of the values displayed in the table"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#wide-format-vs.-long-format",
    "href": "r-graphics/slides/2-Basics.html#wide-format-vs.-long-format",
    "title": "Data Visualization",
    "section": "Wide Format vs. Long Format",
    "text": "Wide Format vs. Long Format\n\n\nWide format\n\nsome variables are spread out across columns.\ntypically uses less space to display\nhow you would typically choose to present your data\nfar less repetition of labels and row elements\n\n\n\nLong format\n\neach variable is a column\neach observation is a row\nis likely not the data’s most compact form"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#tidy-data",
    "href": "r-graphics/slides/2-Basics.html#tidy-data",
    "title": "Data Visualization",
    "section": "Tidy Data",
    "text": "Tidy Data\n\n\n\nLike families…, by Allison Horst"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#tidy-data-1",
    "href": "r-graphics/slides/2-Basics.html#tidy-data-1",
    "title": "Data Visualization",
    "section": "Tidy Data",
    "text": "Tidy Data\n\nEach variable is a column\nEach observation is a row\nEach type of observational unit forms a table\n\n\n\n\n\n\n\n\n\n\nName\nTreatment\nMeasurement\n\n\n\n\nJohn Smith\nA\nNA\n\n\nJohn Smith\nB\n18\n\n\nJane Doe\nA\n4\n\n\nJane Doe\nB\n1\n\n\nMary Johnson\nA\n6\n\n\nMary Johnson\nB\n7"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#messy-data",
    "href": "r-graphics/slides/2-Basics.html#messy-data",
    "title": "Data Visualization",
    "section": "Messy data",
    "text": "Messy data\nHappy families are all alike; every unhappy family is unhappy in its own way. - Leo Tolstoy"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#messy-data-1",
    "href": "r-graphics/slides/2-Basics.html#messy-data-1",
    "title": "Data Visualization",
    "section": "Messy data",
    "text": "Messy data\nHappy families are all alike; every unhappy family is unhappy in its own way. - Leo Tolstoy\nFive main ways tables of data tend not to be tidy:\n\nColumn headers are values, not variable names.\nMultiple variables are stored in one column.\nVariables are stored in both rows and columns.\nMultiple types of observational units are stored in the same table.\nA single observational unit is stored in multiple tables."
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#tidy-your-data",
    "href": "r-graphics/slides/2-Basics.html#tidy-your-data",
    "title": "Data Visualization",
    "section": "Tidy your data",
    "text": "Tidy your data\n\ndata(french_fries, package = \"reshape2\")\nhead(french_fries)\n\nWide Format:\n\n\n\n\n\ntime\ntreatment\nsubject\nrep\npotato\nbuttery\ngrassy\nrancid\npainty\n\n\n\n\n1\n1\n3\n1\n2.9\n0.0\n0.0\n0.0\n5.5\n\n\n1\n1\n3\n2\n14.0\n0.0\n0.0\n1.1\n0.0\n\n\n1\n1\n10\n1\n11.0\n6.4\n0.0\n0.0\n0.0\n\n\n1\n1\n10\n2\n9.9\n5.9\n2.9\n2.2\n0.0\n\n\n1\n1\n15\n1\n1.2\n0.1\n0.0\n1.1\n5.1\n\n\n1\n1\n15\n2\n8.8\n3.0\n3.6\n1.5\n2.3"
  },
  {
    "objectID": "r-graphics/slides/2-Basics.html#tidy-your-data-1",
    "href": "r-graphics/slides/2-Basics.html#tidy-your-data-1",
    "title": "Data Visualization",
    "section": "Tidy your data",
    "text": "Tidy your data\n\nfrench_fries_long &lt;- french_fries %&gt;% \n  pivot_longer(cols = c(\"potato\":\"painty\"), #&lt;&lt;\n               names_to = \"variable\", #&lt;&lt;\n               values_to = \"value\") #&lt;&lt;\nhead(french_fries_long)\n\nLong Format:\n\n\n\n\n\ntime\ntreatment\nsubject\nrep\nvariable\nvalue\n\n\n\n\n1\n1\n3\n1\npotato\n2.9\n\n\n1\n1\n3\n1\nbuttery\n0.0\n\n\n1\n1\n3\n1\ngrassy\n0.0\n\n\n1\n1\n3\n1\nrancid\n0.0\n\n\n1\n1\n3\n1\npainty\n5.5\n\n\n1\n1\n3\n2\npotato\n14.0\n\n\n\n\n\n\n\nMore on tidy data later!"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#why-are-some-plots-easier-to-read-than-others",
    "href": "r-graphics/slides/4-Perception.html#why-are-some-plots-easier-to-read-than-others",
    "title": "Data Visualization",
    "section": "Why are some plots easier to read than others?",
    "text": "Why are some plots easier to read than others?\nWhat makes bad figures bad?\n\nissues can be (1) aesthetic, (2) substantive, and/or (3) perceptual\n\n\nWe have now learned about how to create a graphic, but how do we know if we are creating a “good” graphic? A chart is good if it allows the user to draw useful conclusions that are supported by data. Aesthetics choices, substantive content, or perceptual biases may affect the clarity of plots."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#why-are-some-plots-easier-to-read-than-others-1",
    "href": "r-graphics/slides/4-Perception.html#why-are-some-plots-easier-to-read-than-others-1",
    "title": "Data Visualization",
    "section": "Why are some plots easier to read than others?",
    "text": "Why are some plots easier to read than others?\nWhat makes bad figures bad?\n\nissues can be (1) aesthetic, (2) substantive, and/or (3) perceptual \nEdward R. Tufte is a better known critic of this style of visualization\nGraphical excellence is the well-designed presentation of interesting data and consists of:\n\ncomplex ideas communicated with clarity, precision, and efficiency\nmaximizes the “data-to-ink” ratio.\nnearly always multivariate\nrequires telling the truth about the data.\n\ndefines “chartjunk” as superfluous details\n\n\nIn learning how to create a graphic, we have seen there are many decisions we make when designing a graphic: the type of chart, colors, shapes, scales, etc. These aesthetic design choices we make can impact the way the chart is read. Edward Tufte has publically been a critic of chart design advocating for the most simplistic chart to minimize “chartjunk”. While chartjunk is not entirely devoid of merit, bear in mind that ease of recall is only one virtue amongst many for graphics."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#why-are-some-plots-easier-to-read-than-others-2",
    "href": "r-graphics/slides/4-Perception.html#why-are-some-plots-easier-to-read-than-others-2",
    "title": "Data Visualization",
    "section": "Why are some plots easier to read than others?",
    "text": "Why are some plots easier to read than others?\nWhat makes bad figures bad?\n\nissues can be (1) aesthetic, (2) substantive, and/or (3) perceptual \nbad data\n\n\nA good graphic can’t fix bad data. Recall that we create graphics by mapping the variables in the data set to attributes on the chart, what is in the data set shows up in the figure."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#why-are-some-plots-easier-to-read-than-others-3",
    "href": "r-graphics/slides/4-Perception.html#why-are-some-plots-easier-to-read-than-others-3",
    "title": "Data Visualization",
    "section": "Why are some plots easier to read than others?",
    "text": "Why are some plots easier to read than others?\nWhat makes bad figures bad?\n\nissues can be (1) aesthetic, (2) substantive, and/or (3) perceptual  \nLooking at pictures of data means looking at lines, shapes, and colors\nOur visual system works in a way that makes some things easier for us to see than others\n“Preattentive” features\nGestalt Principles\ncolor and contrast\n\n\nWhen interpreting a graphic, we are visually observing different features of the figure. While our visual system is amazing, it is not always as accurate as the computers we use to render graphics. We have physical limits in the number of colors we can perceive, our short term memory, attention, and our ability to accurately read information off of charts in different forms. We will discuss how an understanding of preattentive features and the gestalt principles can help us make decisions about how to display our data in order to reduce the cognitive load necessary to interpret a plot."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#good-graphics",
    "href": "r-graphics/slides/4-Perception.html#good-graphics",
    "title": "Data Visualization",
    "section": "Good Graphics",
    "text": "Good Graphics\nGraphics consist of:\n\nStructure: boxplot, scatterplot, etc.\nAesthetics: features such as color, shape, and size that map other characteristics to structural features\n\nBoth the structure and aesthetics should help viewers interpret the information."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#which-has-more-structure",
    "href": "r-graphics/slides/4-Perception.html#which-has-more-structure",
    "title": "Data Visualization",
    "section": "Which has more structure?",
    "text": "Which has more structure?\n\n\nWe look for structure all the time. We are so good at it that we will find it in random data, given time. (This is one of the reasons that data visualization can hardly be a replacement for statistical modeling.) The strong inferences we make about relationships between visual elements from relatively sparse visual information are called “gestalt rules”. They are not pure perceptual effects, like the checkerboard illusions. Rather, they describe our tendency to infer relationships between the objects we are looking at in a way that goes beyond what is strictly visible."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#gestalt-principles-1",
    "href": "r-graphics/slides/4-Perception.html#gestalt-principles-1",
    "title": "Data Visualization",
    "section": "Gestalt principles",
    "text": "Gestalt principles\n\n\ngestalt = form or pattern Gestalt philosophy: the whole is greater than the sum of the parts\nGestalt principles: Predictable ways by which we organize sensory information."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#gestalt-principles-2",
    "href": "r-graphics/slides/4-Perception.html#gestalt-principles-2",
    "title": "Data Visualization",
    "section": "Gestalt principles",
    "text": "Gestalt principles\nWhat sorts of relationships are inferred, and under what circumstances?\n\nProximity: Things that are spatially near to one another are related.\nSimilarity: Things that look alike are related.\nEnlosure: A group of related elements are surrounded with a visual element\nSymmetry: If an object is asymmetrical, the viewer will waste time trying to find the problem instead of concentrating on the instruction.\nClosure: Incomplete shapes are perceived as complete.\nContinuity: Partially hidden objects are completed into familiar shapes.\nConnection: Things that are visually tied to one another are related.\nFigure/Ground: Visual elements are either in the foreground or the background."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#gestalt-principles-3",
    "href": "r-graphics/slides/4-Perception.html#gestalt-principles-3",
    "title": "Data Visualization",
    "section": "Gestalt principles",
    "text": "Gestalt principles\n\n\n\n\n\nGestalt Hierarchy\nGraphs\n\n\n\n\nEnclosure\nFacets\n\n\nConnection\nLines\n\n\nProximitiy\nWhite Space\n\n\nSimilarity\nColor/Shape\n\n\n\n\n\nImplications for practice + Know how we perceive groups + Know that we perceive some groups before others + Design to facilitate and emphasize the most important comparisons"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#gestalt-principles-case-study",
    "href": "r-graphics/slides/4-Perception.html#gestalt-principles-case-study",
    "title": "Data Visualization",
    "section": "Gestalt Principles: Case Study",
    "text": "Gestalt Principles: Case Study\n\nswimming &lt;- read.csv(\"https://raw.githubusercontent.com/unl-statistics/R-workshops/main/r-graphics/data/gestalt-swimming.csv\")\n\n\n\n\n  Location   WaterTemp     Time      AvgTemp     \n cheek:6   indoor :12   pre  :8   Min.   :48.60  \n elbow:6   outdoor:12   post1:8   1st Qu.:67.67  \n palm :6                post2:8   Median :84.25  \n pec  :6                          Mean   :78.70  \n                                  3rd Qu.:89.83  \n                                  Max.   :95.40"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#gestalt-principles-case-study-1",
    "href": "r-graphics/slides/4-Perception.html#gestalt-principles-case-study-1",
    "title": "Data Visualization",
    "section": "Gestalt Principles: Case Study",
    "text": "Gestalt Principles: Case Study\nResearch question: Does the average body temperature recovery as recorded at the four body points depend on water temperature?"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#gestalt-principles-case-study-2",
    "href": "r-graphics/slides/4-Perception.html#gestalt-principles-case-study-2",
    "title": "Data Visualization",
    "section": "Gestalt Principles: Case Study",
    "text": "Gestalt Principles: Case Study"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#gestalt-principles-case-study-3",
    "href": "r-graphics/slides/4-Perception.html#gestalt-principles-case-study-3",
    "title": "Data Visualization",
    "section": "Gestalt Principles: Case Study",
    "text": "Gestalt Principles: Case Study\nResearch question: Does the average body temperature recovery as recorded at the four body points depend on water temperature?"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#pre-attentive-features-1",
    "href": "r-graphics/slides/4-Perception.html#pre-attentive-features-1",
    "title": "Data Visualization",
    "section": "Pre-Attentive Features",
    "text": "Pre-Attentive Features\n\n\nhow quickly did you spot the circle?"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#pre-attentive-features-2",
    "href": "r-graphics/slides/4-Perception.html#pre-attentive-features-2",
    "title": "Data Visualization",
    "section": "Pre-Attentive Features",
    "text": "Pre-Attentive Features\n\n\nDid you spot the green point quicker than the circle in the previous image?"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#pre-attentive-features-3",
    "href": "r-graphics/slides/4-Perception.html#pre-attentive-features-3",
    "title": "Data Visualization",
    "section": "Pre-Attentive Features",
    "text": "Pre-Attentive Features\nPre-Attentive Features are things that “jump out” in less than 250 ms\n\nColor, form, movement, spatial localization\n\nThere is a hierarchy of features\n\nColor is stronger than shape\nCombinations of pre-attentive features are usually not pre-attentive due to interference"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#pre-attentive-features-4",
    "href": "r-graphics/slides/4-Perception.html#pre-attentive-features-4",
    "title": "Data Visualization",
    "section": "Pre-attentive Features",
    "text": "Pre-attentive Features"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#pre-attentive-features-5",
    "href": "r-graphics/slides/4-Perception.html#pre-attentive-features-5",
    "title": "Data Visualization",
    "section": "Pre-attentive Features",
    "text": "Pre-attentive Features"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#color-1",
    "href": "r-graphics/slides/4-Perception.html#color-1",
    "title": "Data Visualization",
    "section": "Color",
    "text": "Color\nOur eyes are optimized for perceiving the yellow/green region of the color spectrum.\n\nSensitivity of the human eye to different wavelengths of visual light (Image from Wikimedia commons)\nOur eyes are optimized for perceiving the yellow/green region of the color spectrum. Why? Well, our sun produces yellow light, and plants tend to be green. It’s pretty important to be able to distinguish different shades of green (evolutionarily speaking) because it impacts your ability to feed yourself. There aren’t that many purple or blue predators, so there is less selection pressure to improve perception of that part of the visual spectrum."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#color-blindness",
    "href": "r-graphics/slides/4-Perception.html#color-blindness",
    "title": "Data Visualization",
    "section": "Color blindness",
    "text": "Color blindness\nNot everyone perceives color in the same way. Some individuals have colorblindness or color deficiencies.\nYou can take a test designed to screen for colorblindness here."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#context",
    "href": "r-graphics/slides/4-Perception.html#context",
    "title": "Data Visualization",
    "section": "Context",
    "text": "Context\nColor is context-sensitive: A and B are the same intensity and hue, but appear to be different.\n\nEdward Adelson’s checkershadow illusion\nIn addition to colorblindness, there are other factors than the actual color value which are important in how we experience color, such as context.\nOur brains are extremely dependent on context and make excellent use of the large amounts of experience we have with the real world. As a result, we implicitly “remove” the effect of things like shadows as we make sense of the input to the visual system. This can result in odd things, like the checkerboard and shadow shown above - because we’re correcting for the shadow, B looks lighter than A even though when the context is removed they are clearly the same shade."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#color-implications-and-guidelines",
    "href": "r-graphics/slides/4-Perception.html#color-implications-and-guidelines",
    "title": "Data Visualization",
    "section": "Color: Implications and Guidelines",
    "text": "Color: Implications and Guidelines\n\n\n\n\nTo “colorblind-proof” a graphic, you can use a couple of strategies:\n\ndouble encoding - where you use color, use another aesthetic (line type, shape)\nIf you can print your chart out in black and white and still read it, it will be safe for colorblind users. This is the only foolproof way to do it!\nIf you are using a color gradient, use a monochromatic color scheme where possible.\nIf you have a bidirectional scale (e.g. showing positive and negative values), the safest scheme to use is purple - white - orange. In any color scale that is multi-hue, it is important to transition through white, instead of from one color to another directly.\n\n\n\n\nDo not use rainbow color gradient schemes.\nAvoid any scheme that uses green-yellow-red signaling if you have a target audience that may include colorblind people.\nBe conscious of what certain colors “mean”\n\n\n\n\n\n\nDo not use rainbow color gradient schemes - because of the unequal perception of different wavelengths, these schemes are misleading - the color distance does not match the perceptual distance.\nAvoid any scheme that uses green-yellow-red signaling if you have a target audience that may include colorblind people.\nTo “colorblind-proof” a graphic, you can use a couple of strategies:\n\ndouble encoding - where you use color, use another aesthetic (line type, shape) as well to help your colorblind readers out\nIf you can print your chart out in black and white and still read it, it will be safe for colorblind users. This is the only foolproof way to do it!\nIf you are using a color gradient, use a monochromatic color scheme where possible. This is perceived as light -&gt; dark by colorblind people, so it will be correctly perceived no matter what color you use.\nIf you have a bidirectional scale (e.g. showing positive and negative values), the safest scheme to use is purple - white - orange. In any color scale that is multi-hue, it is important to transition through white, instead of from one color to another directly.\n\nBe conscious of what certain colors “mean”\n\nLeveraging common associations can make it easier to read a color scale and remember what it stands for (e.g. blue for cold, orange/red for hot is a natural scale, red = Republican and blue = Democrat in the US, white -&gt; blue gradients for showing rainfall totals)\nSome colors can can provoke emotional responses that may not be desirable.\nIt is also important to be conscious of the social baggage that certain color schemes may have - the pink/blue color scheme often used to denote gender can be unnecessarily polarizing, and it may be easier to use a colder color (blue or purple) for men and a warmer color (yellow, orange, lighter green) for women.\n\nThere are packages such as RColorBrewer and dichromat that have color palettes which are aesthetically pleasing, and, in many cases, colorblind friendly (dichromat is better for that than RColorBrewer). You can also take a look at other ways to find nice color palettes."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#aesthetics-in-ggplot2-1",
    "href": "r-graphics/slides/4-Perception.html#aesthetics-in-ggplot2-1",
    "title": "Data Visualization",
    "section": "Aesthetics in ggplot2",
    "text": "Aesthetics in ggplot2\nAesthetics: features such as color, shape, and size that map other characteristics to structural features"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#aesthetics-in-ggplot2-2",
    "href": "r-graphics/slides/4-Perception.html#aesthetics-in-ggplot2-2",
    "title": "Data Visualization",
    "section": "Aesthetics in ggplot2",
    "text": "Aesthetics in ggplot2\nScales map data values to the visual values of an aesthetic\n\nto change a mapping, add a new scale"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#scales",
    "href": "r-graphics/slides/4-Perception.html#scales",
    "title": "Data Visualization",
    "section": "Scales",
    "text": "Scales"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#gradients",
    "href": "r-graphics/slides/4-Perception.html#gradients",
    "title": "Data Visualization",
    "section": "Gradients",
    "text": "Gradients\nQualitative schemes: no more than 7 colors\n\n\n\n\n\nCan use colorRampPalette() from the RColorBrewer package to produce larger palettes by interpolating existing ones\n\n\n\n\n\nQuantitative schemes: use color gradient with only one hue for positive values"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#more-gradients",
    "href": "r-graphics/slides/4-Perception.html#more-gradients",
    "title": "Data Visualization",
    "section": "More Gradients",
    "text": "More Gradients\nQuantitative schemes: use color gradient with two hues for positive and negative values. Gradient should go through a light, neutral color (white)\n\nSmall objects or thin lines need more contrast than larger areas"
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#factors-vs.-continuous-variables",
    "href": "r-graphics/slides/4-Perception.html#factors-vs.-continuous-variables",
    "title": "Data Visualization",
    "section": "Factors vs. Continuous variables",
    "text": "Factors vs. Continuous variables\n\nFactor variable:\n\nscale_colour_discrete\nscale_colour_brewer(palette = ...)\n\nContinuous variable:\n\nscale_colour_gradient (define low, high values)\nscale_colour_gradient2 (define low, mid, and high values)\nEquivalents for fill: scale_fill_..."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#color-in-ggplot2",
    "href": "r-graphics/slides/4-Perception.html#color-in-ggplot2",
    "title": "Data Visualization",
    "section": "Color in ggplot2",
    "text": "Color in ggplot2\nThere are packages available for use that have color scheme options.\nSome Examples:\n\nRcolorbrewer\nggsci\nviridis\nwes anderson\n\nThere are packages such as RColorBrewer and dichromat that have color palettes which are aesthetically pleasing, and, in many cases, colorblind friendly.\nYou can also take a look at other ways to find nice color palettes."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#color-in-ggplot2-1",
    "href": "r-graphics/slides/4-Perception.html#color-in-ggplot2-1",
    "title": "Data Visualization",
    "section": "Color in ggplot2",
    "text": "Color in ggplot2\n\nThere are packages available for use that have color schemes options."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#your-turn",
    "href": "r-graphics/slides/4-Perception.html#your-turn",
    "title": "Data Visualization",
    "section": "Your Turn",
    "text": "Your Turn\n\ndata(diamonds)\n\n\nIn the diamonds data, clarity and cut are ordinal, while price and carat are continuous.\nCreate a graphic that gives an overview of these four variables while respecting their types.\nDiscuss your graphic with a neighbor."
  },
  {
    "objectID": "r-graphics/slides/4-Perception.html#your-turn-1",
    "href": "r-graphics/slides/4-Perception.html#your-turn-1",
    "title": "Data Visualization",
    "section": "Your Turn",
    "text": "Your Turn\nThe movies data set contains information from IMDB.com including ratings, genre, length in minutes, and year of release.\n\nmovies &lt;- read.csv(\"https://raw.githubusercontent.com/unl-statistics/R-workshops/main/r-graphics/data/MovieSummary.csv\")\n\n\nExplore the differences in length, rating, etc. in movie genres over time.\nHint: use faceting!\nDiscuss your graphic with a neighbor.\n\n\n\nUNL R Workshops"
  }
]