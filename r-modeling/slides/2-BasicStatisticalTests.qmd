---
title: "Basic Statistical Tests"
---

```{r setup, include=FALSE}
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
	echo = FALSE,
	message = FALSE,
	warning = FALSE,
	cache = TRUE
)

library(tidyverse)
library(knitr)
library(kableExtra)
library(ggsci)
```

## Outline

+ p-values

+ confidence intervals

+ t-tests

+ chi-square tests

+ simple regression

## Five Step Hypothesis Testing Procedure

+ Step 1: State your null and alternate hypothesis. 

+ Step 2: Collect data. 

+ Step 3: Perform a statistical test. 

+ Step 4: Decide whether to reject or fail to reject your null hypothesis. 

+ Step 5: Present your findings.

::: notes

+ Step 1: State your null and alternate hypothesis. 
  + (the prediction that you want to investigate)
  + The alternate hypothesis is usually your initial hypothesis that predicts a relationship between variables. The null hypothesis is a prediction of no relationship between the variables you are interested in.

+ Step 2: Collect data. 
  + For a statistical test to be valid, it is important to perform sampling and collect data in a way that is designed to test your hypothesis. If your data are not representative, then you cannot make statistical inferences about the population you are interested in.

+ Step 3: Perform a statistical test. 
  + There are a variety of statistical tests available, but they are all based on the comparison of within-group variance (how spread out the data is within a category) versus between-group variance (how different the categories are from one another).

+ Step 4: Decide whether to reject or fail to reject your null hypothesis. 
  + Based on the outcome of your statistical test, you will have to decide whether to reject or fail to reject your null hypothesis.
  + In most cases you will use the p-value generated by your statistical test to guide your decision. And in most cases, your predetermined level of significance for rejecting the null hypothesis will be 0.05 – that is, when there is a less than 5% chance that you would see these results if the null hypothesis were true.

+ Step 5: Present your findings.
  + The results of hypothesis testing will be presented in the results and discussion sections of your research paper.
:::

## Statistical Hypotheses

+ **Null Hypothesis** what we are hoping to disprove?

+ **Alternative Hypothesis** if random chance isn’t the reason, then what?

## What is a p-value?

![[Image source: [Susan VanderPlas UNL Extension](https://srvanderplas.github.io/UNL-extension-APL/experimental-design-and-statistical-analysis.html#the-logic-of-statistical-hypothesis-testing)]{.small}](images/p-value-logic.png)



::: notes


The p-value is the probability of observing the data we saw under the null hypothesis ($H_0$)

A p-value is the area under the reference distribution where values are as or more extreme than the hypothesized value.
 
If the p-value is low (p $< \alpha$), where $\alpha = 0.05, 0.01,$ or another pre-specified value) then we know that it is relatively unlikely to observe our data under $H_0$ which means that it is more likely that $H_0$ is false and $H_A$ is true.

:::

## What is a p-value?

![[Image source: [Susan VanderPlas UNL Extension](https://srvanderplas.github.io/UNL-extension-APL/experimental-design-and-statistical-analysis.html#the-logic-of-statistical-hypothesis-testing)]{.small}](images/two-sided-test.png)


## What is a confidence interval?

```{r, echo=FALSE, out.width="40%", fig.align = 'center', fig.cap="Confidence intervals are a range of values around the central estimate obtained from the sample data."}
knitr::include_graphics("images/confidence-interval-best-est-uncertainty.png")
```

[Image source: [Susan VanderPlas UNL Extension](https://srvanderplas.github.io/UNL-extension-APL/experimental-design-and-statistical-analysis.html#the-logic-of-statistical-hypothesis-testing)]{.small}

::: notes
Sometimes, we don’t want to test whether a parameter is equal to a specific value - instead, we might want to know what that value is (or at least, a range of possible values for that parameter).

In this case, we construct a confidence interval - a set of plausible values for the parameter.

We can think of a confidence interval as our best estimate of the parameter value + uncertainty.

Confidence intervals, like hypothesis tests, are conducted based on a parameter $\alpha$ representing the acceptable level of error. If we want to be 95% confident in our estimate, our interval will be wider than if we want to be 90% confident in our estimate – we have to include more values to get a wider interval.
:::

## Penguins Data

```{r penguins-data, eval = T, purl = T, echo = T}
data(penguins, package = "palmerpenguins")
```

![](images/palmer-penguins.png)

## Two-sample independent t-test

**Research Question** Is there a difference in the body mass (g) of penguins between male and female penguins?

::: columns
::: column
**Data**
```{r penguins-ttest-data}
penguins2 <- penguins %>%
  select(sex, body_mass_g) %>%
  na.omit()

penguins2[1:3,] %>% kable()%>%
  kable_styling(font_size = 25)
```

**Numerical Summary**

```{r penguins-ttest-summary}
penguins2 %>%
  group_by(sex) %>%
  summarize(mean = mean(body_mass_g),
            sd = sd(body_mass_g)) %>% 
  kable(digits = 1)%>%
  kable_styling(font_size = 25)
```
:::
::: column

**Graphical Summary**

```{r penguins-ttest-boxplot, fig.width = 6, fig.height = 6}
penguins2 %>%
  ggplot(aes(x = sex, y = body_mass_g, color = sex, fill = sex)) +
  geom_boxplot(alpha = 0.1, width = 0.5) +
  geom_point(shape = 1, position = position_jitter(width = 0.2)) +
  theme_bw() +
  theme(aspect.ratio = 1,
        axis.text = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.position = "none") +
  ylab("Body Mass (g)") +
  xlab("Sex") +
  scale_color_locuszoom()  +
  scale_fill_locuszoom()
```


:::
:::

## Two-sample t-test {.smaller}

```{r ttest-echo, echo = T, eval = F, purl = F}
help(t.test)
t.test(y ~ x, 
       data = data_name,
       alternative = “two.sided”, 
       mu = 0, 
       paired = FALSE, 
       var.equal = FALSE, 
       conf.level = 0.95)
```

+ **y:** The variable name of the quantitative response.
+ **x:** The variable name of the grouping variable (or treatment).
+ **data:** The name of the data set
+ **alternative:** The alternative hypothesis. Options include “two.sided”, “less”, or “greater.”
+ **mu:** The value assumed to be the true difference in means.
+ **paired:** Whether or not to use a paired t-test.
+ **var.equal:** Whether or not the variances are equal between the two groups.
+ **conf.level:** The confidence level to use for the test.

::: notes

**Test for equal variances**
```{r, penguin, equal variance, echo = T}
library(car)
leveneTest(penguins2$body_mass_g, group = penguins2$sex, center = mean)
```

:::


## Two-sample independent t-test {.smaller}

+ *Null:* the mean body mass for female penguins is equal to the mean body mass for male penguins (female - male $= 0$)
+ *Alternative:* the mean body mass for female penguins is **not** equal to the mean body mass for male penguins (female - male $\ne 0$)

```{r penguins-ttest-echo, echo = T, eval = F, purl = T}
penguins_ttest <- t.test(body_mass_g ~ sex, data = penguins2) #<<
penguins_ttest
```

```{r penguins-ttest, echo = F, purl = F, eval = T}
penguins_ttest <- t.test(body_mass_g ~ sex, data = penguins2)
penguins_ttest
```

## Two-sample independent t-test (table results) {.smaller}

**Extract specific output**

```{r, penguins-ttest-results-echo, echo = T, eval = F, purl = T}
penguins_ttest$statistic
penguins_ttest$df
penguins_ttest$p.value
```

**Summarize results with `library(broom)`**

```{r, penguins-ttest-broom-echo, echo = T, eval = F, purl = T}
install.packages("broom")
library(broom)
penguins_results <- tidy(penguins_ttest) #<<
penguins_results
```

```{r penguins-ttest-broom, echo = F, purl = F, eval = T}
library(broom)
penguins_results <- tidy(penguins_ttest)
penguins_results %>%  
  mutate(p.value = scales::pvalue(p.value)) %>%
  kable(format = 'html', digits = 1) %>% kable_styling("striped") %>% scroll_box(width = "100%")%>%
  kable_styling(font_size = 25)
``` 

## Two-sample independent t-test (graphical results)

```{r penguins-ttest-graph-results-echo, echo = T, purl = T, eval = F, fig.align='center', fig.width = 7, fig.height = 3.5}
ggplot(penguins_results, aes(x = NA, y = estimate)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.2) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  theme_bw() +
  theme(aspect.ratio = 0.5, axis.text.y = element_blank()) +
  xlab("") + ylab("Difference in Body Mass \n (Female - Male)") +
  coord_flip()
``` 

```{r penguins-ttest-graph-results, echo = F, purl = F, eval = T, fig.align='center', fig.width = 8, fig.height = 4}
ggplot(penguins_results, aes(x = NA, y = estimate)) +
  geom_point(size = 2) +
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.1) +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  theme_bw() +
  theme(aspect.ratio = 0.5,
        axis.text.y = element_blank(),
        axis.text = element_text(size = 16),
        axis.title = element_text(size = 18)) +
  xlab("") +
  ylab("Difference in Penguin Body Mass \n (Female - Male)") +
  coord_flip()
``` 

## Your Turn {.inverse}

+ What if you wanted the difference to be male - female? (Hint: use `relevel()`)

+ The default confidence level is 95%, how would you change it to a 90% confidence level? 
  + Does your p-value change?
  + How about your confidence interval?
  
## Your Turn
+ What if you wanted the difference to be male - female?

```{r penguins-ttest-yourturn1-echo1, purl = F, echo = T, eval = T}
levels(penguins2$sex)
penguins2$sex <- relevel(penguins2$sex, ref = "male") #<<
levels(penguins2$sex)
```

```{r penguins-ttest-yourturn1-echo2, purl = F, echo = T, eval = F}
penguins_ttest2 <- t.test(body_mass_g ~ sex, data = penguins2)
penguins_ttest2
```

```{r penguins-ttest-yourturn1, purl = F, echo = F, eval = T}
penguins_ttest2 <- t.test(body_mass_g ~ sex, data = penguins2)
tidy(penguins_ttest2)   %>% 
  mutate(p.value = scales::pvalue(p.value)) %>%  
  kable(format = 'html', digits = 1) %>% kable_styling("striped", font_size=25) %>% scroll_box(width = "100%")
```


## Your Turn {.inverse .smaller}
+ The default confidence level is 95%, how would you change it to a 90% confidence level? 
  + Does your p-value change?
  + How about your confidence interval?

```{r penguins-ttest-yourturn-echo1, purl = F, echo = F, eval = T}
penguins_ttest2$p.value
penguins_ttest2$conf.int
```

```{r penguins-ttest-yourturn2-echo2, purl = F, echo = T, eval = F}
penguins_ttest3 <- t.test(body_mass_g ~ sex, 
                          data = penguins2, 
                          conf.level = 0.9) #<<
penguins_ttest3$p.value
penguins_ttest3$conf.int
```

```{r penguins-ttest-yourturn2, purl = F, echo = F, eval = T}
penguins_ttest3 <- t.test(body_mass_g ~ sex, data = penguins2, conf.level = 0.9)
penguins_ttest3$p.value
penguins_ttest3$conf.int
```

## Chi-square test of independence {.smaller}

**Research Question** Are island and the species of penguin associated?

::: columns

::: column
**Data**
```{r penguins-chisq-data}
penguins3 <- penguins %>%
  select(species, island) %>%
  na.omit()

penguins3[1:3,] %>% kable()
```

<br>
<br>
**Numerical Summary**

```{r penguins-chisq-summary}
with(penguins3, table(island, species))
```
:::
::: column

**Graphical Summary**
 
```{r penguins-chisq-mosaicplot, fig.height = 5.5, fig.width = 7}
library(ggmosaic)
ggplot(penguins3) +
  geom_mosaic(aes(x = product(island), fill = species), color = "white") +
  theme_test() +
  theme(aspect.ratio = 1,
        axis.text.y = element_blank(),
        axis.text = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.text = element_text(size = 16),
        legend.title = element_text(size = 18)) +
  ylab("Species") +
  xlab("Island") +
  scale_fill_locuszoom()
```

:::
:::

## Chi-square test of independence

```{r chisqtest-echo, echo = T, eval = F, purl = F}
help("chisq.test")
chisq.test(y ~ x, 
       data = data_name,
       simulate.p.value = FALSE,
       B = 2000)
```

## Chi-square test of independence

```{r penguins-chisq, echo = T, eval = T, purl = T}
chisq.test(penguins3$island, penguins3$species) #<<
chisq.test(penguins3$island, penguins3$species, 
           simulate.p.value = T) #<<
```

## Simple Regression {.smaller}

**Research Question** Is there a relationship between penguin body mass and flipper length?

::: columns
::: column
**Data**
```{r penguins-regression-data}
penguins4 <- penguins %>%
  select(body_mass_g, flipper_length_mm) %>%
  na.omit()

penguins4[1:3,] %>% kable()
```

<br>
<br>
**Numerical Summary**

Pearson Correlation
```{r penguins-regression-summary}
with(penguins4, cor(body_mass_g, flipper_length_mm))
```
:::

::: column

**Graphical Summary**
 
```{r penguins-regression-scatterplot, fig.height = 5, fig.width = 5}
ggplot(penguins4, aes(x = flipper_length_mm, y = body_mass_g)) +
  geom_point(shape = 1) +
  geom_smooth(method = "loess") +
  theme_bw() + 
  theme(aspect.ratio = 1,
        axis.text = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.text = element_text(size = 16),
        legend.title = element_text(size = 18)) +
  ylab("Flipper Length (mm)") +
  xlab("Body Mass (g)")
```

:::
:::

## Simple Regression

$$y = \text{intercept} + \text{slope} \cdot x + \text{error}$$

```{r regression, echo = T, eval = F, purl = F}
help(lm)
regression_mod <- lm(y ~ x, data = data_name)
summary(regression_mod)
```

## Simple Regression

```{r penguins-regression-mod, echo = T, purl = T, eval = T}
penguins_regression <- lm(body_mass_g ~ flipper_length_mm, data = penguins4) #<<
summary(penguins_regression)
```

## Simple Regression (evaluate model)
```{r penguins-assumptions, echo = T, purl = T, eval = T, fig.align='center', fig.align = 'center', fig.width = 6, fig.height = 6}
par(mfrow = c(2,2))
plot(penguins_regression)
par(mfrow = c(1,1))
```

## Simple Regression (results) {.smaller}

$$y_{i} = \beta_0 + \beta_1 \cdot x_{i} + \epsilon_{i}$$

+ $y_{i}$ is the body mass (g) for penguin $i = 1, ..., n$
+ $\beta_0$ is the intercept coefficient
+ $\beta_1$ is the slope coefficient
+ $x_{i}$ is the flipper length (mm) for penguin $i = 1, ..., n$
+ $\epsilon_i$ is the error for penguin $i = 1, ..., n$ where $\epsilon \sim N(0, \sigma^2)$

```{r penguins-regression-results-echo, echo = T, purl = T, eval = F}
tidy(penguins_regression)  %>% 
  mutate(p.value = scales::pvalue(p.value))
```

```{r penguins-regression-results, echo = F, purl = F, eval = T}
tidy(penguins_regression) %>% 
  mutate(p.value = scales::pvalue(p.value)) %>%
  kable(digits = 2)
```

$\text{body mass}_{i} = -5780.83 + 49.56 \cdot \text{flipper length}_{i} + \epsilon_{i}$ where $\epsilon \sim N(0, \sigma^2)$

## Simple Regression (results) {.smaller}

```{r penguins-regression-results2, echo = F, purl = F, eval = T}
tidy(penguins_regression) %>% 
  mutate(p.value = scales::pvalue(p.value)) %>%
  kable(digits = 2)
```

<br>

**Hypotheses**

$$H_0: \beta_1 = 0 \text{ (the slope is equal to 0)}$$
$$H_A: \beta_1 \ne 0 \text{ (the slope is not equal to 0)}$$

<br>

**Conclusion** 

We have evidence to conclude there is an association between flipper length and body mass (t = 32.72; df = 340; p < 0.0001).

## Simple Regression (results)

```{r penguins-regression-results-graph-echo, echo = T, purl = F, eval = F}
penguins_preds <- cbind(penguins4, predict(penguins_regression, interval = 'confidence')) #<<
ggplot(penguins_preds, aes(x = flipper_length_mm, y = body_mass_g)) +
  geom_point(shape = 1) +
  geom_line(aes(y = fitted(penguins_regression))) + #<<
  geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.3)  #<<
```

```{r penguins-regression-results-graph, echo = F, purl = T, eval = T, fig.align='center', fig.height = 5, fig.width = 9}
penguins_preds <- cbind(penguins4, predict(penguins_regression, interval = 'confidence'))
ggplot(penguins_preds, aes(x = flipper_length_mm, y = body_mass_g)) +
  geom_point(shape = 1, aes(color = "Observed")) +
  geom_line(aes(y = fit, color = "Fitted"), size = 1) +
  geom_ribbon(aes(ymin = lwr, ymax = upr, fill = "95% Confidence \n Interval"), alpha = 0.3) +
  theme_bw() + 
  theme(aspect.ratio = 1,
        axis.text = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.text = element_text(size = 16),
        legend.title = element_text(size = 18)) +
  scale_color_manual("", values = c("steelblue", "black")) +
  scale_fill_manual("", values = c("gray30")) +
  ylab("Flipper Length (mm)") +
  xlab("Body Mass (g)") 
```


## Your Turn: Simple Regression {.inverse .smaller}

Fit a linear regression line between bill length and bill depth for each species

```{r penguins-regression-bonus, purl = F, fig.align = 'center', fig.height = 6, fig.width = 8}
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species, fill = species)) +
  geom_point(shape = 1) +
  geom_smooth(method = "lm") +
  theme_bw() + 
  theme(aspect.ratio = 1,
        axis.text = element_text(size = 16),
        axis.title = element_text(size = 18),
        legend.text = element_text(size = 16),
        legend.title = element_text(size = 18)) +
  scale_color_locuszoom() +
  scale_fill_locuszoom() +
  ylab("Bill Depth (mm)") +
  xlab("Bill Length (mm)")
```

